var autocomplete_php = jQuery.parseJSON( '{"aggregate_info":{"desc":"Gets aggregation information for a given object","params":[{"required":"yes","param":"object $object"}],"returns":"array"},"apache_get_modules":{"desc":"Get a list of loaded Apache modules","params":[],"returns":"array"},"apache_request_headers":{"desc":"Fetch all HTTP request headers","params":[],"returns":"array"},"apache_response_headers":{"desc":"Fetch all HTTP response headers","params":[],"returns":"array"},"apc_add":{"desc":"Cache a variable in the data store","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"mixed $var = &#039;&#039;"},{"required":"no","param":"int $ttl = &#039;&#039;"},{"required":"yes","param":"array $values"},{"required":"no","param":"mixed $unused = &#039;&#039;"}],"returns":"array"},"apc_cache_info":{"desc":"Retrieves cached information from APC&#039;s data store","params":[{"required":"no","param":"string $cache_type = &#039;&#039;"},{"required":"no","param":"bool $limited = false"}],"returns":"array"},"apc_sma_info":{"desc":"Retrieves APC&#039;s Shared Memory Allocation information","params":[{"required":"no","param":"bool $limited = false"}],"returns":"array"},"apc_store":{"desc":"Cache a variable in the data store","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"mixed $var"},{"required":"no","param":"int $ttl = &#039;&#039;"},{"required":"yes","param":"array $values"},{"required":"no","param":"mixed $unused = &#039;&#039;"}],"returns":"array"},"apd_callstack":{"desc":"Returns the current call stack as an array","params":[],"returns":"array"},"apd_dump_persistent_resources":{"desc":"Return all persistent resources as an array","params":[],"returns":"array"},"apd_dump_regular_resources":{"desc":"Return all current regular resources as an array","params":[],"returns":"array"},"apd_get_active_symbols":{"desc":"Get an array of the current variables names in the local scope","params":[],"returns":"array"},"array":{"desc":"Create an array","params":[{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"array"},"array_change_key_case":{"desc":"Changes all keys in an array","params":[{"required":"yes","param":"array $input"},{"required":"no","param":"int $case = CASE_LOWER"}],"returns":"array"},"array_chunk":{"desc":"Split an array into chunks","params":[{"required":"yes","param":"array $input"},{"required":"yes","param":"int $size"},{"required":"no","param":"bool $preserve_keys = false"}],"returns":"array"},"array_combine":{"desc":"Creates an array by using one array for keys and another for its values","params":[{"required":"yes","param":"array $keys"},{"required":"yes","param":"array $values"}],"returns":"array"},"array_count_values":{"desc":"Counts all the values of an array","params":[{"required":"yes","param":"array $input"}],"returns":"array"},"array_diff":{"desc":"Computes the difference of arrays","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"}],"returns":"array"},"array_diff_assoc":{"desc":"Computes the difference of arrays with additional index check","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_diff_key":{"desc":"Computes the difference of arrays using keys for comparison","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_diff_uassoc":{"desc":"Computes the difference of arrays with additional index check which is performed by a user supplied callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $... = &#039;&#039;"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_diff_ukey":{"desc":"Computes the difference of arrays using a callback function on the keys for comparison","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_fill":{"desc":"Fill an array with values","params":[{"required":"yes","param":"int $start_index"},{"required":"yes","param":"int $num"},{"required":"yes","param":"mixed $value"}],"returns":"array"},"array_fill_keys":{"desc":"Fill an array with values, specifying keys","params":[{"required":"yes","param":"array $keys"},{"required":"yes","param":"mixed $value"}],"returns":"array"},"array_filter":{"desc":"Filters elements of an array using a callback function","params":[{"required":"yes","param":"array $input"},{"required":"no","param":"callback $callback = &#039;&#039;"}],"returns":"array"},"array_intersect":{"desc":"Computes the intersection of arrays","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"}],"returns":"array"},"array_intersect_assoc":{"desc":"Computes the intersection of arrays with additional index check","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"}],"returns":"array"},"array_intersect_key":{"desc":"Computes the intersection of arrays using keys for comparison","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"}],"returns":"array"},"array_intersect_uassoc":{"desc":"Computes the intersection of arrays with additional index check, compares indexes by a callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_intersect_ukey":{"desc":"Computes the intersection of arrays using a callback function on the keys for comparison","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $... = &#039;&#039;"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_keys":{"desc":"Return all the keys or a subset of the keys of an array","params":[{"required":"yes","param":"array $input"},{"required":"no","param":"mixed $search_value = &#039;&#039;"},{"required":"no","param":"bool $strict = false"}],"returns":"array"},"array_map":{"desc":"Applies the callback to the elements of the given arrays","params":[{"required":"yes","param":"callback $callback"},{"required":"yes","param":"array $arr1"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_merge":{"desc":"Merge one or more arrays","params":[{"required":"yes","param":"array $array1"},{"required":"no","param":"array $array2 = &#039;&#039;"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_merge_recursive":{"desc":"Merge two or more arrays recursively","params":[{"required":"yes","param":"array $array1"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_pad":{"desc":"Pad array to the specified length with a value","params":[{"required":"yes","param":"array $input"},{"required":"yes","param":"int $pad_size"},{"required":"yes","param":"mixed $pad_value"}],"returns":"array"},"array_pop":{"desc":"Pop the element off the end of array","params":[{"required":"yes","param":"array $array"}],"returns":"array"},"array_replace":{"desc":"Replaces elements from passed arrays into the first array","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"array $array1"},{"required":"no","param":"array $array2 = &#039;&#039;"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_replace_recursive":{"desc":"Replaces elements from passed arrays into the first array recursively","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"array $array1"},{"required":"no","param":"array $array2 = &#039;&#039;"},{"required":"no","param":"array $... = &#039;&#039;"}],"returns":"array"},"array_reverse":{"desc":"Return an array with elements in reverse order","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"bool $preserve_keys = false"}],"returns":"array"},"array_shift":{"desc":"Shift an element off the beginning of array","params":[{"required":"yes","param":"array $array"}],"returns":"array"},"array_slice":{"desc":"Extract a slice of the array","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"bool $preserve_keys = false"}],"returns":"array"},"array_splice":{"desc":"Remove a portion of the array and replace it with something else","params":[{"required":"yes","param":"array $input"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"mixed $replacement = &#039;&#039;"}],"returns":"array"},"array_udiff":{"desc":"Computes the difference of arrays by using a callback function for data comparison","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"}],"returns":"array"},"array_udiff_assoc":{"desc":"Computes the difference of arrays with additional index check, compares data by a callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"}],"returns":"array"},"array_udiff_uassoc":{"desc":"Computes the difference of arrays with additional index check, compares data and indexes by a callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_uintersect":{"desc":"Computes the intersection of arrays, compares data by a callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"}],"returns":"array"},"array_uintersect_assoc":{"desc":"Computes the intersection of arrays with additional index check, compares data by a callback function","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"}],"returns":"array"},"array_uintersect_uassoc":{"desc":"Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions","params":[{"required":"yes","param":"array $array1"},{"required":"yes","param":"array $array2"},{"required":"no","param":"array $ ... = &#039;&#039;"},{"required":"yes","param":"callback $data_compare_func"},{"required":"yes","param":"callback $key_compare_func"}],"returns":"array"},"array_unique":{"desc":"Removes duplicate values from an array","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_STRING"}],"returns":"array"},"array_values":{"desc":"Return all the values of an array","params":[{"required":"yes","param":"array $input"}],"returns":"array"},"bson_decode":{"desc":"Deserializes a BSON object into a PHP array","params":[{"required":"yes","param":"string $bson"}],"returns":"array"},"bzerror":{"desc":"Returns the bzip2 error number and error string in an array","params":[{"required":"yes","param":"resource $bz"}],"returns":"array"},"cairo_available_fonts":{"desc":"Retrieves the availables font types","params":[],"returns":"array"},"cairo_available_surfaces":{"desc":"Retrieves all available surfaces","params":[],"returns":"array"},"cairo_clip_extents":{"desc":"Computes the area inside the current clip","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_clip_rectangle_list":{"desc":"Retrieves the current clip as a list of rectangles","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_device_to_user":{"desc":"Transform a coordinate","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_device_to_user_distance":{"desc":"Transform a distance","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_fill_extents":{"desc":"Computes the filled area","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_font_extents":{"desc":"Get the font extents","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_get_current_point":{"desc":"The getCurrentPoint purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_get_dash":{"desc":"The getDash purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_matrix_transform_distance":{"desc":"Description","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"float $dx"},{"required":"yes","param":"float $dy"}],"returns":"array"},"cairo_matrix_transform_point":{"desc":"Description","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"float $dx"},{"required":"yes","param":"float $dy"}],"returns":"array"},"cairo_path_extents":{"desc":"The pathExtents purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_pattern_get_color_stop_rgba":{"desc":"Description","params":[{"required":"yes","param":"CairoGradientPattern $pattern"},{"required":"yes","param":"int $index"}],"returns":"array"},"cairo_pattern_get_linear_points":{"desc":"Description","params":[{"required":"yes","param":"CairoLinearGradient $pattern"}],"returns":"array"},"cairo_pattern_get_radial_circles":{"desc":"Description","params":[{"required":"yes","param":"CairoRadialGradient $pattern"}],"returns":"array"},"cairo_pattern_get_rgba":{"desc":"Description","params":[{"required":"yes","param":"CairoSolidPattern $pattern"}],"returns":"array"},"cairo_ps_get_levels":{"desc":"Description","params":[],"returns":"array"},"cairo_scaled_font_extents":{"desc":"Description","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"}],"returns":"array"},"cairo_scaled_font_glyph_extents":{"desc":"Description","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"},{"required":"yes","param":"array $glyphs"}],"returns":"array"},"cairo_scaled_font_text_extents":{"desc":"Description","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"},{"required":"yes","param":"string $text"}],"returns":"array"},"cairo_stroke_extents":{"desc":"The strokeExtents purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_surface_get_device_offset":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"array"},"cairo_svg_surface_get_versions":{"desc":"Used to retrieve a list of supported SVG versions","params":[],"returns":"array"},"cairo_text_extents":{"desc":"The textExtents purpose","params":[{"required":"yes","param":"string $text"},{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_user_to_device":{"desc":"The userToDevice purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cairo_user_to_device_distance":{"desc":"The userToDeviceDistance purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"array"},"cal_from_jd":{"desc":"Converts from Julian Day Count to a supported calendar","params":[{"required":"yes","param":"int $jd"},{"required":"yes","param":"int $calendar"}],"returns":"array"},"cal_info":{"desc":"Returns information about a particular calendar","params":[{"required":"no","param":"int $calendar = -1"}],"returns":"array"},"classkit_import":{"desc":"Import new class method definitions from a file","params":[{"required":"yes","param":"string $filename"}],"returns":"array"},"class_implements":{"desc":"Return the interfaces which are implemented by the given class","params":[{"required":"yes","param":"mixed $class"},{"required":"no","param":"bool $autoload = true"}],"returns":"array"},"class_parents":{"desc":"Return the parent classes of the given class","params":[{"required":"yes","param":"mixed $class"},{"required":"no","param":"bool $autoload = true"}],"returns":"array"},"compact":{"desc":"Create array containing variables and their values","params":[{"required":"yes","param":"mixed $varname"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"array"},"cubrid_column_names":{"desc":"Get the column names in result","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"array"},"cubrid_column_types":{"desc":"Get column types in result","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"array"},"cubrid_col_get":{"desc":"Get contents of collection type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"}],"returns":"array"},"cubrid_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $type = CUBRID_BOTH"}],"returns":"array"},"cubrid_fetch_assoc":{"desc":"Return the associative array that corresponds to the fetched row","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"cubrid_fetch_lengths":{"desc":"Return an array with the lengths of the values of each field from the current row","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"cubrid_fetch_row":{"desc":"Return a numerical array with the values of the current row","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"cubrid_get_db_parameter":{"desc":"Returns the CUBRID database parameters","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"array"},"cubrid_list_dbs":{"desc":"Return an array with the list of all existing CUBRID databases","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"array"},"cubrid_lob_get":{"desc":"Get BLOB/CLOB data","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $SQL"}],"returns":"array"},"cubrid_schema":{"desc":"Get the requested schema information","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"int $schema_type"},{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"string $attr_name = &#039;&#039;"}],"returns":"array"},"curl_multi_info_read":{"desc":"Get information about the current transfers","params":[{"required":"yes","param":"resource $mh"},{"required":"no","param":"int $msgs_in_queue = &#039;&#039;"}],"returns":"array"},"curl_version":{"desc":"Gets cURL version information","params":[{"required":"no","param":"int $age = CURLVERSION_NOW"}],"returns":"array"},"cyrus_query":{"desc":"Send a query to a Cyrus IMAP server","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $query"}],"returns":"array"},"datefmt_localtime":{"desc":"Parse string to a field-based time value","params":[{"required":"yes","param":"string $value"},{"required":"no","param":"int $position = &#039;&#039;"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"array"},"date_parse":{"desc":"Returns associative array with detailed info about given date","params":[{"required":"yes","param":"string $date"}],"returns":"array"},"date_parse_from_format":{"desc":"Get info about given date formatted according to the specified format","params":[{"required":"yes","param":"string $format"},{"required":"yes","param":"string $date"}],"returns":"array"},"date_sun_info":{"desc":"Returns an array with information about sunset/sunrise and twilight begin/end","params":[{"required":"yes","param":"int $time"},{"required":"yes","param":"float $latitude"},{"required":"yes","param":"float $longitude"}],"returns":"array"},"db2_fetch_array":{"desc":"Returns an array, indexed by column position, representing a row in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"int $row_number = -1"}],"returns":"array"},"db2_fetch_assoc":{"desc":"Returns an array, indexed by column name, representing a row in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"int $row_number = -1"}],"returns":"array"},"db2_fetch_both":{"desc":"Returns an array, indexed by both column name and position, representing a row in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"int $row_number = -1"}],"returns":"array"},"dbase_get_header_info":{"desc":"Gets the header info of a database","params":[{"required":"yes","param":"int $dbase_identifier"}],"returns":"array"},"dbase_get_record":{"desc":"Gets a record from a database as an indexed array","params":[{"required":"yes","param":"int $dbase_identifier"},{"required":"yes","param":"int $record_number"}],"returns":"array"},"dbase_get_record_with_names":{"desc":"Gets a record from a database as an associative array","params":[{"required":"yes","param":"int $dbase_identifier"},{"required":"yes","param":"int $record_number"}],"returns":"array"},"dba_handlers":{"desc":"List all the handlers available","params":[{"required":"no","param":"bool $full_info = false"}],"returns":"array"},"dba_list":{"desc":"List all open database files","params":[],"returns":"array"},"dbplus_resolve":{"desc":"Resolve host information for relation","params":[{"required":"yes","param":"string $relation_name"}],"returns":"array"},"debug_backtrace":{"desc":"Generates a backtrace","params":[{"required":"no","param":"int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT"},{"required":"no","param":"int $limit = &#039;&#039;"}],"returns":"array"},"dio_stat":{"desc":"Gets stat information about the file descriptor fd","params":[{"required":"yes","param":"resource $fd"}],"returns":"array"},"dns_get_record":{"desc":"Fetch DNS Resource Records associated with a hostname","params":[{"required":"yes","param":"string $hostname"},{"required":"no","param":"int $type = DNS_ANY"},{"required":"no","param":"array $authns = &#039;&#039;"},{"required":"no","param":"array $addtl = &#039;&#039;"}],"returns":"array"},"each":{"desc":"Return the current key and value pair from an array and advance the array cursor","params":[{"required":"yes","param":"array $array"}],"returns":"array"},"enchant_broker_describe":{"desc":"Enumerates the Enchant providers","params":[{"required":"yes","param":"resource $broker"}],"returns":"array"},"enchant_dict_suggest":{"desc":"Will return a list of values if any of those pre-conditions are not met","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"}],"returns":"array"},"error_get_last":{"desc":"Get the last occurred error","params":[],"returns":"array"},"exif_read_data":{"desc":"Reads the EXIF headers from JPEG or TIFF","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"string $sections = &#039;&#039;"},{"required":"no","param":"bool $arrays = false"},{"required":"no","param":"bool $thumbnail = false"}],"returns":"array"},"explode":{"desc":"Split a string by string","params":[{"required":"yes","param":"string $delimiter"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $limit = &#039;&#039;"}],"returns":"array"},"fam_next_event":{"desc":"Get next pending FAM event","params":[{"required":"yes","param":"resource $fam"}],"returns":"array"},"fbsql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"fbsql_fetch_assoc":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"fbsql_fetch_lengths":{"desc":"Get the length of each output in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"fbsql_fetch_row":{"desc":"Get a result row as an enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"fbsql_get_autostart_info":{"desc":"","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"array"},"fdf_get_attachment":{"desc":"Extracts uploaded file embedded in the FDF","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"string $savepath"}],"returns":"array"},"fgetcsv":{"desc":"Gets line from file pointer and parse for CSV fields","params":[{"required":"yes","param":"resource $handle"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"string $delimiter = &#039;"},{"required":"yes","param":"&#039;"},{"required":"no","param":"string $enclosure = &#039;&quot;&#039;"},{"required":"no","param":"string $escape = &#039;&#92;&#92;&#039;"}],"returns":"array"},"file":{"desc":"Reads entire file into an array","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"array"},"filter_list":{"desc":"Returns a list of all supported filters","params":[],"returns":"array"},"fstat":{"desc":"Gets information about a file using an open file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"array"},"ftp_nlist":{"desc":"Returns a list of files in the given directory","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $directory"}],"returns":"array"},"ftp_raw":{"desc":"Sends an arbitrary command to an FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $command"}],"returns":"array"},"ftp_rawlist":{"desc":"Returns a detailed list of files in the given directory","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $directory"},{"required":"no","param":"bool $recursive = false"}],"returns":"array"},"func_get_args":{"desc":"Returns an array comprising a function&#039;s argument list","params":[],"returns":"array"},"gd_info":{"desc":"Retrieve information about the currently installed GD library","params":[],"returns":"array"},"gearman_job_status":{"desc":"Get the status of a background job","params":[{"required":"yes","param":"string $job_handle"}],"returns":"array"},"geoip_db_get_all_info":{"desc":"Returns detailed information about all GeoIP database types","params":[],"returns":"array"},"geoip_record_by_name":{"desc":"Returns the detailed City information found in the GeoIP Database","params":[{"required":"yes","param":"string $hostname"}],"returns":"array"},"geoip_region_by_name":{"desc":"Get the country code and region","params":[{"required":"yes","param":"string $hostname"}],"returns":"array"},"getallheaders":{"desc":"Fetch all HTTP request headers","params":[],"returns":"array"},"getdate":{"desc":"Get date/time information","params":[{"required":"no","param":"int $timestamp = time("}],"returns":"array"},"gethostbynamel":{"desc":"Get a list of IPv4 addresses corresponding to a given Internet host   name","params":[{"required":"yes","param":"string $hostname"}],"returns":"array"},"getimagesize":{"desc":"Get the size of an image","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"array $imageinfo = &#039;&#039;"}],"returns":"array"},"getopt":{"desc":"Gets options from the command line argument list","params":[{"required":"yes","param":"string $options"},{"required":"no","param":"array $longopts = &#039;&#039;"}],"returns":"array"},"getrusage":{"desc":"Gets the current resource usages","params":[{"required":"no","param":"int $who = &#039;&#039;"}],"returns":"array"},"get_class_methods":{"desc":"Gets the class methods&#039; names","params":[{"required":"yes","param":"mixed $class_name"}],"returns":"array"},"get_class_vars":{"desc":"Get the default properties of the class","params":[{"required":"yes","param":"string $class_name"}],"returns":"array"},"get_declared_classes":{"desc":"Returns an array with the name of the defined classes","params":[],"returns":"array"},"get_declared_interfaces":{"desc":"Returns an array of all declared interfaces","params":[],"returns":"array"},"get_defined_constants":{"desc":"Returns an associative array with the names of all the constants and their values","params":[{"required":"no","param":"bool $categorize = false"}],"returns":"array"},"get_defined_functions":{"desc":"Returns an array of all defined functions","params":[],"returns":"array"},"get_defined_vars":{"desc":"Returns an array of all defined variables","params":[],"returns":"array"},"get_extension_funcs":{"desc":"Returns an array with the names of the functions of a module","params":[{"required":"yes","param":"string $module_name"}],"returns":"array"},"get_headers":{"desc":"Fetches all the headers sent by the server in response to a HTTP request","params":[{"required":"yes","param":"string $url"},{"required":"no","param":"int $format = &#039;&#039;"}],"returns":"array"},"get_html_translation_table":{"desc":"Returns the translation table used by htmlspecialchars and htmlentities","params":[{"required":"no","param":"int $table = HTML_SPECIALCHARS"},{"required":"no","param":"int $quote_style = ENT_COMPAT"},{"required":"no","param":"string $charset_hint = &#039;&#039;"}],"returns":"array"},"get_included_files":{"desc":"Returns an array with the names of included or required files","params":[],"returns":"array"},"get_loaded_extensions":{"desc":"Returns an array with the names of all modules compiled and loaded","params":[{"required":"no","param":"bool $zend_extensions = false"}],"returns":"array"},"get_meta_tags":{"desc":"Extracts all meta tag content attributes from a file and returns an array","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $use_include_path = false"}],"returns":"array"},"get_object_vars":{"desc":"Gets the properties of the given object","params":[{"required":"yes","param":"object $object"}],"returns":"array"},"glob":{"desc":"Find pathnames matching a pattern","params":[{"required":"yes","param":"string $pattern"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"array"},"gmp_div_qr":{"desc":"Divide numbers and get quotient and remainder","params":[{"required":"yes","param":"resource $n"},{"required":"yes","param":"resource $d"},{"required":"no","param":"int $round = GMP_ROUND_ZERO"}],"returns":"array"},"gmp_gcdext":{"desc":"Calculate GCD and multipliers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"array"},"gmp_sqrtrem":{"desc":"Square root with remainder","params":[{"required":"yes","param":"resource $a"}],"returns":"array"},"gnupg_decryptverify":{"desc":"Decrypts and verifies a given text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $plaintext"}],"returns":"array"},"gnupg_import":{"desc":"Imports a key","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $keydata"}],"returns":"array"},"gnupg_keyinfo":{"desc":"Returns an array with information about all keys that matches the given pattern","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $pattern"}],"returns":"array"},"gnupg_verify":{"desc":"Verifies a signed text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $signed_text"},{"required":"yes","param":"string $signature"},{"required":"no","param":"string $plaintext = &#039;&#039;"}],"returns":"array"},"gopher_parsedir":{"desc":"Translate a gopher formatted directory entry into an associative array.","params":[{"required":"yes","param":"string $dirent"}],"returns":"array"},"gupnp_device_info_get":{"desc":"Get info of root device","params":[{"required":"yes","param":"resource $root_device"}],"returns":"array"},"gupnp_service_info_get":{"desc":"Get full info of service","params":[{"required":"yes","param":"resource $proxy"}],"returns":"array"},"gupnp_service_introspection_get_state_variable":{"desc":"Returns the state variable data","params":[{"required":"yes","param":"resource $introspection"},{"required":"yes","param":"string $variable_name"}],"returns":"array"},"gupnp_service_proxy_send_action":{"desc":"Send action with multiple parameters synchronously","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"string $action"},{"required":"yes","param":"array $in_params"},{"required":"yes","param":"array $out_params"}],"returns":"array"},"gzfile":{"desc":"Read entire gz-file into an array","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $use_include_path = &#039;&#039;"}],"returns":"array"},"hash_algos":{"desc":"Return a list of registered hashing algorithms","params":[],"returns":"array"},"headers_list":{"desc":"Returns a list of response headers sent (or ready to send)","params":[],"returns":"array"},"http_get_request_headers":{"desc":"Get request headers as array","params":[],"returns":"array"},"http_parse_headers":{"desc":"Parse HTTP headers","params":[{"required":"yes","param":"string $header"}],"returns":"array"},"hw_Children":{"desc":"Object ids of children","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_ChildrenObj":{"desc":"Object records of children","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetAnchors":{"desc":"Object ids of anchors of document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetAnchorsObj":{"desc":"Object records of anchors of document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetChildColl":{"desc":"Object ids of child collections","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetChildCollObj":{"desc":"Object records of child collections","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetChildDocColl":{"desc":"Object ids of child documents of collection","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetChildDocCollObj":{"desc":"Object records of child documents of collection","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetObjectByQuery":{"desc":"Search object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"string $query"},{"required":"yes","param":"int $max_hits"}],"returns":"array"},"hw_GetObjectByQueryColl":{"desc":"Search object in collection","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"},{"required":"yes","param":"string $query"},{"required":"yes","param":"int $max_hits"}],"returns":"array"},"hw_GetObjectByQueryCollObj":{"desc":"Search object in collection","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"},{"required":"yes","param":"string $query"},{"required":"yes","param":"int $max_hits"}],"returns":"array"},"hw_GetObjectByQueryObj":{"desc":"Search object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"string $query"},{"required":"yes","param":"int $max_hits"}],"returns":"array"},"hw_GetParents":{"desc":"Object ids of parents","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetParentsObj":{"desc":"Object records of parents","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_GetSrcByDestObj":{"desc":"Returns anchors pointing at object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"array"},"hw_InCollections":{"desc":"Check if object ids in collections","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"array $object_id_array"},{"required":"yes","param":"array $collection_id_array"},{"required":"yes","param":"int $return_collections"}],"returns":"array"},"hw_objrec2array":{"desc":"Convert attributes from object record to object array","params":[{"required":"yes","param":"string $object_record"},{"required":"no","param":"array $format = &#039;&#039;"}],"returns":"array"},"hw_Who":{"desc":"List of currently logged in users","params":[{"required":"yes","param":"int $connection"}],"returns":"array"},"ibase_blob_info":{"desc":"Return blob length and other useful info","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $blob_id"}],"returns":"array"},"ibase_fetch_assoc":{"desc":"Fetch a result row from a query as an associative array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $fetch_flag = &#039;&#039;"}],"returns":"array"},"ibase_fetch_row":{"desc":"Fetch a row from an InterBase database","params":[{"required":"yes","param":"resource $result_identifier"},{"required":"no","param":"int $fetch_flag = &#039;&#039;"}],"returns":"array"},"ibase_field_info":{"desc":"Get information about a field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"}],"returns":"array"},"ibase_param_info":{"desc":"Return information about a parameter in a prepared query","params":[{"required":"yes","param":"resource $query"},{"required":"yes","param":"int $param_number"}],"returns":"array"},"iconv_mime_decode_headers":{"desc":"Decodes multiple MIME header fields at once","params":[{"required":"yes","param":"string $encoded_headers"},{"required":"no","param":"int $mode = &#039;&#039;"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"array"},"id3_get_genre_list":{"desc":"Get all possible genre values","params":[],"returns":"array"},"id3_get_tag":{"desc":"Get all information stored in an ID3 tag","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $version = ID3_BEST"}],"returns":"array"},"ifx_fetch_row":{"desc":"Get row as an associative array","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"mixed $position = &#039;&#039;"}],"returns":"array"},"ifx_fieldproperties":{"desc":"List of SQL fieldproperties","params":[{"required":"yes","param":"resource $result_id"}],"returns":"array"},"ifx_fieldtypes":{"desc":"List of Informix SQL fields","params":[{"required":"yes","param":"resource $result_id"}],"returns":"array"},"ifx_getsqlca":{"desc":"Get the contents of sqlca.sqlerrd[0..5] after a query","params":[{"required":"yes","param":"resource $result_id"}],"returns":"array"},"imagecolorsforindex":{"desc":"Get the colors for an index","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $index"}],"returns":"array"},"imageftbbox":{"desc":"Give the bounding box of a text using fonts via freetype2","params":[{"required":"yes","param":"float $size"},{"required":"yes","param":"float $angle"},{"required":"yes","param":"string $fontfile"},{"required":"yes","param":"string $text"},{"required":"no","param":"array $extrainfo = &#039;&#039;"}],"returns":"array"},"imagefttext":{"desc":"Write text to the image using fonts using FreeType 2","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"float $size"},{"required":"yes","param":"float $angle"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $color"},{"required":"yes","param":"string $fontfile"},{"required":"yes","param":"string $text"},{"required":"no","param":"array $extrainfo = &#039;&#039;"}],"returns":"array"},"imagepsbbox":{"desc":"Give the bounding box of a text rectangle using PostScript Type1 fonts","params":[{"required":"yes","param":"string $text"},{"required":"yes","param":"resource $font"},{"required":"yes","param":"int $size"},{"required":"yes","param":"int $space"},{"required":"yes","param":"int $tightness"},{"required":"yes","param":"float $angle"}],"returns":"array"},"imagepstext":{"desc":"Draws a text over an image using PostScript Type1 fonts","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"string $text"},{"required":"yes","param":"resource $font_index"},{"required":"yes","param":"int $size"},{"required":"yes","param":"int $foreground"},{"required":"yes","param":"int $background"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"no","param":"int $space = &#039;&#039;"},{"required":"no","param":"int $tightness = &#039;&#039;"},{"required":"no","param":"float $angle = 0.0"},{"required":"no","param":"int $antialias_steps = 4"}],"returns":"array"},"imagettfbbox":{"desc":"Give the bounding box of a text using TrueType fonts","params":[{"required":"yes","param":"float $size"},{"required":"yes","param":"float $angle"},{"required":"yes","param":"string $fontfile"},{"required":"yes","param":"string $text"}],"returns":"array"},"imagettftext":{"desc":"Write text to the image using TrueType fonts","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"float $size"},{"required":"yes","param":"float $angle"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $color"},{"required":"yes","param":"string $fontfile"},{"required":"yes","param":"string $text"}],"returns":"array"},"imap_alerts":{"desc":"Returns all IMAP alert messages that have occurred","params":[],"returns":"array"},"imap_errors":{"desc":"Returns all of the IMAP errors that have occured","params":[],"returns":"array"},"imap_fetch_overview":{"desc":"Read an overview of the information in the headers of the given message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $sequence"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"array"},"imap_getacl":{"desc":"Gets the ACL for a given mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"}],"returns":"array"},"imap_getmailboxes":{"desc":"Read the list of mailboxes, returning detailed information on each one","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $ref"},{"required":"yes","param":"string $pattern"}],"returns":"array"},"imap_getsubscribed":{"desc":"List all the subscribed mailboxes","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $ref"},{"required":"yes","param":"string $pattern"}],"returns":"array"},"imap_get_quota":{"desc":"Retrieve the quota level settings, and usage statics per mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $quota_root"}],"returns":"array"},"imap_get_quotaroot":{"desc":"Retrieve the quota settings per user","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $quota_root"}],"returns":"array"},"imap_headers":{"desc":"Returns headers for all messages in a mailbox","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"array"},"imap_list":{"desc":"Read the list of mailboxes","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $ref"},{"required":"yes","param":"string $pattern"}],"returns":"array"},"imap_listscan":{"desc":"Returns the list of mailboxes that matches the given text","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $ref"},{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $content"}],"returns":"array"},"imap_lsub":{"desc":"List all the subscribed mailboxes","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $ref"},{"required":"yes","param":"string $pattern"}],"returns":"array"},"imap_mime_header_decode":{"desc":"Decode MIME header elements","params":[{"required":"yes","param":"string $text"}],"returns":"array"},"imap_rfc822_parse_adrlist":{"desc":"Parses an address string","params":[{"required":"yes","param":"string $address"},{"required":"yes","param":"string $default_host"}],"returns":"array"},"imap_search":{"desc":"This function returns an array of messages matching the given search criteria","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $criteria"},{"required":"no","param":"int $options = SE_FREE"},{"required":"no","param":"string $charset = NIL"}],"returns":"array"},"imap_sort":{"desc":"Gets and sort messages","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $criteria"},{"required":"yes","param":"int $reverse"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"string $search_criteria = &#039;&#039;"},{"required":"no","param":"string $charset = NIL"}],"returns":"array"},"imap_thread":{"desc":"Returns a tree of threaded message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"no","param":"int $options = SE_FREE"}],"returns":"array"},"inclued_get_data":{"desc":"Get the inclued data","params":[],"returns":"array"},"ingres_fetch_array":{"desc":"Fetch a row of result into an array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"ingres_fetch_assoc":{"desc":"Fetch a row of result into an associative array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"ingres_fetch_row":{"desc":"Fetch a row of result into an enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"ini_get_all":{"desc":"Gets all configuration options","params":[{"required":"no","param":"string $extension = &#039;&#039;"},{"required":"no","param":"bool $details = true"}],"returns":"array"},"inotify_read":{"desc":"Read events from an inotify instance","params":[{"required":"yes","param":"resource $inotify_instance"}],"returns":"array"},"iptcparse":{"desc":"Parse a binary IPTC block into single tags.","params":[{"required":"yes","param":"string $iptcblock"}],"returns":"array"},"iterator_to_array":{"desc":"Copy the iterator into an array","params":[{"required":"yes","param":"Traversable $iterator"},{"required":"no","param":"bool $use_keys = true"}],"returns":"array"},"kadm5_get_policies":{"desc":"Gets all policies from the Kerberos database","params":[{"required":"yes","param":"resource $handle"}],"returns":"array"},"kadm5_get_principal":{"desc":"Gets the principal&#039;s entries from the Kerberos database","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $principal"}],"returns":"array"},"kadm5_get_principals":{"desc":"Gets all principals from the Kerberos database","params":[{"required":"yes","param":"resource $handle"}],"returns":"array"},"ldap_explode_dn":{"desc":"Splits DN into its component parts","params":[{"required":"yes","param":"string $dn"},{"required":"yes","param":"int $with_attrib"}],"returns":"array"},"ldap_get_attributes":{"desc":"Get attributes from a search result entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"}],"returns":"array"},"ldap_get_entries":{"desc":"Get all result entries","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_identifier"}],"returns":"array"},"ldap_get_values":{"desc":"Get all values from a result entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"},{"required":"yes","param":"string $attribute"}],"returns":"array"},"ldap_get_values_len":{"desc":"Get all binary values from a result entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"},{"required":"yes","param":"string $attribute"}],"returns":"array"},"libxml_get_errors":{"desc":"Retrieve array of errors","params":[],"returns":"array"},"list":{"desc":"Assign variables as if they were an array","params":[{"required":"yes","param":"mixed $varname"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"array"},"localeconv":{"desc":"Get numeric formatting information","params":[],"returns":"array"},"locale_get_all_variants":{"desc":"Gets the variants for the input locale","params":[{"required":"yes","param":"string $locale"}],"returns":"array"},"locale_get_keywords":{"desc":"Gets the keywords for the input locale","params":[{"required":"yes","param":"string $locale"}],"returns":"array"},"locale_parse":{"desc":"Returns a key-value array of locale ID subtag elements.","params":[{"required":"yes","param":"string $locale"}],"returns":"array"},"localtime":{"desc":"Get the local time","params":[{"required":"no","param":"int $timestamp = time()"},{"required":"no","param":"bool $is_associative = false"}],"returns":"array"},"lstat":{"desc":"Gives information about a file or symbolic link","params":[{"required":"yes","param":"string $filename"}],"returns":"array"},"mailparse_msg_get_part_data":{"desc":"Returns an associative array of info about the message","params":[{"required":"yes","param":"resource $mimemail"}],"returns":"array"},"mailparse_msg_get_structure":{"desc":"Returns an array of mime section names in the supplied message","params":[{"required":"yes","param":"resource $mimemail"}],"returns":"array"},"mailparse_rfc822_parse_addresses":{"desc":"Parse RFC 822 compliant addresses","params":[{"required":"yes","param":"string $addresses"}],"returns":"array"},"mailparse_uudecode_all":{"desc":"Scans the data from fp and extract each embedded uuencoded file","params":[{"required":"yes","param":"resource $fp"}],"returns":"array"},"maxdb_fetch_assoc":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"maxdb_fetch_lengths":{"desc":"Returns the lengths of the columns of the current row in the result set","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"mb_encoding_aliases":{"desc":"Get aliases of a known encoding type","params":[{"required":"yes","param":"string $encoding"}],"returns":"array"},"mb_ereg_search_getregs":{"desc":"Retrieve the result from the last multibyte regular expression match","params":[],"returns":"array"},"mb_ereg_search_pos":{"desc":"Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string","params":[{"required":"no","param":"string $pattern = &#039;&#039;"},{"required":"no","param":"string $option = &quot;ms&quot;"}],"returns":"array"},"mb_ereg_search_regs":{"desc":"Returns the matched part of a multibyte regular expression","params":[{"required":"no","param":"string $pattern = &#039;&#039;"},{"required":"no","param":"string $option = &quot;ms&quot;"}],"returns":"array"},"mb_list_encodings":{"desc":"Returns an array of all supported encodings","params":[],"returns":"array"},"mb_parse_str":{"desc":"Parse GET/POST/COOKIE data and set global variable","params":[{"required":"yes","param":"string $encoded_string"},{"required":"no","param":"array $result = &#039;&#039;"}],"returns":"array"},"mb_split":{"desc":"Split multibyte string using regular expression","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $limit = -1"}],"returns":"array"},"mcrypt_enc_get_supported_key_sizes":{"desc":"Returns an array with the supported keysizes of the opened algorithm","params":[{"required":"yes","param":"resource $td"}],"returns":"array"},"mcrypt_list_algorithms":{"desc":"Gets an array of all supported ciphers","params":[{"required":"no","param":"string $lib_dir = ini_get(&quot;mcrypt.algorithms_dir&quot;"}],"returns":"array"},"mcrypt_list_modes":{"desc":"Gets an array of all supported modes","params":[{"required":"no","param":"string $lib_dir = ini_get(&quot;mcrypt.modes_dir&quot;"}],"returns":"array"},"mcrypt_module_get_supported_key_sizes":{"desc":"Returns an array with the supported keysizes of the opened algorithm","params":[{"required":"yes","param":"string $algorithm"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"array"},"msession_find":{"desc":"Find all sessions with name and value","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"array"},"msession_get_array":{"desc":"Get array of msession variables","params":[{"required":"yes","param":"string $session"}],"returns":"array"},"msession_list":{"desc":"List all sessions","params":[],"returns":"array"},"msession_listvar":{"desc":"List sessions with variable","params":[{"required":"yes","param":"string $name"}],"returns":"array"},"msgfmt_parse":{"desc":"Parse input string according to pattern","params":[{"required":"yes","param":"string $value"},{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"array"},"msgfmt_parse_message":{"desc":"Quick parse input string","params":[{"required":"yes","param":"string $locale"},{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $source"},{"required":"yes","param":"string $value"}],"returns":"array"},"msg_stat_queue":{"desc":"Returns information from the message queue data structure","params":[{"required":"yes","param":"resource $queue"}],"returns":"array"},"msql_fetch_array":{"desc":"Fetch row as array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"msql_fetch_row":{"desc":"Get row as enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"mssql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = MSSQL_BOTH"}],"returns":"array"},"mssql_fetch_assoc":{"desc":"Returns an associative array of the current row in the result","params":[{"required":"yes","param":"resource $result_id"}],"returns":"array"},"mssql_fetch_row":{"desc":"Get row as enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"mysqli_fetch_assoc":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"array"},"mysqli_fetch_fields":{"desc":"Returns an array of objects representing the fields in a result set","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"array"},"mysqli_fetch_lengths":{"desc":"Returns the lengths of the columns of the current row in the result set","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"array"},"mysqli_get_cache_stats":{"desc":"Returns client Zval cache statistics","params":[],"returns":"array"},"mysqli_get_client_stats":{"desc":"Returns client per-process statistics","params":[],"returns":"array"},"mysqli_get_connection_stats":{"desc":"Returns statistics about the client connection","params":[{"required":"yes","param":"mysqli $link"}],"returns":"array"},"mysqlnd_ms_get_stats":{"desc":"Returns query distribution and connection statistics","params":[],"returns":"array"},"mysqlnd_qc_get_cache_info":{"desc":"Returns information on the current handler, the number of cache entries and cache entries, if available","params":[],"returns":"array"},"mysqlnd_qc_get_core_stats":{"desc":"Statistics collected by the core of the query cache","params":[],"returns":"array"},"mysqlnd_qc_get_handler":{"desc":"Returns a list of available storage handler","params":[],"returns":"array"},"mysqlnd_qc_get_query_trace_log":{"desc":"Returns a backtrace for each query inspected by the query cache","params":[],"returns":"array"},"mysql_fetch_array":{"desc":"Fetch a result row as an associative array, a numeric array, or both","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = MYSQL_BOTH"}],"returns":"array"},"mysql_fetch_assoc":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"mysql_fetch_lengths":{"desc":"Get the length of each output in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"mysql_fetch_row":{"desc":"Get a result row as an enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"m_responsekeys":{"desc":"Returns array of strings which represents the keys that can be used for response parameters on this transaction","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"array"},"newt_checkbox_tree_find_item":{"desc":"Finds an item in the checkbox tree","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"mixed $data"}],"returns":"array"},"newt_checkbox_tree_get_multi_selection":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"string $seqnum"}],"returns":"array"},"newt_checkbox_tree_get_selection":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"}],"returns":"array"},"newt_listbox_get_selection":{"desc":"","params":[{"required":"yes","param":"resource $listbox"}],"returns":"array"},"notes_body":{"desc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","params":[{"required":"yes","param":"string $server"},{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"int $msg_number"}],"returns":"array"},"notes_search":{"desc":"Find notes that match keywords in database_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $keywords"}],"returns":"array"},"notes_unread":{"desc":"Returns the unread note id&#039;s for the current User user_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $user_name"}],"returns":"array"},"nsapi_request_headers":{"desc":"Fetch all HTTP request headers","params":[],"returns":"array"},"nsapi_response_headers":{"desc":"Fetch all HTTP response headers","params":[],"returns":"array"},"ob_get_status":{"desc":"Get status of output buffers","params":[{"required":"no","param":"bool $full_status = FALSE"}],"returns":"array"},"ob_list_handlers":{"desc":"List all output handlers in use","params":[],"returns":"array"},"oci_error":{"desc":"Returns the last error found","params":[{"required":"no","param":"resource $resource = &#039;&#039;"}],"returns":"array"},"oci_fetch_array":{"desc":"Returns the next row from a query as an associative or numeric array","params":[{"required":"yes","param":"resource $statement"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"array"},"oci_fetch_assoc":{"desc":"Returns the next row from a query as an associative array","params":[{"required":"yes","param":"resource $statement"}],"returns":"array"},"oci_fetch_row":{"desc":"Returns the next row from a query as a numeric array","params":[{"required":"yes","param":"resource $statement"}],"returns":"array"},"odbc_data_source":{"desc":"Returns information about a current connection","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"int $fetch_type"}],"returns":"array"},"odbc_fetch_array":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $rownumber = &#039;&#039;"}],"returns":"array"},"odbc_fetch_into":{"desc":"Fetch one result row into array","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"array $result_array"},{"required":"no","param":"int $rownumber = &#039;&#039;"}],"returns":"array"},"openssl_csr_get_subject":{"desc":"Returns the subject of a CERT","params":[{"required":"yes","param":"mixed $csr"},{"required":"no","param":"bool $use_shortnames = true"}],"returns":"array"},"openssl_get_cipher_methods":{"desc":"Gets available cipher methods","params":[{"required":"no","param":"bool $aliases = false"}],"returns":"array"},"openssl_get_md_methods":{"desc":"Gets available digest methods","params":[{"required":"no","param":"bool $aliases = false"}],"returns":"array"},"openssl_pkey_get_details":{"desc":"Returns an array with the key details","params":[{"required":"yes","param":"resource $key"}],"returns":"array"},"openssl_x509_parse":{"desc":"Parse an X509 certificate and return the information as an array","params":[{"required":"yes","param":"mixed $x509cert"},{"required":"no","param":"bool $shortnames = true"}],"returns":"array"},"parsekit_compile_file":{"desc":"Compile a string of PHP code and return the resulting op array","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"array $errors = &#039;&#039;"},{"required":"no","param":"int $options = PARSEKIT_QUIET"}],"returns":"array"},"parsekit_compile_string":{"desc":"Compile a string of PHP code and return the resulting op array","params":[{"required":"yes","param":"string $phpcode"},{"required":"no","param":"array $errors = &#039;&#039;"},{"required":"no","param":"int $options = PARSEKIT_QUIET"}],"returns":"array"},"parsekit_func_arginfo":{"desc":"Return information regarding function argument(s)","params":[{"required":"yes","param":"mixed $function"}],"returns":"array"},"parse_ini_file":{"desc":"Parse a configuration file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $process_sections = false"},{"required":"no","param":"int $scanner_mode = INI_SCANNER_NORMAL"}],"returns":"array"},"parse_ini_string":{"desc":"Parse a configuration string","params":[{"required":"yes","param":"string $ini"},{"required":"no","param":"bool $process_sections = false"},{"required":"no","param":"int $scanner_mode = INI_SCANNER_NORMAL"}],"returns":"array"},"pg_convert":{"desc":"Convert associative array values into suitable for SQL statement","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $assoc_array"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"array"},"pg_copy_to":{"desc":"Copy a table to an array","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"no","param":"string $delimiter = &#039;&#039;"},{"required":"no","param":"string $null_as = &#039;&#039;"}],"returns":"array"},"pg_fetch_all":{"desc":"Fetches all rows from a result as an array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"pg_fetch_all_columns":{"desc":"Fetches all rows in a particular result column as an array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $column = &#039;&#039;"}],"returns":"array"},"pg_fetch_array":{"desc":"Fetch a row as an array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $row = &#039;&#039;"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"pg_fetch_assoc":{"desc":"Fetch a row as an associative array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $row = &#039;&#039;"}],"returns":"array"},"pg_fetch_row":{"desc":"Get a row as an enumerated array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $row = &#039;&#039;"}],"returns":"array"},"pg_get_notify":{"desc":"Gets SQL NOTIFY message","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"pg_meta_data":{"desc":"Get meta data for table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"}],"returns":"array"},"pg_version":{"desc":"Returns an array with client, protocol and server version (when available)","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"array"},"posix_getgrgid":{"desc":"Return info about a group by group id","params":[{"required":"yes","param":"int $gid"}],"returns":"array"},"posix_getgrnam":{"desc":"Return info about a group by name","params":[{"required":"yes","param":"string $name"}],"returns":"array"},"posix_getgroups":{"desc":"Return the group set of the current process","params":[],"returns":"array"},"posix_getpwnam":{"desc":"Return info about a user by username","params":[{"required":"yes","param":"string $username"}],"returns":"array"},"posix_getpwuid":{"desc":"Return info about a user by user id","params":[{"required":"yes","param":"int $uid"}],"returns":"array"},"posix_getrlimit":{"desc":"Return info about system resource limits","params":[],"returns":"array"},"posix_times":{"desc":"Get process times","params":[],"returns":"array"},"posix_uname":{"desc":"Get system name","params":[],"returns":"array"},"preg_grep":{"desc":"Return array entries that match the pattern","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"array $input"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"array"},"preg_split":{"desc":"Split string by a regular expression","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $subject"},{"required":"no","param":"int $limit = -1"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"array"},"printer_list":{"desc":"Return an array of printers attached to the server","params":[{"required":"yes","param":"int $enumtype"},{"required":"no","param":"string $name = &#039;&#039;"},{"required":"no","param":"int $level = &#039;&#039;"}],"returns":"array"},"proc_get_status":{"desc":"Get information about a process opened by proc_open","params":[{"required":"yes","param":"resource $process"}],"returns":"array"},"pspell_suggest":{"desc":"Suggest spellings of a word","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $word"}],"returns":"array"},"ps_hyphenate":{"desc":"Hyphenates a word","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"}],"returns":"array"},"ps_string_geometry":{"desc":"Gets geometry of a string","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"no","param":"int $fontid = &#039;&#039;"},{"required":"no","param":"float $size = 0.0"}],"returns":"array"},"px_get_field":{"desc":"Returns the specification of a single field","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"int $fieldno"}],"returns":"array"},"px_get_info":{"desc":"Return lots of information about a paradox file","params":[{"required":"yes","param":"resource $pxdoc"}],"returns":"array"},"px_get_record":{"desc":"Returns record of paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"int $num"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"array"},"px_get_schema":{"desc":"Returns the database schema","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"array"},"px_retrieve_record":{"desc":"Returns record of paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"int $num"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"array"},"radius_get_vendor_attr":{"desc":"Extracts a vendor specific attribute","params":[{"required":"yes","param":"string $data"}],"returns":"array"},"range":{"desc":"Create an array containing a range of elements","params":[{"required":"yes","param":"mixed $low"},{"required":"yes","param":"mixed $high"},{"required":"no","param":"number $step = 1"}],"returns":"array"},"readline_list_history":{"desc":"Lists the history","params":[],"returns":"array"},"realpath_cache_get":{"desc":"Get realpath cache entries","params":[],"returns":"array"},"resourcebundle_locales":{"desc":"Get supported locales","params":[{"required":"yes","param":"ResourceBundle $r"}],"returns":"array"},"rrd_fetch":{"desc":"Fetch the data for graph as array.","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $options"}],"returns":"array"},"rrd_graph":{"desc":"Creates image from a data.","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $options"}],"returns":"array"},"rrd_info":{"desc":"Gets information about rrd file","params":[{"required":"yes","param":"string $filename"}],"returns":"array"},"rrd_lastupdate":{"desc":"Gets information about last updated data.","params":[{"required":"yes","param":"string $filename"}],"returns":"array"},"rrd_xport":{"desc":"Exports the information about RRD database.","params":[{"required":"yes","param":"array $options"}],"returns":"array"},"runkit_superglobals":{"desc":"Return numerically indexed array of registered superglobals","params":[],"returns":"array"},"scandir":{"desc":"List files and directories inside the specified path","params":[{"required":"yes","param":"string $directory"},{"required":"no","param":"int $sorting_order = &#039;&#039;"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"array"},"session_get_cookie_params":{"desc":"Get the session cookie parameters","params":[],"returns":"array"},"session_pgsql_get_error":{"desc":"Returns number of errors and last error message","params":[{"required":"no","param":"bool $with_error_message = false"}],"returns":"array"},"session_pgsql_status":{"desc":"Get current save handler status","params":[],"returns":"array"},"snmp2_real_walk":{"desc":"Return all objects including their respective object ID within the specified one","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"array"},"snmp2_walk":{"desc":"Fetch all the SNMP objects from an agent","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"array"},"snmp3_real_walk":{"desc":"Return all objects including their respective object ID within the specified one","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $sec_name"},{"required":"yes","param":"string $sec_level"},{"required":"yes","param":"string $auth_protocol"},{"required":"yes","param":"string $auth_passphrase"},{"required":"yes","param":"string $priv_protocol"},{"required":"yes","param":"string $priv_passphrase"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"array"},"snmp3_walk":{"desc":"Fetch all the SNMP objects from an agent","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $sec_name"},{"required":"yes","param":"string $sec_level"},{"required":"yes","param":"string $auth_protocol"},{"required":"yes","param":"string $auth_passphrase"},{"required":"yes","param":"string $priv_protocol"},{"required":"yes","param":"string $priv_passphrase"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"array"},"snmprealwalk":{"desc":"Return all objects including their respective object ID within the specified one","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"array"},"snmpwalk":{"desc":"Fetch all the SNMP objects from an agent","params":[{"required":"yes","param":"string $hostname"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"array"},"snmpwalkoid":{"desc":"Query for a tree of information about a network entity","params":[{"required":"yes","param":"string $hostname"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"array"},"split":{"desc":"Split string into array by regular expression","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $limit = -1"}],"returns":"array"},"spliti":{"desc":"Split string into array by regular expression case insensitive","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $limit = -1"}],"returns":"array"},"spl_autoload_functions":{"desc":"Return all registered __autoload() functions","params":[],"returns":"array"},"spl_classes":{"desc":"Return available SPL classes","params":[],"returns":"array"},"sqlite_array_query":{"desc":"Execute a query against a given database and returns an array","params":[{"required":"yes","param":"resource $dbhandle"},{"required":"yes","param":"string $query"},{"required":"no","param":"int $result_type = &#039;&#039;"},{"required":"no","param":"bool $decode_binary = &#039;&#039;"}],"returns":"array"},"sqlite_current":{"desc":"Fetches the current row from a result set as an array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = SQLITE_BOTH"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"array"},"sqlite_fetch_all":{"desc":"Fetches all rows from a result set as an array of arrays","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = SQLITE_BOTH"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"array"},"sqlite_fetch_array":{"desc":"Fetches the next row from a result set as an array","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = SQLITE_BOTH"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"array"},"sqlite_fetch_column_types":{"desc":"Return an array of column types from a particular table","params":[{"required":"yes","param":"string $table_name"},{"required":"yes","param":"resource $dbhandle"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"array"},"sqlite_single_query":{"desc":"Executes a query and returns either an array for one single column or the value of the first row","params":[{"required":"yes","param":"resource $db"},{"required":"yes","param":"string $query"},{"required":"no","param":"bool $first_row_only = &#039;&#039;"},{"required":"no","param":"bool $decode_binary = &#039;&#039;"}],"returns":"array"},"ssh2_methods_negotiated":{"desc":"Return list of negotiated methods","params":[{"required":"yes","param":"resource $session"}],"returns":"array"},"ssh2_publickey_list":{"desc":"List currently authorized publickeys","params":[{"required":"yes","param":"resource $pkey"}],"returns":"array"},"ssh2_sftp_lstat":{"desc":"Stat a symbolic link","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $path"}],"returns":"array"},"ssh2_sftp_stat":{"desc":"Stat a file on a remote filesystem","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $path"}],"returns":"array"},"stat":{"desc":"Gives information about a file","params":[{"required":"yes","param":"string $filename"}],"returns":"array"},"stats_rand_get_seeds":{"desc":"Not documented","params":[],"returns":"array"},"stats_rand_phrase_to_seeds":{"desc":"generate two seeds for the RGN random number generator","params":[{"required":"yes","param":"string $phrase"}],"returns":"array"},"stomp_get_read_timeout":{"desc":"Gets read timeout","params":[{"required":"yes","param":"resource $link"}],"returns":"array"},"stomp_read_frame":{"desc":"Reads the next frame","params":[{"required":"no","param":"string $class_name = &quot;stompFrame&quot;"},{"required":"yes","param":"resource $link"}],"returns":"array"},"stream_context_get_options":{"desc":"Retrieve options for a stream/wrapper/context","params":[{"required":"yes","param":"resource $stream_or_context"}],"returns":"array"},"stream_context_get_params":{"desc":"Retrieves parameters from a context","params":[{"required":"yes","param":"resource $stream_or_context"}],"returns":"array"},"stream_get_filters":{"desc":"Retrieve list of registered filters","params":[],"returns":"array"},"stream_get_meta_data":{"desc":"Retrieves header/meta data from streams/file pointers","params":[{"required":"yes","param":"resource $stream"}],"returns":"array"},"stream_get_transports":{"desc":"Retrieve list of registered socket transports","params":[],"returns":"array"},"stream_get_wrappers":{"desc":"Retrieve list of registered streams","params":[],"returns":"array"},"stream_socket_pair":{"desc":"Creates a pair of connected, indistinguishable socket streams","params":[{"required":"yes","param":"int $domain"},{"required":"yes","param":"int $type"},{"required":"yes","param":"int $protocol"}],"returns":"array"},"strptime":{"desc":"Parse a time/date generated with strftime","params":[{"required":"yes","param":"string $date"},{"required":"yes","param":"string $format"}],"returns":"array"},"str_getcsv":{"desc":"Parse a CSV string into an array","params":[{"required":"yes","param":"string $input"},{"required":"no","param":"string $delimiter = &#039;"},{"required":"yes","param":"&#039;"},{"required":"no","param":"string $enclosure = &#039;&quot;&#039;"},{"required":"no","param":"string $escape = &#039;&#92;&#92;&#039;"}],"returns":"array"},"str_split":{"desc":"Convert a string to an array","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $split_length = 1"}],"returns":"array"},"svn_blame":{"desc":"Get the SVN blame for a file","params":[{"required":"yes","param":"string $repository_url"},{"required":"no","param":"int $revision_no = SVN_REVISION_HEAD"}],"returns":"array"},"svn_commit":{"desc":"Sends changes from the local working copy to the repository","params":[{"required":"yes","param":"string $log"},{"required":"yes","param":"array $targets"},{"required":"no","param":"bool $dontrecurse = &#039;&#039;"}],"returns":"array"},"svn_diff":{"desc":"Recursively diffs two paths","params":[{"required":"yes","param":"string $path1"},{"required":"yes","param":"int $rev1"},{"required":"yes","param":"string $path2"},{"required":"yes","param":"int $rev2"}],"returns":"array"},"svn_fs_dir_entries":{"desc":"Enumerates the directory entries under path; returns a hash of dir names to file type","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"}],"returns":"array"},"svn_log":{"desc":"Returns the commit log messages of a repository URL","params":[{"required":"yes","param":"string $repos_url"},{"required":"no","param":"int $start_revision = &#039;&#039;"},{"required":"no","param":"int $end_revision = &#039;&#039;"},{"required":"no","param":"int $limit = &#039;&#039;"},{"required":"no","param":"int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY"}],"returns":"array"},"svn_ls":{"desc":"Returns list of directory contents in repository URL, optionally at revision number","params":[{"required":"yes","param":"string $repos_url"},{"required":"no","param":"int $revision_no = SVN_REVISION_HEAD"},{"required":"no","param":"bool $recurse = false"},{"required":"no","param":"bool $peg = false"}],"returns":"array"},"svn_status":{"desc":"Returns the status of working copy files and directories","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"array"},"swf_getbitmapinfo":{"desc":"Get information about a bitmap","params":[{"required":"yes","param":"int $bitmapid"}],"returns":"array"},"swf_getfontinfo":{"desc":"Gets font information","params":[],"returns":"array"},"sybase_fetch_array":{"desc":"Fetch row as array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"sybase_fetch_assoc":{"desc":"Fetch a result row as an associative array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"sybase_fetch_row":{"desc":"Get a result row as an enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"array"},"sys_getloadavg":{"desc":"Gets system load average","params":[],"returns":"array"},"tidy_get_config":{"desc":"Get current Tidy configuration","params":[{"required":"yes","param":"tidy $object"}],"returns":"array"},"token_get_all":{"desc":"Split given source into PHP tokens","params":[{"required":"yes","param":"string $source"}],"returns":"array"},"transliterator_list_ids":{"desc":"Get transliterator IDs","params":[],"returns":"array"},"udm_cat_list":{"desc":"Get all the categories on the same level with the current one","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $category"}],"returns":"array"},"udm_cat_path":{"desc":"Get the path to the current category","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $category"}],"returns":"array"},"unpack":{"desc":"Unpack data from binary string","params":[{"required":"yes","param":"string $format"},{"required":"yes","param":"string $data"}],"returns":"array"},"vpopmail_alias_get":{"desc":"Get all lines of an alias for a domain","params":[{"required":"yes","param":"string $alias"},{"required":"yes","param":"string $domain"}],"returns":"array"},"vpopmail_alias_get_all":{"desc":"Get all lines of an alias for a domain","params":[{"required":"yes","param":"string $domain"}],"returns":"array"},"win32_ps_list_procs":{"desc":"List running processes","params":[],"returns":"array"},"win32_ps_stat_mem":{"desc":"Stat memory utilization","params":[],"returns":"array"},"win32_ps_stat_proc":{"desc":"Stat process","params":[{"required":"no","param":"int $pid = &#039;&#039;"}],"returns":"array"},"wincache_fcache_fileinfo":{"desc":"Retrieves information about files cached in the file cache","params":[{"required":"no","param":"bool $summaryonly = false"}],"returns":"array"},"wincache_fcache_meminfo":{"desc":"Retrieves information about file cache memory usage","params":[],"returns":"array"},"wincache_ocache_fileinfo":{"desc":"Retrieves information about files cached in the opcode cache","params":[{"required":"no","param":"bool $summaryonly = false"}],"returns":"array"},"wincache_ocache_meminfo":{"desc":"Retrieves information about opcode cache memory usage","params":[],"returns":"array"},"wincache_rplist_fileinfo":{"desc":"Retrieves information about resolve file path cache","params":[{"required":"no","param":"bool $summaryonly = false"}],"returns":"array"},"wincache_rplist_meminfo":{"desc":"Retrieves information about memory usage by the resolve file path cache","params":[],"returns":"array"},"wincache_scache_info":{"desc":"Retrieves information about files cached in the session cache","params":[{"required":"no","param":"bool $summaryonly = false"}],"returns":"array"},"wincache_scache_meminfo":{"desc":"Retrieves information about session cache memory usage","params":[],"returns":"array"},"wincache_ucache_info":{"desc":"Retrieves information about data stored in the user cache","params":[{"required":"no","param":"bool $summaryonly = false"},{"required":"no","param":"string $key = &#039;&#039;"}],"returns":"array"},"wincache_ucache_meminfo":{"desc":"Retrieves information about user cache memory usage","params":[],"returns":"array"},"xattr_list":{"desc":"Get a list of extended attributes","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"array"},"xhprof_disable":{"desc":"Stops xhprof profiler","params":[],"returns":"array"},"xmlrpc_parse_method_descriptions":{"desc":"Decodes XML into a list of method descriptions","params":[{"required":"yes","param":"string $xml"}],"returns":"array"},"yaz_es_result":{"desc":"Inspects Extended Services Result","params":[{"required":"yes","param":"resource $id"}],"returns":"array"},"yaz_scan_result":{"desc":"Returns Scan Response result","params":[{"required":"yes","param":"resource $id"},{"required":"no","param":"array $result = &#039;&#039;"}],"returns":"array"},"yp_cat":{"desc":"Return an array containing the entire map","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"}],"returns":"array"},"yp_first":{"desc":"Returns the first key-value pair from the named map","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"}],"returns":"array"},"yp_next":{"desc":"Returns the next key-value pair in the named map","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"},{"required":"yes","param":"string $key"}],"returns":"array"},"apache_child_terminate":{"desc":"Terminate apache process after this request","params":[],"returns":"bool"},"apache_reset_timeout":{"desc":"Reset the Apache write timer","params":[],"returns":"bool"},"apache_setenv":{"desc":"Set an Apache subprocess_env variable","params":[{"required":"yes","param":"string $variable"},{"required":"yes","param":"string $value"},{"required":"no","param":"bool $walk_to_top = false"}],"returns":"bool"},"apc_bin_load":{"desc":"Load a binary dump into the APC file/user cache","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"apc_bin_loadfile":{"desc":"Load a binary dump from a file into the APC file/user cache","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"resource $context = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"apc_cas":{"desc":"Updates an old value with a new value","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"int $old"},{"required":"yes","param":"int $new"}],"returns":"bool"},"apc_clear_cache":{"desc":"Clears the APC cache","params":[{"required":"no","param":"string $cache_type = &#039;&#039;"}],"returns":"bool"},"apc_define_constants":{"desc":"Defines a set of constants for retrieval and mass-definition","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"array $constants"},{"required":"no","param":"bool $case_sensitive = true"}],"returns":"bool"},"apc_load_constants":{"desc":"Loads a set of constants from the cache","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"bool $case_sensitive = true"}],"returns":"bool"},"apd_breakpoint":{"desc":"Stops the interpreter and waits on a CR from the socket","params":[{"required":"yes","param":"int $debug_level"}],"returns":"bool"},"apd_continue":{"desc":"Restarts the interpreter","params":[{"required":"yes","param":"int $debug_level"}],"returns":"bool"},"apd_echo":{"desc":"Echo to the debugging socket","params":[{"required":"yes","param":"string $output"}],"returns":"bool"},"apd_set_session_trace_socket":{"desc":"Starts the remote session debugging","params":[{"required":"yes","param":"string $tcp_server"},{"required":"yes","param":"int $socket_type"},{"required":"yes","param":"int $port"},{"required":"yes","param":"int $debug_level"}],"returns":"bool"},"array_key_exists":{"desc":"Checks if the given key or index exists in the array","params":[{"required":"yes","param":"mixed $key"},{"required":"yes","param":"array $search"}],"returns":"bool"},"array_walk":{"desc":"Apply a user function to every member of an array","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"callback $funcname"},{"required":"no","param":"mixed $userdata = &#039;&#039;"}],"returns":"bool"},"array_walk_recursive":{"desc":"Apply a user function recursively to every member of an array","params":[{"required":"yes","param":"array $input"},{"required":"yes","param":"callback $funcname"},{"required":"no","param":"mixed $userdata = &#039;&#039;"}],"returns":"bool"},"arsort":{"desc":"Sort an array in reverse order and maintain index association","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"asort":{"desc":"Sort an array and maintain index association","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"assert":{"desc":"Checks if assertion is FALSE","params":[{"required":"yes","param":"mixed $assertion"}],"returns":"bool"},"bbcode_add_element":{"desc":"Adds a bbcode element","params":[{"required":"yes","param":"resource $bbcode_container"},{"required":"yes","param":"string $tag_name"},{"required":"yes","param":"array $tag_rules"}],"returns":"bool"},"bbcode_add_smiley":{"desc":"Adds a smiley to the parser","params":[{"required":"yes","param":"resource $bbcode_container"},{"required":"yes","param":"string $smiley"},{"required":"yes","param":"string $replace_by"}],"returns":"bool"},"bbcode_destroy":{"desc":"Close BBCode_container resource","params":[{"required":"yes","param":"resource $bbcode_container"}],"returns":"bool"},"bbcode_set_arg_parser":{"desc":"Attach another parser in order to use another rule set for argument parsing","params":[{"required":"yes","param":"resource $bbcode_container"},{"required":"yes","param":"resource $bbcode_arg_parser"}],"returns":"bool"},"bbcode_set_flags":{"desc":"Set or alter parser options","params":[{"required":"yes","param":"resource $bbcode_container"},{"required":"yes","param":"int $flags"},{"required":"no","param":"int $mode = BBCODE_SET_FLAGS_SET"}],"returns":"bool"},"bcompiler_load":{"desc":"Reads and creates classes from a bz compressed file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"bcompiler_load_exe":{"desc":"Reads and creates classes from a bcompiler exe file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"bcompiler_parse_class":{"desc":"Reads the bytecodes of a class and calls back to a user function","params":[{"required":"yes","param":"string $class"},{"required":"yes","param":"string $callback"}],"returns":"bool"},"bcompiler_read":{"desc":"Reads and creates classes from a filehandle","params":[{"required":"yes","param":"resource $filehandle"}],"returns":"bool"},"bcompiler_write_class":{"desc":"Writes an defined class as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $className"},{"required":"no","param":"string $extends = &#039;&#039;"}],"returns":"bool"},"bcompiler_write_constant":{"desc":"Writes a defined constant as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $constantName"}],"returns":"bool"},"bcompiler_write_exe_footer":{"desc":"Writes the start pos, and sig to the end of a exe type file","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"int $startpos"}],"returns":"bool"},"bcompiler_write_file":{"desc":"Writes a php source file as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"bcompiler_write_footer":{"desc":"Writes the single character x00 to indicate End of compiled data","params":[{"required":"yes","param":"resource $filehandle"}],"returns":"bool"},"bcompiler_write_function":{"desc":"Writes an defined function as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $functionName"}],"returns":"bool"},"bcompiler_write_functions_from_file":{"desc":"Writes all functions defined in a file as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $fileName"}],"returns":"bool"},"bcompiler_write_header":{"desc":"Writes the bcompiler header","params":[{"required":"yes","param":"resource $filehandle"},{"required":"no","param":"string $write_ver = &#039;&#039;"}],"returns":"bool"},"bcompiler_write_included_filename":{"desc":"Writes an included file as bytecodes","params":[{"required":"yes","param":"resource $filehandle"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"bcscale":{"desc":"Set default scale parameter for all bc math functions","params":[{"required":"yes","param":"int $scale"}],"returns":"bool"},"cairo_font_options_equal":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"CairoFontOptions $other"}],"returns":"bool"},"cairo_has_current_point":{"desc":"The hasCurrentPoint purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"bool"},"cairo_in_fill":{"desc":"The inFill purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"bool"},"cairo_in_stroke":{"desc":"The inStroke purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"bool"},"cairo_ps_surface_get_eps":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"}],"returns":"bool"},"chdb_create":{"desc":"Creates a chdb file","params":[{"required":"yes","param":"string $pathname"},{"required":"yes","param":"array $data"}],"returns":"bool"},"chdir":{"desc":"Change directory","params":[{"required":"yes","param":"string $directory"}],"returns":"bool"},"checkdate":{"desc":"Validate a Gregorian date","params":[{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"bool"},"checkdnsrr":{"desc":"Check DNS records corresponding to a given Internet host name or IP address","params":[{"required":"yes","param":"string $host"},{"required":"no","param":"string $type = &quot;MX&quot;"}],"returns":"bool"},"chgrp":{"desc":"Changes file group","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $group"}],"returns":"bool"},"chmod":{"desc":"Changes file mode","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"chown":{"desc":"Changes file owner","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $user"}],"returns":"bool"},"chroot":{"desc":"Change the root directory","params":[{"required":"yes","param":"string $directory"}],"returns":"bool"},"classkit_method_add":{"desc":"Dynamically adds a new method to a given class","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $args"},{"required":"yes","param":"string $code"},{"required":"no","param":"int $flags = CLASSKIT_ACC_PUBLIC"}],"returns":"bool"},"classkit_method_copy":{"desc":"Copies a method from class to another","params":[{"required":"yes","param":"string $dClass"},{"required":"yes","param":"string $dMethod"},{"required":"yes","param":"string $sClass"},{"required":"no","param":"string $sMethod = &#039;&#039;"}],"returns":"bool"},"classkit_method_redefine":{"desc":"Dynamically changes the code of the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $args"},{"required":"yes","param":"string $code"},{"required":"no","param":"int $flags = CLASSKIT_ACC_PUBLIC"}],"returns":"bool"},"classkit_method_remove":{"desc":"Dynamically removes the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"}],"returns":"bool"},"classkit_method_rename":{"desc":"Dynamically changes the name of the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $newname"}],"returns":"bool"},"class_alias":{"desc":"Creates an alias for a class","params":[{"required":"no","param":"string $original = &#039;&#039;"},{"required":"no","param":"string $alias = &#039;&#039;"}],"returns":"bool"},"class_exists":{"desc":"Checks if the class has been defined","params":[{"required":"yes","param":"string $class_name"},{"required":"no","param":"bool $autoload = true"}],"returns":"bool"},"closelog":{"desc":"Close connection to system logger","params":[],"returns":"bool"},"collator_asort":{"desc":"Sort array maintaining index association","params":[{"required":"yes","param":"array $arr"},{"required":"no","param":"int $sort_flag = &#039;&#039;"},{"required":"yes","param":"Collator $coll"}],"returns":"bool"},"collator_set_attribute":{"desc":"Set collation attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"int $val"},{"required":"yes","param":"Collator $coll"}],"returns":"bool"},"collator_set_strength":{"desc":"Set collation strength","params":[{"required":"yes","param":"int $strength"},{"required":"yes","param":"Collator $coll"}],"returns":"bool"},"collator_sort":{"desc":"Sort array using specified collator","params":[{"required":"yes","param":"array $arr"},{"required":"no","param":"int $sort_flag = &#039;&#039;"},{"required":"yes","param":"Collator $coll"}],"returns":"bool"},"collator_sort_with_sort_keys":{"desc":"Sort array using specified collator and sort keys","params":[{"required":"yes","param":"array $arr"},{"required":"yes","param":"Collator $coll"}],"returns":"bool"},"com_event_sink":{"desc":"Connect events from a COM object to a PHP object","params":[{"required":"yes","param":"variant $comobject"},{"required":"yes","param":"object $sinkobject"},{"required":"no","param":"mixed $sinkinterface = &#039;&#039;"}],"returns":"bool"},"com_isenum":{"desc":"Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]","params":[{"required":"yes","param":"variant $com_module"}],"returns":"bool"},"com_load_typelib":{"desc":"Loads a Typelib","params":[{"required":"yes","param":"string $typelib_name"},{"required":"no","param":"bool $case_insensitive = true"}],"returns":"bool"},"com_message_pump":{"desc":"Process COM messages, sleeping for up to timeoutms milliseconds","params":[{"required":"no","param":"int $timeoutms = &#039;&#039;"}],"returns":"bool"},"com_print_typeinfo":{"desc":"Print out a PHP class definition for a dispatchable interface","params":[{"required":"yes","param":"object $comobject"},{"required":"no","param":"string $dispinterface = &#039;&#039;"},{"required":"no","param":"bool $wantsink = false"}],"returns":"bool"},"copy":{"desc":"Copies file","params":[{"required":"yes","param":"string $source"},{"required":"yes","param":"string $dest"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"bool"},"crack_check":{"desc":"Performs an obscure check with the given password","params":[{"required":"yes","param":"resource $dictionary"},{"required":"yes","param":"string $password"}],"returns":"bool"},"crack_closedict":{"desc":"Closes an open CrackLib dictionary","params":[{"required":"no","param":"resource $dictionary = &#039;&#039;"}],"returns":"bool"},"cubrid_bind":{"desc":"Bind variables to a prepared statement as parameters","params":[{"required":"yes","param":"resource $req_identifier"},{"required":"yes","param":"mixed $bind_param"},{"required":"yes","param":"mixed $bind_value"},{"required":"no","param":"string $bind_value_type = &#039;&#039;"}],"returns":"bool"},"cubrid_close":{"desc":"Close CUBRID connection","params":[{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"bool"},"cubrid_close_request":{"desc":"Close the request handle","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"bool"},"cubrid_commit":{"desc":"Commit a transaction","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"bool"},"cubrid_disconnect":{"desc":"Close a database connection","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"bool"},"cubrid_drop":{"desc":"Delete an instance using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"bool"},"cubrid_execute":{"desc":"Execute a prepared SQL statement","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $SQL"},{"required":"no","param":"int $option = &#039;&#039;"},{"required":"yes","param":"resource $request_identifier"}],"returns":"bool"},"cubrid_field_seek":{"desc":"Move the result set cursor to the specified field offset","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"bool"},"cubrid_free_result":{"desc":"Free the memory occupied by the result data","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"bool"},"cubrid_get_autocommit":{"desc":"Get auto-commit mode of the connection","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"bool"},"cubrid_lob_close":{"desc":"Close BLOB/CLOB data","params":[{"required":"yes","param":"array $lob_identifier_array"}],"returns":"bool"},"cubrid_lob_export":{"desc":"Export BLOB/CLOB data to file","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"resource $lob_identifier"},{"required":"yes","param":"string $path_name"}],"returns":"bool"},"cubrid_lob_send":{"desc":"Read BLOB/CLOB data and send straight to browser","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"resource $lob_identifier"}],"returns":"bool"},"cubrid_lock_read":{"desc":"Set a read lock on the given OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"bool"},"cubrid_lock_write":{"desc":"Set a write lock on the given OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"bool"},"cubrid_next_result":{"desc":"Get result of next query when executing multiple SQL statements","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"cubrid_ping":{"desc":"Ping a server connection or reconnect if there is no connection","params":[{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"bool"},"cubrid_rollback":{"desc":"Roll back a transaction","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"bool"},"cubrid_seq_drop":{"desc":"Delete an element from sequence type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"},{"required":"yes","param":"int $index"}],"returns":"bool"},"cubrid_seq_insert":{"desc":"Insert an element to a sequence type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"},{"required":"yes","param":"int $index"},{"required":"yes","param":"string $seq_element"}],"returns":"bool"},"cubrid_seq_put":{"desc":"Update the element value of sequence type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"},{"required":"yes","param":"int $index"},{"required":"yes","param":"string $seq_element"}],"returns":"bool"},"cubrid_set_add":{"desc":"Insert a single element to set type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"},{"required":"yes","param":"string $set_element"}],"returns":"bool"},"cubrid_set_autocommit":{"desc":"Set autocommit mode of the connection","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"bool $mode"}],"returns":"bool"},"cubrid_set_db_parameter":{"desc":"Sets the CUBRID database parameters","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"int $param_type"},{"required":"yes","param":"int $param_value"}],"returns":"bool"},"cubrid_set_drop":{"desc":"Delete an element from set type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"},{"required":"yes","param":"string $set_element"}],"returns":"bool"},"curl_setopt":{"desc":"Set an option for a cURL transfer","params":[{"required":"yes","param":"resource $ch"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"curl_setopt_array":{"desc":"Set multiple options for a cURL transfer","params":[{"required":"yes","param":"resource $ch"},{"required":"yes","param":"array $options"}],"returns":"bool"},"cyrus_bind":{"desc":"Bind callbacks to a Cyrus IMAP connection","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"array $callbacks"}],"returns":"bool"},"cyrus_close":{"desc":"Close connection to a Cyrus IMAP server","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"cyrus_unbind":{"desc":"Unbind ...","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $trigger_name"}],"returns":"bool"},"datefmt_is_lenient":{"desc":"Get the lenient used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"bool"},"datefmt_set_calendar":{"desc":"sets the calendar used to the appropriate calendar, which must be","params":[{"required":"yes","param":"int $which"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"bool"},"datefmt_set_lenient":{"desc":"Set the leniency of the parser","params":[{"required":"yes","param":"bool $lenient"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"bool"},"datefmt_set_pattern":{"desc":"Set the pattern used for the IntlDateFormatter","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"bool"},"datefmt_set_timezone_id":{"desc":"Sets the time zone to use","params":[{"required":"yes","param":"string $zone"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"bool"},"date_default_timezone_set":{"desc":"Sets the default timezone used by all date/time functions in a script","params":[{"required":"yes","param":"string $timezone_identifier"}],"returns":"bool"},"db2_bind_param":{"desc":"Binds a PHP variable to an SQL statement parameter","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"int $parameter-number"},{"required":"yes","param":"string $variable-name"},{"required":"no","param":"int $parameter-type = &#039;&#039;"},{"required":"no","param":"int $data-type = &#039;&#039;"},{"required":"no","param":"int $precision = -1"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"bool"},"db2_close":{"desc":"Closes a database connection","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"db2_commit":{"desc":"Commits a transaction","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"db2_execute":{"desc":"Executes a prepared SQL statement","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"array $parameters = &#039;&#039;"}],"returns":"bool"},"db2_fetch_row":{"desc":"Sets the result set pointer to the next row or requested row","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"int $row_number = &#039;&#039;"}],"returns":"bool"},"db2_free_result":{"desc":"Frees resources associated with a result set","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"db2_free_stmt":{"desc":"Frees resources associated with the indicated statement resource","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"db2_pclose":{"desc":"Closes a persistent database connection","params":[{"required":"yes","param":"resource $resource"}],"returns":"bool"},"db2_rollback":{"desc":"Rolls back a transaction","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"db2_set_option":{"desc":"Set options for connection or statement resources","params":[{"required":"yes","param":"resource $resource"},{"required":"yes","param":"array $options"},{"required":"yes","param":"int $type"}],"returns":"bool"},"dbase_add_record":{"desc":"Adds a record to a database","params":[{"required":"yes","param":"int $dbase_identifier"},{"required":"yes","param":"array $record"}],"returns":"bool"},"dbase_close":{"desc":"Closes a database","params":[{"required":"yes","param":"int $dbase_identifier"}],"returns":"bool"},"dbase_delete_record":{"desc":"Deletes a record from a database","params":[{"required":"yes","param":"int $dbase_identifier"},{"required":"yes","param":"int $record_number"}],"returns":"bool"},"dbase_pack":{"desc":"Packs a database","params":[{"required":"yes","param":"int $dbase_identifier"}],"returns":"bool"},"dbase_replace_record":{"desc":"Replaces a record in a database","params":[{"required":"yes","param":"int $dbase_identifier"},{"required":"yes","param":"array $record"},{"required":"yes","param":"int $record_number"}],"returns":"bool"},"dba_delete":{"desc":"Delete DBA entry specified by key","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dba_exists":{"desc":"Check whether key exists","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dba_insert":{"desc":"Insert entry","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"},{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dba_optimize":{"desc":"Optimize database","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dba_replace":{"desc":"Replace or insert entry","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"},{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dba_sync":{"desc":"Synchronize database","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"dbx_sort":{"desc":"Sort a result from a dbx_query by a custom sort function","params":[{"required":"yes","param":"object $result"},{"required":"yes","param":"string $user_compare_function"}],"returns":"bool"},"define":{"desc":"Defines a named constant","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"bool $case_insensitive = false"}],"returns":"bool"},"defined":{"desc":"Checks whether a given named constant exists","params":[{"required":"yes","param":"string $name"}],"returns":"bool"},"dio_tcsetattr":{"desc":"Sets terminal attributes and baud rate for a serial port","params":[{"required":"yes","param":"resource $fd"},{"required":"yes","param":"array $options"}],"returns":"bool"},"dio_truncate":{"desc":"Truncates file descriptor fd to offset bytes","params":[{"required":"yes","param":"resource $fd"},{"required":"yes","param":"int $offset"}],"returns":"bool"},"dl":{"desc":"Loads a PHP extension at runtime","params":[{"required":"yes","param":"string $library"}],"returns":"bool"},"db2_num_rows":{"desc":"Returns the number of rows affected by an SQL statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"boolean"},"empty":{"desc":"Determine whether a variable is empty","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"enchant_broker_dict_exists":{"desc":"Whether a dictionary exists or not. Using non-empty tag","params":[{"required":"yes","param":"resource $broker"},{"required":"yes","param":"string $tag"}],"returns":"bool"},"enchant_broker_free":{"desc":"Free the broker resource and its dictionnaries","params":[{"required":"yes","param":"resource $broker"}],"returns":"bool"},"enchant_broker_free_dict":{"desc":"Free a dictionary resource","params":[{"required":"yes","param":"resource $dict"}],"returns":"bool"},"enchant_broker_set_ordering":{"desc":"Declares a preference of dictionaries to use for the language","params":[{"required":"yes","param":"resource $broker"},{"required":"yes","param":"string $tag"},{"required":"yes","param":"string $ordering"}],"returns":"bool"},"enchant_dict_check":{"desc":"Check whether a word is correctly spelled or not","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"}],"returns":"bool"},"enchant_dict_is_in_session":{"desc":"whether or not &#039;word&#039; exists in this spelling-session","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"}],"returns":"bool"},"enchant_dict_quick_check":{"desc":"Check the word is correctly spelled and provide suggestions","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"},{"required":"no","param":"array $suggestions = &#039;&#039;"}],"returns":"bool"},"error_log":{"desc":"Send an error message somewhere","params":[{"required":"yes","param":"string $message"},{"required":"no","param":"int $message_type = &#039;&#039;"},{"required":"no","param":"string $destination = &#039;&#039;"},{"required":"no","param":"string $extra_headers = &#039;&#039;"}],"returns":"bool"},"event_add":{"desc":"Add an event to the set of monitored events","params":[{"required":"yes","param":"resource $event"},{"required":"no","param":"int $timeout = -1"}],"returns":"bool"},"event_base_loopbreak":{"desc":"Abort event loop","params":[{"required":"yes","param":"resource $event_base"}],"returns":"bool"},"event_base_loopexit":{"desc":"Exit loop after a time","params":[{"required":"yes","param":"resource $event_base"},{"required":"no","param":"int $timeout = -1"}],"returns":"bool"},"event_base_priority_init":{"desc":"Set the number of event priority levels","params":[{"required":"yes","param":"resource $event_base"},{"required":"yes","param":"int $npriorities"}],"returns":"bool"},"event_base_set":{"desc":"Associate event base with an event","params":[{"required":"yes","param":"resource $event"},{"required":"yes","param":"resource $event_base"}],"returns":"bool"},"event_buffer_base_set":{"desc":"Associate buffered event with an event base","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"resource $event_base"}],"returns":"bool"},"event_buffer_disable":{"desc":"Disable a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $events"}],"returns":"bool"},"event_buffer_enable":{"desc":"Enable a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $events"}],"returns":"bool"},"event_buffer_priority_set":{"desc":"Assign a priority to a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $priority"}],"returns":"bool"},"event_buffer_set_callback":{"desc":"Set or reset callbacks for a buffered event","params":[{"required":"yes","param":"resource $event"},{"required":"yes","param":"mixed $readcb"},{"required":"yes","param":"mixed $writecb"},{"required":"yes","param":"mixed $errorcb"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"event_buffer_write":{"desc":"Write data to a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"string $data"},{"required":"no","param":"int $data_size = -1"}],"returns":"bool"},"event_del":{"desc":"Remove an event from the set of monitored events","params":[{"required":"yes","param":"resource $event"}],"returns":"bool"},"event_set":{"desc":"Prepare an event","params":[{"required":"yes","param":"resource $event"},{"required":"yes","param":"mixed $fd"},{"required":"yes","param":"int $events"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"extension_loaded":{"desc":"Find out whether an extension is loaded","params":[{"required":"yes","param":"string $name"}],"returns":"bool"},"fam_cancel_monitor":{"desc":"Terminate monitoring","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"resource $fam_monitor"}],"returns":"bool"},"fam_resume_monitor":{"desc":"Resume suspended monitoring","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"resource $fam_monitor"}],"returns":"bool"},"fam_suspend_monitor":{"desc":"Temporarily suspend monitoring","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"resource $fam_monitor"}],"returns":"bool"},"fbsql_autocommit":{"desc":"Enable or disable autocommit","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"bool $OnOff = &#039;&#039;"}],"returns":"bool"},"fbsql_change_user":{"desc":"Change logged in user of the active connection","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_close":{"desc":"Close FrontBase connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_commit":{"desc":"Commits a transaction to the database","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_create_db":{"desc":"Create a FrontBase database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"},{"required":"no","param":"string $database_options = &#039;&#039;"}],"returns":"bool"},"fbsql_data_seek":{"desc":"Move internal result pointer","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row_number"}],"returns":"bool"},"fbsql_drop_db":{"desc":"Drop (delete) a FrontBase database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_field_seek":{"desc":"Set result pointer to a specified field offset","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"bool"},"fbsql_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"fbsql_next_result":{"desc":"Move the internal result pointer to the next result","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"fbsql_rollback":{"desc":"Rollback a transaction to the database","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_select_db":{"desc":"Select a FrontBase database","params":[{"required":"no","param":"string $database_name = &#039;&#039;"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_set_lob_mode":{"desc":"Set the LOB retrieve mode for a FrontBase result set","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $lob_mode"}],"returns":"bool"},"fbsql_set_password":{"desc":"Change the password for a given user","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"yes","param":"string $old_password"}],"returns":"bool"},"fbsql_start_db":{"desc":"Start a database on local or remote server","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"},{"required":"no","param":"string $database_options = &#039;&#039;"}],"returns":"bool"},"fbsql_stop_db":{"desc":"Stop a database on local or remote server","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"fbsql_warnings":{"desc":"Enable or disable FrontBase warnings","params":[{"required":"no","param":"bool $OnOff = &#039;&#039;"}],"returns":"bool"},"fclose":{"desc":"Closes an open file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"fdf_add_doc_javascript":{"desc":"Adds javascript code to the FDF document","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $script_name"},{"required":"yes","param":"string $script_code"}],"returns":"bool"},"fdf_add_template":{"desc":"Adds a template into the FDF document","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"int $newpage"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $template"},{"required":"yes","param":"int $rename"}],"returns":"bool"},"fdf_enum_values":{"desc":"Call a user defined function for each document value","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $userdata = &#039;&#039;"}],"returns":"bool"},"fdf_get_ap":{"desc":"Get the appearance of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $field"},{"required":"yes","param":"int $face"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"fdf_remove_item":{"desc":"Sets target frame for form","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $item"}],"returns":"bool"},"fdf_save":{"desc":"Save a FDF document","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"fdf_set_ap":{"desc":"Set the appearance of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $field_name"},{"required":"yes","param":"int $face"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $page_number"}],"returns":"bool"},"fdf_set_encoding":{"desc":"Sets FDF character encoding","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $encoding"}],"returns":"bool"},"fdf_set_file":{"desc":"Set PDF document to display FDF data in","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $url"},{"required":"no","param":"string $target_frame = &#039;&#039;"}],"returns":"bool"},"fdf_set_flags":{"desc":"Sets a flag of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $whichFlags"},{"required":"yes","param":"int $newFlags"}],"returns":"bool"},"fdf_set_javascript_action":{"desc":"Sets an javascript action of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $trigger"},{"required":"yes","param":"string $script"}],"returns":"bool"},"fdf_set_on_import_javascript":{"desc":"Adds javascript code to be executed when Acrobat opens the FDF","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $script"},{"required":"yes","param":"bool $before_data_import"}],"returns":"bool"},"fdf_set_opt":{"desc":"Sets an option of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $element"},{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"bool"},"fdf_set_status":{"desc":"Set the value of the /STATUS key","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $status"}],"returns":"bool"},"fdf_set_submit_form_action":{"desc":"Sets a submit form action of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $trigger"},{"required":"yes","param":"string $script"},{"required":"yes","param":"int $flags"}],"returns":"bool"},"fdf_set_target_frame":{"desc":"Set target frame for form display","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $frame_name"}],"returns":"bool"},"fdf_set_value":{"desc":"Set the value of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"int $isName = &#039;&#039;"}],"returns":"bool"},"fdf_set_version":{"desc":"Sets version number for a FDF file","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $version"}],"returns":"bool"},"feof":{"desc":"Tests for end-of-file on a file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"fflush":{"desc":"Flushes the output to a file","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"filepro":{"desc":"Read and verify the map file","params":[{"required":"yes","param":"string $directory"}],"returns":"bool"},"file_exists":{"desc":"Checks whether a file or directory exists","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"filter_has_var":{"desc":"Checks if variable of specified type exists","params":[{"required":"yes","param":"int $type"},{"required":"yes","param":"string $variable_name"}],"returns":"bool"},"finfo_close":{"desc":"Close fileinfo resource","params":[{"required":"yes","param":"resource $finfo"}],"returns":"bool"},"finfo_set_flags":{"desc":"Set libmagic configuration options","params":[{"required":"yes","param":"resource $finfo"},{"required":"yes","param":"int $options"}],"returns":"bool"},"flock":{"desc":"Portable advisory file locking","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $operation"},{"required":"no","param":"int $wouldblock = &#039;&#039;"}],"returns":"bool"},"fnmatch":{"desc":"Match filename against a pattern","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"ftp_alloc":{"desc":"Allocates space for a file to be uploaded","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"int $filesize"},{"required":"no","param":"string $result = &#039;&#039;"}],"returns":"bool"},"ftp_cdup":{"desc":"Changes to the parent directory","params":[{"required":"yes","param":"resource $ftp_stream"}],"returns":"bool"},"ftp_chdir":{"desc":"Changes the current directory on a FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $directory"}],"returns":"bool"},"ftp_delete":{"desc":"Deletes a file on the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $path"}],"returns":"bool"},"ftp_exec":{"desc":"Requests execution of a command on the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $command"}],"returns":"bool"},"ftp_fget":{"desc":"Downloads a file from the FTP server and saves to an open file","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $resumepos = &#039;&#039;"}],"returns":"bool"},"ftp_fput":{"desc":"Uploads from an open file to the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $startpos = &#039;&#039;"}],"returns":"bool"},"ftp_get":{"desc":"Downloads a file from the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $local_file"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $resumepos = &#039;&#039;"}],"returns":"bool"},"ftp_login":{"desc":"Logs in to an FTP connection","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"}],"returns":"bool"},"ftp_pasv":{"desc":"Turns passive mode on or off","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"bool $pasv"}],"returns":"bool"},"ftp_put":{"desc":"Uploads a file to the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"string $local_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $startpos = &#039;&#039;"}],"returns":"bool"},"ftp_rename":{"desc":"Renames a file or a directory on the FTP server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $oldname"},{"required":"yes","param":"string $newname"}],"returns":"bool"},"ftp_rmdir":{"desc":"Removes a directory","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $directory"}],"returns":"bool"},"ftp_set_option":{"desc":"Set miscellaneous runtime FTP options","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"ftp_site":{"desc":"Sends a SITE command to the server","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $command"}],"returns":"bool"},"ftruncate":{"desc":"Truncates a file to a given length","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $size"}],"returns":"bool"},"function_exists":{"desc":"Return TRUE if the given function has been defined","params":[{"required":"yes","param":"string $function_name"}],"returns":"bool"},"gc_enabled":{"desc":"Returns status of the circular reference collector","params":[],"returns":"bool"},"geoip_db_avail":{"desc":"Determine if GeoIP Database is available","params":[{"required":"yes","param":"int $database"}],"returns":"bool"},"getmxrr":{"desc":"Get MX records corresponding to a given Internet host name","params":[{"required":"yes","param":"string $hostname"},{"required":"yes","param":"array $mxhosts"},{"required":"no","param":"array $weight = &#039;&#039;"}],"returns":"bool"},"gmp_perfect_square":{"desc":"Perfect square check","params":[{"required":"yes","param":"resource $a"}],"returns":"bool"},"gmp_testbit":{"desc":"Tests if a bit is set","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"int $index"}],"returns":"bool"},"gnupg_adddecryptkey":{"desc":"Add a key for decryption","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $fingerprint"},{"required":"yes","param":"string $passphrase"}],"returns":"bool"},"gnupg_addencryptkey":{"desc":"Add a key for encryption","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $fingerprint"}],"returns":"bool"},"gnupg_addsignkey":{"desc":"Add a key for signing","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $fingerprint"},{"required":"no","param":"string $passphrase = &#039;&#039;"}],"returns":"bool"},"gnupg_cleardecryptkeys":{"desc":"Removes all keys which were set for decryption before","params":[{"required":"yes","param":"resource $identifier"}],"returns":"bool"},"gnupg_clearencryptkeys":{"desc":"Removes all keys which were set for encryption before","params":[{"required":"yes","param":"resource $identifier"}],"returns":"bool"},"gnupg_clearsignkeys":{"desc":"Removes all keys which were set for signing before","params":[{"required":"yes","param":"resource $identifier"}],"returns":"bool"},"gnupg_setarmor":{"desc":"Toggle armored output","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"int $armor"}],"returns":"bool"},"gnupg_setsignmode":{"desc":"Sets the mode for signing","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"int $signmode"}],"returns":"bool"},"gupnp_context_host_path":{"desc":"Start hosting","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"string $local_path"},{"required":"yes","param":"string $server_path"}],"returns":"bool"},"gupnp_context_timeout_add":{"desc":"Sets a function to be called at regular intervals","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"int $timeout"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"gupnp_context_unhost_path":{"desc":"Stop hosting","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"string $server_path"}],"returns":"bool"},"gupnp_control_point_browse_start":{"desc":"Start browsing","params":[{"required":"yes","param":"resource $cpoint"}],"returns":"bool"},"gupnp_control_point_browse_stop":{"desc":"Stop browsing","params":[{"required":"yes","param":"resource $cpoint"}],"returns":"bool"},"gupnp_control_point_callback_set":{"desc":"Set control point callback","params":[{"required":"yes","param":"resource $cpoint"},{"required":"yes","param":"int $signal"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"gupnp_device_action_callback_set":{"desc":"Set device callback function","params":[{"required":"yes","param":"resource $root_device"},{"required":"yes","param":"int $signal"},{"required":"yes","param":"string $action_name"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"gupnp_root_device_get_available":{"desc":"Check whether root device is available","params":[{"required":"yes","param":"resource $root_device"}],"returns":"bool"},"gupnp_root_device_set_available":{"desc":"Set whether or not root_device is available","params":[{"required":"yes","param":"resource $root_device"},{"required":"yes","param":"bool $available"}],"returns":"bool"},"gupnp_root_device_start":{"desc":"Start main loop","params":[{"required":"yes","param":"resource $root_device"}],"returns":"bool"},"gupnp_root_device_stop":{"desc":"Stop main loop","params":[{"required":"yes","param":"resource $root_device"}],"returns":"bool"},"gupnp_service_action_return":{"desc":"Return succesfully","params":[{"required":"yes","param":"resource $action"}],"returns":"bool"},"gupnp_service_action_return_error":{"desc":"Return error code","params":[{"required":"yes","param":"resource $action"},{"required":"yes","param":"int $error_code"},{"required":"no","param":"string $error_description = &#039;&#039;"}],"returns":"bool"},"gupnp_service_action_set":{"desc":"Sets the specified action return values","params":[{"required":"yes","param":"resource $action"},{"required":"yes","param":"string $name"},{"required":"yes","param":"int $type"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"gupnp_service_freeze_notify":{"desc":"Freeze new notifications","params":[{"required":"yes","param":"resource $service"}],"returns":"bool"},"gupnp_service_notify":{"desc":"Notifies listening clients","params":[{"required":"yes","param":"resource $service"},{"required":"yes","param":"string $name"},{"required":"yes","param":"int $type"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"gupnp_service_proxy_action_set":{"desc":"Send action to the service and set value","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"string $action"},{"required":"yes","param":"string $name"},{"required":"yes","param":"mixed $value"},{"required":"yes","param":"int $type"}],"returns":"bool"},"gupnp_service_proxy_add_notify":{"desc":"Sets up callback for variable change notification","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"string $value"},{"required":"yes","param":"int $type"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"gupnp_service_proxy_callback_set":{"desc":"Set service proxy callback for signal","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"int $signal"},{"required":"yes","param":"mixed $callback"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"bool"},"gupnp_service_proxy_get_subscribed":{"desc":"Check whether subscription is valid to the service","params":[{"required":"yes","param":"resource $proxy"}],"returns":"bool"},"gupnp_service_proxy_remove_notify":{"desc":"Cancels the variable change notification","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"string $value"}],"returns":"bool"},"gupnp_service_proxy_set_subscribed":{"desc":"(Un)subscribes to the service.","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"bool $subscribed"}],"returns":"bool"},"gupnp_service_thaw_notify":{"desc":"Sends out any pending notifications and stops queuing of new ones.","params":[{"required":"yes","param":"resource $service"}],"returns":"bool"},"gzclose":{"desc":"Close an open gz-file pointer","params":[{"required":"yes","param":"resource $zp"}],"returns":"bool"},"gzrewind":{"desc":"Rewind the position of a gz-file pointer","params":[{"required":"yes","param":"resource $zp"}],"returns":"bool"},"hash_update":{"desc":"Pump data into an active hashing context","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"string $data"}],"returns":"bool"},"hash_update_file":{"desc":"Pump data into an active hashing context from a file","params":[{"required":"no","param":"resource $context = &#039;&#039;"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"headers_sent":{"desc":"Checks if or where headers have been sent","params":[{"required":"no","param":"string $file = &#039;&#039;"},{"required":"no","param":"int $line = &#039;&#039;"}],"returns":"bool"},"http_cache_etag":{"desc":"Caching by ETag","params":[{"required":"no","param":"string $etag = &#039;&#039;"}],"returns":"bool"},"http_cache_last_modified":{"desc":"Caching by last modification","params":[{"required":"no","param":"int $timestamp_or_expires = &#039;&#039;"}],"returns":"bool"},"http_match_etag":{"desc":"Match ETag","params":[{"required":"yes","param":"string $etag"},{"required":"no","param":"bool $for_range = false"}],"returns":"bool"},"http_match_modified":{"desc":"Match last modification","params":[{"required":"no","param":"int $timestamp = -1"},{"required":"no","param":"bool $for_range = false"}],"returns":"bool"},"http_match_request_header":{"desc":"Match any header","params":[{"required":"yes","param":"string $header"},{"required":"yes","param":"string $value"},{"required":"no","param":"bool $match_case = false"}],"returns":"bool"},"http_redirect":{"desc":"Issue HTTP redirect","params":[{"required":"no","param":"string $url = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"},{"required":"no","param":"bool $session = false"},{"required":"no","param":"int $status = &#039;&#039;"}],"returns":"bool"},"http_request_method_unregister":{"desc":"Unregister request method","params":[{"required":"yes","param":"mixed $method"}],"returns":"bool"},"http_send_content_disposition":{"desc":"Send Content-Disposition","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $inline = false"}],"returns":"bool"},"http_send_content_type":{"desc":"Send Content-Type","params":[{"required":"no","param":"string $content_type = &quot;application/x-octetstream&quot;"}],"returns":"bool"},"http_send_data":{"desc":"Send arbitrary data","params":[{"required":"yes","param":"string $data"}],"returns":"bool"},"http_send_file":{"desc":"Send file","params":[{"required":"yes","param":"string $file"}],"returns":"bool"},"http_send_last_modified":{"desc":"Send Last-Modified","params":[{"required":"no","param":"int $timestamp = &#039;&#039;"}],"returns":"bool"},"http_send_status":{"desc":"Send HTTP response status","params":[{"required":"yes","param":"int $status"}],"returns":"bool"},"http_send_stream":{"desc":"Send stream","params":[{"required":"yes","param":"resource $stream"}],"returns":"bool"},"hw_changeobject":{"desc":"Changes attributes of an object (obsolete)","params":[{"required":"yes","param":"int $link"},{"required":"yes","param":"int $objid"},{"required":"yes","param":"array $attributes"}],"returns":"bool"},"hw_Close":{"desc":"Closes the Hyperwave connection","params":[{"required":"yes","param":"int $connection"}],"returns":"bool"},"hw_Deleteobject":{"desc":"Deletes object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $object_to_delete"}],"returns":"bool"},"hw_Document_SetContent":{"desc":"Sets/replaces content of hw_document","params":[{"required":"yes","param":"int $hw_document"},{"required":"yes","param":"string $content"}],"returns":"bool"},"hw_EditText":{"desc":"Retrieve text document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $hw_document"}],"returns":"bool"},"hw_Free_Document":{"desc":"Frees hw_document","params":[{"required":"yes","param":"int $hw_document"}],"returns":"bool"},"hw_insertanchors":{"desc":"Inserts only anchors into text","params":[{"required":"yes","param":"int $hwdoc"},{"required":"yes","param":"array $anchorecs"},{"required":"yes","param":"array $dest"},{"required":"no","param":"array $urlprefixes = &#039;&#039;"}],"returns":"bool"},"hw_Modifyobject":{"desc":"Modifies object record","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $object_to_change"},{"required":"yes","param":"array $remove"},{"required":"yes","param":"array $add"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"bool"},"hw_Output_Document":{"desc":"Prints hw_document","params":[{"required":"yes","param":"int $hw_document"}],"returns":"bool"},"hw_Unlock":{"desc":"Unlock object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"bool"},"ibase_add_user":{"desc":"Add a user to a security database (only for IB6 or later)","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $user_name"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $first_name = &#039;&#039;"},{"required":"no","param":"string $middle_name = &#039;&#039;"},{"required":"no","param":"string $last_name = &#039;&#039;"}],"returns":"bool"},"ibase_blob_cancel":{"desc":"Cancel creating blob","params":[{"required":"yes","param":"resource $blob_handle"}],"returns":"bool"},"ibase_blob_echo":{"desc":"Output blob contents to browser","params":[{"required":"yes","param":"string $blob_id"},{"required":"yes","param":"resource $link_identifier"}],"returns":"bool"},"ibase_close":{"desc":"Close a connection to an InterBase database","params":[{"required":"no","param":"resource $connection_id = &#039;&#039;"}],"returns":"bool"},"ibase_commit":{"desc":"Commit a transaction","params":[{"required":"no","param":"resource $link_or_trans_identifier = &#039;&#039;"}],"returns":"bool"},"ibase_commit_ret":{"desc":"Commit a transaction without closing it","params":[{"required":"no","param":"resource $link_or_trans_identifier = &#039;&#039;"}],"returns":"bool"},"ibase_delete_user":{"desc":"Delete a user from a security database (only for IB6 or later)","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $user_name"}],"returns":"bool"},"ibase_drop_db":{"desc":"Drops a database","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"ibase_free_event_handler":{"desc":"Cancels a registered event handler","params":[{"required":"yes","param":"resource $event"}],"returns":"bool"},"ibase_free_query":{"desc":"Free memory allocated by a prepared query","params":[{"required":"yes","param":"resource $query"}],"returns":"bool"},"ibase_free_result":{"desc":"Free a result set","params":[{"required":"yes","param":"resource $result_identifier"}],"returns":"bool"},"ibase_maintain_db":{"desc":"Execute a maintenance command on the database server","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $db"},{"required":"yes","param":"int $action"},{"required":"no","param":"int $argument = &#039;&#039;"}],"returns":"bool"},"ibase_modify_user":{"desc":"Modify a user to a security database (only for IB6 or later)","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $user_name"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $first_name = &#039;&#039;"},{"required":"no","param":"string $middle_name = &#039;&#039;"},{"required":"no","param":"string $last_name = &#039;&#039;"}],"returns":"bool"},"ibase_name_result":{"desc":"Assigns a name to a result set","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"string $name"}],"returns":"bool"},"ibase_rollback":{"desc":"Roll back a transaction","params":[{"required":"no","param":"resource $link_or_trans_identifier = &#039;&#039;"}],"returns":"bool"},"ibase_rollback_ret":{"desc":"Roll back a transaction without closing it","params":[{"required":"no","param":"resource $link_or_trans_identifier = &#039;&#039;"}],"returns":"bool"},"ibase_service_detach":{"desc":"Disconnect from the service manager","params":[{"required":"yes","param":"resource $service_handle"}],"returns":"bool"},"ibase_timefmt":{"desc":"Sets the format of timestamp, date and time type columns returned from queries","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $columntype = &#039;&#039;"}],"returns":"bool"},"iconv_set_encoding":{"desc":"Set current setting for character encoding conversion","params":[{"required":"yes","param":"string $type"},{"required":"yes","param":"string $charset"}],"returns":"bool"},"id3_remove_tag":{"desc":"Remove an existing ID3 tag","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $version = ID3_V1_0"}],"returns":"bool"},"id3_set_tag":{"desc":"Update information stored in an ID3 tag","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $tag"},{"required":"no","param":"int $version = ID3_V1_0"}],"returns":"bool"},"ifxus_close_slob":{"desc":"Deletes the slob object","params":[{"required":"yes","param":"int $bid"}],"returns":"bool"},"ifxus_free_slob":{"desc":"Deletes the slob object","params":[{"required":"yes","param":"int $bid"}],"returns":"bool"},"ifx_blobinfile_mode":{"desc":"Set the default blob mode for all select queries","params":[{"required":"yes","param":"int $mode"}],"returns":"bool"},"ifx_byteasvarchar":{"desc":"Set the default byte mode","params":[{"required":"yes","param":"int $mode"}],"returns":"bool"},"ifx_close":{"desc":"Close Informix connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"ifx_do":{"desc":"Execute a previously prepared SQL-statement","params":[{"required":"yes","param":"resource $result_id"}],"returns":"bool"},"ifx_free_blob":{"desc":"Deletes the blob object","params":[{"required":"yes","param":"int $bid"}],"returns":"bool"},"ifx_free_char":{"desc":"Deletes the char object","params":[{"required":"yes","param":"int $bid"}],"returns":"bool"},"ifx_free_result":{"desc":"Releases resources for the query","params":[{"required":"yes","param":"resource $result_id"}],"returns":"bool"},"ifx_nullformat":{"desc":"Sets the default return value on a fetch row","params":[{"required":"yes","param":"int $mode"}],"returns":"bool"},"ifx_textasvarchar":{"desc":"Set the default text mode","params":[{"required":"yes","param":"int $mode"}],"returns":"bool"},"ifx_update_blob":{"desc":"Updates the content of the blob object","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"string $content"}],"returns":"bool"},"ifx_update_char":{"desc":"Updates the content of the char object","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"string $content"}],"returns":"bool"},"image2wbmp":{"desc":"Output image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"},{"required":"no","param":"int $threshold = &#039;&#039;"}],"returns":"bool"},"imagealphablending":{"desc":"Set the blending mode for an image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"bool $blendmode"}],"returns":"bool"},"imageantialias":{"desc":"Should antialias functions be used or not","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"bool $enabled"}],"returns":"bool"},"imagearc":{"desc":"Draws an arc","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $cx"},{"required":"yes","param":"int $cy"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $start"},{"required":"yes","param":"int $end"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagechar":{"desc":"Draw a character horizontally","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $font"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"string $c"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagecharup":{"desc":"Draw a character vertically","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $font"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"string $c"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagecolordeallocate":{"desc":"De-allocate a color for an image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagecolormatch":{"desc":"Makes the colors of the palette version of an image more closely match the true color version","params":[{"required":"yes","param":"resource $image1"},{"required":"yes","param":"resource $image2"}],"returns":"bool"},"imageconvolution":{"desc":"Apply a 3x3 convolution matrix, using coefficient and offset","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"array $matrix"},{"required":"yes","param":"float $div"},{"required":"yes","param":"float $offset"}],"returns":"bool"},"imagecopy":{"desc":"Copy part of an image","params":[{"required":"yes","param":"resource $dst_im"},{"required":"yes","param":"resource $src_im"},{"required":"yes","param":"int $dst_x"},{"required":"yes","param":"int $dst_y"},{"required":"yes","param":"int $src_x"},{"required":"yes","param":"int $src_y"},{"required":"yes","param":"int $src_w"},{"required":"yes","param":"int $src_h"}],"returns":"bool"},"imagecopymerge":{"desc":"Copy and merge part of an image","params":[{"required":"yes","param":"resource $dst_im"},{"required":"yes","param":"resource $src_im"},{"required":"yes","param":"int $dst_x"},{"required":"yes","param":"int $dst_y"},{"required":"yes","param":"int $src_x"},{"required":"yes","param":"int $src_y"},{"required":"yes","param":"int $src_w"},{"required":"yes","param":"int $src_h"},{"required":"yes","param":"int $pct"}],"returns":"bool"},"imagecopymergegray":{"desc":"Copy and merge part of an image with gray scale","params":[{"required":"yes","param":"resource $dst_im"},{"required":"yes","param":"resource $src_im"},{"required":"yes","param":"int $dst_x"},{"required":"yes","param":"int $dst_y"},{"required":"yes","param":"int $src_x"},{"required":"yes","param":"int $src_y"},{"required":"yes","param":"int $src_w"},{"required":"yes","param":"int $src_h"},{"required":"yes","param":"int $pct"}],"returns":"bool"},"imagecopyresampled":{"desc":"Copy and resize part of an image with resampling","params":[{"required":"yes","param":"resource $dst_image"},{"required":"yes","param":"resource $src_image"},{"required":"yes","param":"int $dst_x"},{"required":"yes","param":"int $dst_y"},{"required":"yes","param":"int $src_x"},{"required":"yes","param":"int $src_y"},{"required":"yes","param":"int $dst_w"},{"required":"yes","param":"int $dst_h"},{"required":"yes","param":"int $src_w"},{"required":"yes","param":"int $src_h"}],"returns":"bool"},"imagecopyresized":{"desc":"Copy and resize part of an image","params":[{"required":"yes","param":"resource $dst_image"},{"required":"yes","param":"resource $src_image"},{"required":"yes","param":"int $dst_x"},{"required":"yes","param":"int $dst_y"},{"required":"yes","param":"int $src_x"},{"required":"yes","param":"int $src_y"},{"required":"yes","param":"int $dst_w"},{"required":"yes","param":"int $dst_h"},{"required":"yes","param":"int $src_w"},{"required":"yes","param":"int $src_h"}],"returns":"bool"},"imagedashedline":{"desc":"Draw a dashed line","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x1"},{"required":"yes","param":"int $y1"},{"required":"yes","param":"int $x2"},{"required":"yes","param":"int $y2"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagedestroy":{"desc":"Destroy an image","params":[{"required":"yes","param":"resource $image"}],"returns":"bool"},"imageellipse":{"desc":"Draw an ellipse","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $cx"},{"required":"yes","param":"int $cy"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefill":{"desc":"Flood fill","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefilledarc":{"desc":"Draw a partial arc and fill it","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $cx"},{"required":"yes","param":"int $cy"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $start"},{"required":"yes","param":"int $end"},{"required":"yes","param":"int $color"},{"required":"yes","param":"int $style"}],"returns":"bool"},"imagefilledellipse":{"desc":"Draw a filled ellipse","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $cx"},{"required":"yes","param":"int $cy"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefilledpolygon":{"desc":"Draw a filled polygon","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"array $points"},{"required":"yes","param":"int $num_points"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefilledrectangle":{"desc":"Draw a filled rectangle","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x1"},{"required":"yes","param":"int $y1"},{"required":"yes","param":"int $x2"},{"required":"yes","param":"int $y2"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefilltoborder":{"desc":"Flood fill to specific color","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $border"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagefilter":{"desc":"Applies a filter to an image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $filtertype"},{"required":"no","param":"int $arg1 = &#039;&#039;"},{"required":"no","param":"int $arg2 = &#039;&#039;"},{"required":"no","param":"int $arg3 = &#039;&#039;"},{"required":"no","param":"int $arg4 = &#039;&#039;"}],"returns":"bool"},"imagegammacorrect":{"desc":"Apply a gamma correction to a GD image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"float $inputgamma"},{"required":"yes","param":"float $outputgamma"}],"returns":"bool"},"imagegd":{"desc":"Output GD image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"imagegd2":{"desc":"Output GD2 image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"},{"required":"no","param":"int $chunk_size = &#039;&#039;"},{"required":"no","param":"int $type = &#039;&#039;"}],"returns":"bool"},"imagegif":{"desc":"Output image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"imageistruecolor":{"desc":"Finds whether an image is a truecolor image","params":[{"required":"yes","param":"resource $image"}],"returns":"bool"},"imagejpeg":{"desc":"Output image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"},{"required":"no","param":"int $quality = &#039;&#039;"}],"returns":"bool"},"imagelayereffect":{"desc":"Set the alpha blending flag to use the bundled libgd layering effects","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $effect"}],"returns":"bool"},"imageline":{"desc":"Draw a line","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x1"},{"required":"yes","param":"int $y1"},{"required":"yes","param":"int $x2"},{"required":"yes","param":"int $y2"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagepng":{"desc":"Output a PNG image to either the browser or a file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"},{"required":"no","param":"int $quality = &#039;&#039;"},{"required":"no","param":"int $filters = &#039;&#039;"}],"returns":"bool"},"imagepolygon":{"desc":"Draws a polygon","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"array $points"},{"required":"yes","param":"int $num_points"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagepsencodefont":{"desc":"Change the character encoding vector of a font","params":[{"required":"yes","param":"resource $font_index"},{"required":"yes","param":"string $encodingfile"}],"returns":"bool"},"imagepsextendfont":{"desc":"Extend or condense a font","params":[{"required":"yes","param":"resource $font_index"},{"required":"yes","param":"float $extend"}],"returns":"bool"},"imagepsfreefont":{"desc":"Free memory used by a PostScript Type 1 font","params":[{"required":"yes","param":"resource $font_index"}],"returns":"bool"},"imagepsslantfont":{"desc":"Slant a font","params":[{"required":"yes","param":"resource $font_index"},{"required":"yes","param":"float $slant"}],"returns":"bool"},"imagerectangle":{"desc":"Draw a rectangle","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x1"},{"required":"yes","param":"int $y1"},{"required":"yes","param":"int $x2"},{"required":"yes","param":"int $y2"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagesavealpha":{"desc":"Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"bool $saveflag"}],"returns":"bool"},"imagesetbrush":{"desc":"Set the brush image for line drawing","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"resource $brush"}],"returns":"bool"},"imagesetpixel":{"desc":"Set a single pixel","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagesetstyle":{"desc":"Set the style for line drawing","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"array $style"}],"returns":"bool"},"imagesetthickness":{"desc":"Set the thickness for line drawing","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $thickness"}],"returns":"bool"},"imagesettile":{"desc":"Set the tile image for filling","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"resource $tile"}],"returns":"bool"},"imagestring":{"desc":"Draw a string horizontally","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $font"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"string $string"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagestringup":{"desc":"Draw a string vertically","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $font"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"yes","param":"string $string"},{"required":"yes","param":"int $color"}],"returns":"bool"},"imagetruecolortopalette":{"desc":"Convert a true color image to a palette image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"bool $dither"},{"required":"yes","param":"int $ncolors"}],"returns":"bool"},"imagewbmp":{"desc":"Output image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"string $filename = &#039;&#039;"},{"required":"no","param":"int $foreground = &#039;&#039;"}],"returns":"bool"},"imagexbm":{"desc":"Output XBM image to browser or file","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"string $filename"},{"required":"no","param":"int $foreground = &#039;&#039;"}],"returns":"bool"},"imap_append":{"desc":"Append a string message to a specified mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"string $message"},{"required":"no","param":"string $options = &#039;&#039;"},{"required":"no","param":"string $internal_date = &#039;&#039;"}],"returns":"bool"},"imap_clearflag_full":{"desc":"Clears flags on messages","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $sequence"},{"required":"yes","param":"string $flag"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"bool"},"imap_close":{"desc":"Close an IMAP stream","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"no","param":"int $flag = &#039;&#039;"}],"returns":"bool"},"imap_createmailbox":{"desc":"Create a new mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"}],"returns":"bool"},"imap_delete":{"desc":"Mark a message for deletion from current mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"bool"},"imap_deletemailbox":{"desc":"Delete a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"}],"returns":"bool"},"imap_expunge":{"desc":"Delete all messages marked for deletion","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"bool"},"imap_gc":{"desc":"Clears IMAP cache","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $caches"}],"returns":"bool"},"imap_mail":{"desc":"Send an email message","params":[{"required":"yes","param":"string $to"},{"required":"yes","param":"string $subject"},{"required":"yes","param":"string $message"},{"required":"no","param":"string $additional_headers = &#039;&#039;"},{"required":"no","param":"string $cc = &#039;&#039;"},{"required":"no","param":"string $bcc = &#039;&#039;"},{"required":"no","param":"string $rpath = &#039;&#039;"}],"returns":"bool"},"imap_mail_copy":{"desc":"Copy specified messages to a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $msglist"},{"required":"yes","param":"string $mailbox"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"bool"},"imap_mail_move":{"desc":"Move specified messages to a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $msglist"},{"required":"yes","param":"string $mailbox"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"bool"},"imap_ping":{"desc":"Check if the IMAP stream is still active","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"bool"},"imap_renamemailbox":{"desc":"Rename an old mailbox to new mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $old_mbox"},{"required":"yes","param":"string $new_mbox"}],"returns":"bool"},"imap_reopen":{"desc":"Reopen IMAP stream to new mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"int $n_retries = &#039;&#039;"}],"returns":"bool"},"imap_savebody":{"desc":"Save a specific body section to a file","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"mixed $file"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"string $part_number = &quot;&quot;"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"bool"},"imap_setacl":{"desc":"Sets the ACL for a giving mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"string $id"},{"required":"yes","param":"string $rights"}],"returns":"bool"},"imap_setflag_full":{"desc":"Sets flags on messages","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $sequence"},{"required":"yes","param":"string $flag"},{"required":"no","param":"int $options = NIL"}],"returns":"bool"},"imap_set_quota":{"desc":"Sets a quota for a given mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $quota_root"},{"required":"yes","param":"int $quota_limit"}],"returns":"bool"},"imap_subscribe":{"desc":"Subscribe to a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"}],"returns":"bool"},"imap_undelete":{"desc":"Unmark the message which is marked deleted","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"imap_unsubscribe":{"desc":"Unsubscribe from a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"}],"returns":"bool"},"import_request_variables":{"desc":"Import GET/POST/Cookie variables into the global scope","params":[{"required":"yes","param":"string $types"},{"required":"no","param":"string $prefix = &#039;&#039;"}],"returns":"bool"},"ingres_autocommit":{"desc":"Switch autocommit on or off","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ingres_autocommit_state":{"desc":"Test if the connection is using autocommit","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ingres_close":{"desc":"Close an Ingres database connection","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ingres_commit":{"desc":"Commit a transaction","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ingres_execute":{"desc":"Execute a prepared query","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"array $params = &#039;&#039;"},{"required":"no","param":"string $types = &#039;&#039;"}],"returns":"bool"},"ingres_field_nullable":{"desc":"Test if a field is nullable","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"bool"},"ingres_free_result":{"desc":"Free the resources associated with a result identifier","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"ingres_next_error":{"desc":"Get the next Ingres error","params":[{"required":"no","param":"resource $link = &#039;&#039;"}],"returns":"bool"},"ingres_result_seek":{"desc":"Set the row position before fetching data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $position"}],"returns":"bool"},"ingres_rollback":{"desc":"Roll back a transaction","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ingres_set_environment":{"desc":"Set environment features controlling output options","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"array $options"}],"returns":"bool"},"inotify_rm_watch":{"desc":"Remove an existing watch from an inotify instance","params":[{"required":"yes","param":"resource $inotify_instance"},{"required":"yes","param":"int $watch_descriptor"}],"returns":"bool"},"interface_exists":{"desc":"Checks if the interface has been defined","params":[{"required":"yes","param":"string $interface_name"},{"required":"no","param":"bool $autoload = true"}],"returns":"bool"},"intl_is_failure":{"desc":"Check whether the given error code indicates failure","params":[{"required":"yes","param":"int $error_code"}],"returns":"bool"},"in_array":{"desc":"Checks if a value exists in an array","params":[{"required":"yes","param":"mixed $needle"},{"required":"yes","param":"array $haystack"},{"required":"no","param":"bool $strict = &#039;&#039;"}],"returns":"bool"},"isset":{"desc":"Determine if a variable is set and is not NULL","params":[{"required":"no","param":"mixed $var = &#039;&#039;"},{"required":"no","param":"$... = &#039;&#039;"}],"returns":"bool"},"is_a":{"desc":"Checks if the object is of this class or has this class as one of its parents","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"}],"returns":"bool"},"is_array":{"desc":"Finds whether a variable is an array","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_bool":{"desc":"Finds out whether a variable is a boolean","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_callable":{"desc":"Verify that the contents of a variable can be called as a function","params":[{"required":"yes","param":"callback $name"},{"required":"no","param":"bool $syntax_only = false"},{"required":"no","param":"string $callable_name = &#039;&#039;"}],"returns":"bool"},"is_dir":{"desc":"Tells whether the filename is a directory","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_executable":{"desc":"Tells whether the filename is executable","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_file":{"desc":"Tells whether the filename is a regular file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_finite":{"desc":"Finds whether a value is a legal finite number","params":[{"required":"yes","param":"float $val"}],"returns":"bool"},"is_float":{"desc":"Finds whether the type of a variable is float","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_infinite":{"desc":"Finds whether a value is infinite","params":[{"required":"yes","param":"float $val"}],"returns":"bool"},"is_int":{"desc":"Find whether the type of a variable is integer","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_link":{"desc":"Tells whether the filename is a symbolic link","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_nan":{"desc":"Finds whether a value is not a number","params":[{"required":"yes","param":"float $val"}],"returns":"bool"},"is_null":{"desc":"Finds whether a variable is NULL","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_numeric":{"desc":"Finds whether a variable is a number or a numeric string","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_object":{"desc":"Finds whether a variable is an object","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_readable":{"desc":"Tells whether a file exists and is readable","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_resource":{"desc":"Finds whether a variable is a resource","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_soap_fault":{"desc":"Checks if a SOAP call has failed","params":[{"required":"yes","param":"mixed $object"}],"returns":"bool"},"is_string":{"desc":"Find whether the type of a variable is string","params":[{"required":"yes","param":"mixed $var"}],"returns":"bool"},"is_subclass_of":{"desc":"Checks if the object has this class as one of its parents","params":[{"required":"yes","param":"mixed $object"},{"required":"yes","param":"string $class_name"}],"returns":"bool"},"is_uploaded_file":{"desc":"Tells whether the file was uploaded via HTTP POST","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"is_writable":{"desc":"Tells whether the filename is writable","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"jpeg2wbmp":{"desc":"Convert JPEG image file to WBMP image file","params":[{"required":"yes","param":"string $jpegname"},{"required":"yes","param":"string $wbmpname"},{"required":"yes","param":"int $dest_height"},{"required":"yes","param":"int $dest_width"},{"required":"yes","param":"int $threshold"}],"returns":"bool"},"kadm5_chpass_principal":{"desc":"Changes the principal&#039;s password","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $principal"},{"required":"yes","param":"string $password"}],"returns":"bool"},"kadm5_create_principal":{"desc":"Creates a kerberos principal with the given parameters","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $principal"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"bool"},"kadm5_delete_principal":{"desc":"Deletes a kerberos principal","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $principal"}],"returns":"bool"},"kadm5_destroy":{"desc":"Closes the connection to the admin server and releases all related resources","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"kadm5_flush":{"desc":"Flush all changes to the Kerberos database","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"kadm5_modify_principal":{"desc":"Modifies a kerberos principal with the given parameters","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $principal"},{"required":"yes","param":"array $options"}],"returns":"bool"},"krsort":{"desc":"Sort an array by key in reverse order","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"ksort":{"desc":"Sort an array by key","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"lchgrp":{"desc":"Changes group ownership of symlink","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $group"}],"returns":"bool"},"lchown":{"desc":"Changes user ownership of symlink","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $user"}],"returns":"bool"},"ldap_add":{"desc":"Add entries to LDAP directory","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"array $entry"}],"returns":"bool"},"ldap_bind":{"desc":"Bind to LDAP directory","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $bind_rdn = &#039;&#039;"},{"required":"no","param":"string $bind_password = &#039;&#039;"}],"returns":"bool"},"ldap_delete":{"desc":"Delete an entry from a directory","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"}],"returns":"bool"},"ldap_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result_identifier"}],"returns":"bool"},"ldap_get_option":{"desc":"Get the current value for given option","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $retval"}],"returns":"bool"},"ldap_modify":{"desc":"Modify an LDAP entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"array $entry"}],"returns":"bool"},"ldap_mod_add":{"desc":"Add attribute values to current attributes","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"array $entry"}],"returns":"bool"},"ldap_mod_del":{"desc":"Delete attribute values from current attributes","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"array $entry"}],"returns":"bool"},"ldap_mod_replace":{"desc":"Replace attribute values with new ones","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"array $entry"}],"returns":"bool"},"ldap_parse_reference":{"desc":"Extract information from reference entry","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"resource $entry"},{"required":"yes","param":"array $referrals"}],"returns":"bool"},"ldap_parse_result":{"desc":"Extract information from result","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $errcode"},{"required":"no","param":"string $matcheddn = &#039;&#039;"},{"required":"no","param":"string $errmsg = &#039;&#039;"},{"required":"no","param":"array $referrals = &#039;&#039;"}],"returns":"bool"},"ldap_rename":{"desc":"Modify the name of an entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"string $newrdn"},{"required":"yes","param":"string $newparent"},{"required":"yes","param":"bool $deleteoldrdn"}],"returns":"bool"},"ldap_sasl_bind":{"desc":"Bind to LDAP directory using SASL","params":[{"required":"yes","param":"resource $link"},{"required":"no","param":"string $binddn = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"string $sasl_mech = &#039;&#039;"},{"required":"no","param":"string $sasl_realm = &#039;&#039;"},{"required":"no","param":"string $sasl_authc_id = &#039;&#039;"},{"required":"no","param":"string $sasl_authz_id = &#039;&#039;"},{"required":"no","param":"string $props = &#039;&#039;"}],"returns":"bool"},"ldap_set_option":{"desc":"Set the value of the given option","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $newval"}],"returns":"bool"},"ldap_set_rebind_proc":{"desc":"Set a callback function to do re-binds on referral chasing","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"callback $callback"}],"returns":"bool"},"ldap_sort":{"desc":"Sort LDAP result entries","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"resource $result"},{"required":"yes","param":"string $sortfilter"}],"returns":"bool"},"ldap_start_tls":{"desc":"Start TLS","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"ldap_unbind":{"desc":"Unbind from LDAP directory","params":[{"required":"yes","param":"resource $link_identifier"}],"returns":"bool"},"libxml_disable_entity_loader":{"desc":"Disable the ability to load external entities","params":[{"required":"no","param":"bool $disable = true"}],"returns":"bool"},"libxml_use_internal_errors":{"desc":"Disable libxml errors and allow user to fetch error information as needed","params":[{"required":"no","param":"bool $use_errors = false"}],"returns":"bool"},"link":{"desc":"Create a hard link","params":[{"required":"yes","param":"string $target"},{"required":"yes","param":"string $link"}],"returns":"bool"},"locale_filter_matches":{"desc":"Checks if a language tag filter matches with locale","params":[{"required":"yes","param":"string $langtag"},{"required":"yes","param":"string $locale"},{"required":"no","param":"bool $canonicalize = false"}],"returns":"bool"},"locale_set_default":{"desc":"sets the default runtime locale","params":[{"required":"yes","param":"string $locale"}],"returns":"bool"},"mail":{"desc":"Send mail","params":[{"required":"yes","param":"string $to"},{"required":"yes","param":"string $subject"},{"required":"yes","param":"string $message"},{"required":"no","param":"string $additional_headers = &#039;&#039;"},{"required":"no","param":"string $additional_parameters = &#039;&#039;"}],"returns":"bool"},"mailparse_msg_free":{"desc":"Frees a MIME resource","params":[{"required":"yes","param":"resource $mimemail"}],"returns":"bool"},"mailparse_msg_parse":{"desc":"Incrementally parse data into buffer","params":[{"required":"yes","param":"resource $mimemail"},{"required":"yes","param":"string $data"}],"returns":"bool"},"mailparse_stream_encode":{"desc":"Streams data from source file pointer, apply encoding and write to destfp","params":[{"required":"yes","param":"resource $sourcefp"},{"required":"yes","param":"resource $destfp"},{"required":"yes","param":"string $encoding"}],"returns":"bool"},"maxdb_autocommit":{"desc":"Turns on or off auto-commiting database modifications","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"bool $mode"}],"returns":"bool"},"maxdb_change_user":{"desc":"Changes the user of the specified database connection","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"yes","param":"string $database"}],"returns":"bool"},"maxdb_close":{"desc":"Closes a previously opened database connection","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_commit":{"desc":"Commits the current transaction","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_data_seek":{"desc":"Adjusts the result pointer to an arbitary row in the result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $offset"}],"returns":"bool"},"maxdb_disable_rpl_parse":{"desc":"Disable RPL parse","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_dump_debug_info":{"desc":"Dump debugging information into the log","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_enable_reads_from_master":{"desc":"Enable reads from master","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_enable_rpl_parse":{"desc":"Enable RPL parse","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_field_seek":{"desc":"Set result pointer to a specified field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $fieldnr"}],"returns":"bool"},"maxdb_kill":{"desc":"Disconnects from a MaxDB server","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"int $processid"}],"returns":"bool"},"maxdb_master_query":{"desc":"Enforce execution of a query on the master in a master/slave setup","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"maxdb_more_results":{"desc":"Check if there any more query results from a multi query","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_multi_query":{"desc":"Performs a query on the database","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"maxdb_next_result":{"desc":"Prepare next result from multi_query","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_options":{"desc":"Set options","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"maxdb_ping":{"desc":"Pings a server connection, or tries to reconnect if the connection has gone down","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_real_connect":{"desc":"Opens a connection to a MaxDB server","params":[{"required":"yes","param":"resource $link"},{"required":"no","param":"string $hostname = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $passwd = &#039;&#039;"},{"required":"no","param":"string $dbname = &#039;&#039;"},{"required":"no","param":"int $port = &#039;&#039;"},{"required":"no","param":"string $socket = &#039;&#039;"}],"returns":"bool"},"maxdb_real_query":{"desc":"Execute an SQL query","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"maxdb_report":{"desc":"Enables or disables internal report functions","params":[{"required":"yes","param":"int $flags"}],"returns":"bool"},"maxdb_rollback":{"desc":"Rolls back current transaction","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_rpl_probe":{"desc":"RPL probe","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"maxdb_select_db":{"desc":"Selects the default database for database queries","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $dbname"}],"returns":"bool"},"maxdb_send_query":{"desc":"Send the query and return","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"maxdb_server_init":{"desc":"Initialize embedded server","params":[{"required":"no","param":"array $server = &#039;&#039;"},{"required":"no","param":"array $groups = &#039;&#039;"}],"returns":"bool"},"maxdb_ssl_set":{"desc":"Used for establishing secure connections using SSL","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $cert"},{"required":"yes","param":"string $ca"},{"required":"yes","param":"string $capath"},{"required":"yes","param":"string $cipher"}],"returns":"bool"},"maxdb_stmt_bind_param":{"desc":"Binds variables to a prepared statement as parameters","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"string $types"},{"required":"yes","param":"mixed $var1"},{"required":"no","param":"mixed $... = &#039;&#039;"},{"required":"yes","param":"array $var"}],"returns":"bool"},"maxdb_stmt_bind_result":{"desc":"Binds variables to a prepared statement for result storage","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $var1"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"bool"},"maxdb_stmt_close":{"desc":"Closes a prepared statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"maxdb_stmt_close_long_data":{"desc":"Ends a sequence of maxdb_stmt_send_long_data","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"int $param_nr"}],"returns":"bool"},"maxdb_stmt_data_seek":{"desc":"Seeks to an arbitray row in statement result set","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $offset"}],"returns":"bool"},"maxdb_stmt_execute":{"desc":"Executes a prepared Query","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"maxdb_stmt_fetch":{"desc":"Fetch results from a prepared statement into the bound variables","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"maxdb_stmt_reset":{"desc":"Resets a prepared statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"maxdb_stmt_send_long_data":{"desc":"Send data in blocks","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"int $param_nr"},{"required":"yes","param":"string $data"}],"returns":"bool"},"maxdb_thread_safe":{"desc":"Returns whether thread safety is given or not","params":[],"returns":"bool"},"mb_check_encoding":{"desc":"Check if the string is valid for the specified encoding","params":[{"required":"no","param":"string $var = &#039;&#039;"},{"required":"no","param":"string $encoding = mb_internal_encoding("}],"returns":"bool"},"mb_ereg_match":{"desc":"Regular expression match for multibyte string","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"string $option = &quot;msr&quot;"}],"returns":"bool"},"mb_ereg_search":{"desc":"Multibyte regular expression match for predefined multibyte string","params":[{"required":"no","param":"string $pattern = &#039;&#039;"},{"required":"no","param":"string $option = &quot;ms&quot;"}],"returns":"bool"},"mb_ereg_search_init":{"desc":"Setup string and regular expression for a multibyte regular expression match","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"string $pattern = &#039;&#039;"},{"required":"no","param":"string $option = &quot;msr&quot;"}],"returns":"bool"},"mb_ereg_search_setpos":{"desc":"Set start point of next regular expression match","params":[{"required":"yes","param":"int $position"}],"returns":"bool"},"mb_send_mail":{"desc":"Send encoded mail","params":[{"required":"yes","param":"string $to"},{"required":"yes","param":"string $subject"},{"required":"yes","param":"string $message"},{"required":"no","param":"string $additional_headers = &#039;&#039;"},{"required":"no","param":"string $additional_parameter = &#039;&#039;"}],"returns":"bool"},"mcrypt_enc_is_block_algorithm":{"desc":"Checks whether the algorithm of the opened mode is a block algorithm","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_enc_is_block_algorithm_mode":{"desc":"Checks whether the encryption of the opened mode works on blocks","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_enc_is_block_mode":{"desc":"Checks whether the opened mode outputs blocks","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_generic_deinit":{"desc":"This function deinitializes an encryption module","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_generic_end":{"desc":"This function terminates encryption","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_module_close":{"desc":"Closes the mcrypt module","params":[{"required":"yes","param":"resource $td"}],"returns":"bool"},"mcrypt_module_is_block_algorithm":{"desc":"This function checks whether the specified algorithm is a block algorithm","params":[{"required":"yes","param":"string $algorithm"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"bool"},"mcrypt_module_is_block_algorithm_mode":{"desc":"Returns if the specified module is a block algorithm or not","params":[{"required":"yes","param":"string $mode"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"bool"},"mcrypt_module_is_block_mode":{"desc":"Returns if the specified mode outputs blocks or not","params":[{"required":"yes","param":"string $mode"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"bool"},"mcrypt_module_self_test":{"desc":"This function runs a self test on the specified module","params":[{"required":"yes","param":"string $algorithm"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"bool"},"memcache_debug":{"desc":"Turn debug output on/off","params":[{"required":"yes","param":"bool $on_off"}],"returns":"bool"},"method_exists":{"desc":"Checks if the class method exists","params":[{"required":"yes","param":"mixed $object"},{"required":"yes","param":"string $method_name"}],"returns":"bool"},"mkdir":{"desc":"Makes directory","params":[{"required":"yes","param":"string $pathname"},{"required":"no","param":"int $mode = 0777"},{"required":"no","param":"bool $recursive = false"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"bool"},"move_uploaded_file":{"desc":"Moves an uploaded file to a new location","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $destination"}],"returns":"bool"},"msession_connect":{"desc":"Connect to msession server","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $port"}],"returns":"bool"},"msession_create":{"desc":"Create a session","params":[{"required":"yes","param":"string $session"},{"required":"no","param":"string $classname = &#039;&#039;"},{"required":"no","param":"string $data = &#039;&#039;"}],"returns":"bool"},"msession_destroy":{"desc":"Destroy a session","params":[{"required":"yes","param":"string $name"}],"returns":"bool"},"msession_set":{"desc":"Set value in session","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"bool"},"msession_set_data":{"desc":"Set data session unstructured data","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"string $value"}],"returns":"bool"},"msgfmt_set_pattern":{"desc":"Set the pattern used by the formatter","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"bool"},"msg_queue_exists":{"desc":"Check whether a message queue exists","params":[{"required":"yes","param":"int $key"}],"returns":"bool"},"msg_receive":{"desc":"Receive a message from a message queue","params":[{"required":"yes","param":"resource $queue"},{"required":"yes","param":"int $desiredmsgtype"},{"required":"yes","param":"int $msgtype"},{"required":"yes","param":"int $maxsize"},{"required":"yes","param":"mixed $message"},{"required":"no","param":"bool $unserialize = true"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"int $errorcode = &#039;&#039;"}],"returns":"bool"},"msg_remove_queue":{"desc":"Destroy a message queue","params":[{"required":"yes","param":"resource $queue"}],"returns":"bool"},"msg_send":{"desc":"Send a message to a message queue","params":[{"required":"yes","param":"resource $queue"},{"required":"yes","param":"int $msgtype"},{"required":"yes","param":"mixed $message"},{"required":"no","param":"bool $serialize = &#039;&#039;"},{"required":"no","param":"bool $blocking = &#039;&#039;"},{"required":"no","param":"int $errorcode = &#039;&#039;"}],"returns":"bool"},"msg_set_queue":{"desc":"Set information in the message queue data structure","params":[{"required":"yes","param":"resource $queue"},{"required":"yes","param":"array $data"}],"returns":"bool"},"msql_close":{"desc":"Close mSQL connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"msql_create_db":{"desc":"Create mSQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"msql_data_seek":{"desc":"Move internal row pointer","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row_number"}],"returns":"bool"},"msql_drop_db":{"desc":"Drop (delete) mSQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"msql_field_seek":{"desc":"Set field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"bool"},"msql_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"msql_select_db":{"desc":"Select mSQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mssql_bind":{"desc":"Adds a parameter to a stored procedure or a remote stored procedure","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"string $param_name"},{"required":"yes","param":"mixed $var"},{"required":"yes","param":"int $type"},{"required":"no","param":"bool $is_output = false"},{"required":"no","param":"bool $is_null = false"},{"required":"no","param":"int $maxlen = -1"}],"returns":"bool"},"mssql_close":{"desc":"Close MS SQL Server connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mssql_data_seek":{"desc":"Moves internal row pointer","params":[{"required":"yes","param":"resource $result_identifier"},{"required":"yes","param":"int $row_number"}],"returns":"bool"},"mssql_field_seek":{"desc":"Seeks to the specified field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"bool"},"mssql_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"mssql_free_statement":{"desc":"Free statement memory","params":[{"required":"yes","param":"resource $stmt"}],"returns":"bool"},"mssql_next_result":{"desc":"Move the internal result pointer to the next result","params":[{"required":"yes","param":"resource $result_id"}],"returns":"bool"},"mssql_select_db":{"desc":"Select MS SQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysqli_autocommit":{"desc":"Turns on or off auto-commiting database modifications","params":[{"required":"yes","param":"bool $mode"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_change_user":{"desc":"Changes the user of the specified database connection","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"yes","param":"string $database"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_close":{"desc":"Closes a previously opened database connection","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_commit":{"desc":"Commits the current transaction","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_data_seek":{"desc":"Adjusts the result pointer to an arbitary row in the result","params":[{"required":"yes","param":"int $offset"},{"required":"yes","param":"mysqli_result $result"}],"returns":"bool"},"mysqli_debug":{"desc":"Performs debugging operations","params":[{"required":"yes","param":"string $message"}],"returns":"bool"},"mysqli_disable_reads_from_master":{"desc":"Disable reads from master","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_disable_rpl_parse":{"desc":"Disable RPL parse","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_dump_debug_info":{"desc":"Dump debugging information into the log","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_embedded_server_start":{"desc":"Initialize and start embedded server","params":[{"required":"yes","param":"bool $start"},{"required":"yes","param":"array $arguments"},{"required":"yes","param":"array $groups"}],"returns":"bool"},"mysqli_enable_reads_from_master":{"desc":"Enable reads from master","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_enable_rpl_parse":{"desc":"Enable RPL parse","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_field_seek":{"desc":"Set result pointer to a specified field offset","params":[{"required":"yes","param":"int $fieldnr"},{"required":"yes","param":"mysqli_result $result"}],"returns":"bool"},"mysqli_kill":{"desc":"Asks the server to kill a MySQL thread","params":[{"required":"yes","param":"int $processid"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_master_query":{"desc":"Enforce execution of a query on the master in a master/slave setup","params":[{"required":"yes","param":"mysqli $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"mysqli_more_results":{"desc":"Check if there are any more query results from a multi query","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_multi_query":{"desc":"Performs a query on the database","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_next_result":{"desc":"Prepare next result from multi_query","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_options":{"desc":"Set options","params":[{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_ping":{"desc":"Pings a server connection, or tries to reconnect if the connection has gone down","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_real_connect":{"desc":"Opens a connection to a mysql server","params":[{"required":"no","param":"string $host = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $passwd = &#039;&#039;"},{"required":"no","param":"string $dbname = &#039;&#039;"},{"required":"no","param":"int $port = &#039;&#039;"},{"required":"no","param":"string $socket = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_real_query":{"desc":"Execute an SQL query","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_report":{"desc":"Enables or disables internal report functions","params":[{"required":"yes","param":"int $flags"}],"returns":"bool"},"mysqli_rollback":{"desc":"Rolls back current transaction","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_rpl_probe":{"desc":"RPL probe","params":[{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_select_db":{"desc":"Selects the default database for database queries","params":[{"required":"yes","param":"string $dbname"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_send_query":{"desc":"Send the query and return","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_set_charset":{"desc":"Sets the default client character set","params":[{"required":"yes","param":"string $charset"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_set_local_infile_handler":{"desc":"Set callback function for LOAD DATA LOCAL INFILE command","params":[{"required":"yes","param":"mysqli $link"},{"required":"yes","param":"callback $read_func"}],"returns":"bool"},"mysqli_slave_query":{"desc":"Force execution of a query on a slave in a master/slave setup","params":[{"required":"yes","param":"mysqli $link"},{"required":"yes","param":"string $query"}],"returns":"bool"},"mysqli_ssl_set":{"desc":"Used for establishing secure connections using SSL","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"string $cert"},{"required":"yes","param":"string $ca"},{"required":"yes","param":"string $capath"},{"required":"yes","param":"string $cipher"},{"required":"yes","param":"mysqli $link"}],"returns":"bool"},"mysqli_stmt_attr_set":{"desc":"Used to modify the behavior of a prepared statement","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"int $mode"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_bind_param":{"desc":"Binds variables to a prepared statement as parameters","params":[{"required":"yes","param":"string $types"},{"required":"yes","param":"mixed $var1"},{"required":"no","param":"mixed $... = &#039;&#039;"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_bind_result":{"desc":"Binds variables to a prepared statement for result storage","params":[{"required":"yes","param":"mixed $var1"},{"required":"no","param":"mixed $... = &#039;&#039;"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_close":{"desc":"Closes a prepared statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_execute":{"desc":"Executes a prepared Query","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_fetch":{"desc":"Fetch results from a prepared statement into the bound variables","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_get_result":{"desc":"Gets a result set from a prepared statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_prepare":{"desc":"Prepare an SQL statement for execution","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_reset":{"desc":"Resets a prepared statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_send_long_data":{"desc":"Send data in blocks","params":[{"required":"yes","param":"int $param_nr"},{"required":"yes","param":"string $data"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_stmt_store_result":{"desc":"Transfers a result set from a prepared statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"bool"},"mysqli_thread_safe":{"desc":"Returns whether thread safety is given or not","params":[],"returns":"bool"},"mysqlnd_ms_set_user_pick_server":{"desc":"Sets a callback for user-defined read/write splitting","params":[{"required":"yes","param":"string $function"}],"returns":"bool"},"mysqlnd_qc_change_handler":{"desc":"Change current storage handler","params":[{"required":"yes","param":"mixed $handler"}],"returns":"bool"},"mysqlnd_qc_clear_cache":{"desc":"Flush all cache contents","params":[],"returns":"bool"},"mysqlnd_qc_set_user_handlers":{"desc":"Sets the callback functions for a user-defined procedural storage handler","params":[{"required":"yes","param":"string $get_hash"},{"required":"yes","param":"string $find_query_in_cache"},{"required":"yes","param":"string $return_to_cache"},{"required":"yes","param":"string $add_query_to_cache_if_not_exists"},{"required":"yes","param":"string $query_is_select"},{"required":"yes","param":"string $update_query_run_time_stats"},{"required":"yes","param":"string $get_stats"},{"required":"yes","param":"string $clear_cache"}],"returns":"bool"},"mysql_close":{"desc":"Close MySQL connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysql_create_db":{"desc":"Create a MySQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysql_data_seek":{"desc":"Move internal result pointer","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row_number"}],"returns":"bool"},"mysql_drop_db":{"desc":"Drop (delete) a MySQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysql_field_seek":{"desc":"Set result pointer to a specified field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"bool"},"mysql_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"mysql_ping":{"desc":"Ping a server connection or reconnect if there is no connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysql_select_db":{"desc":"Select a MySQL database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"mysql_set_charset":{"desc":"Sets the client character set","params":[{"required":"yes","param":"string $charset"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"m_deletetrans":{"desc":"Delete specified transaction from MCVE_CONN structure","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"bool"},"m_destroyconn":{"desc":"Destroy the connection and MCVE_CONN structure","params":[{"required":"yes","param":"resource $conn"}],"returns":"bool"},"m_maxconntimeout":{"desc":"The maximum amount of time the API will attempt a connection to MCVE","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $secs"}],"returns":"bool"},"m_verifyconnection":{"desc":"Set whether or not to PING upon connect to verify connection","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $tf"}],"returns":"bool"},"m_verifysslcert":{"desc":"Set whether or not to verify the server ssl certificate","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $tf"}],"returns":"bool"},"natcasesort":{"desc":"Sort an array using a case insensitive &quot;natural order&quot; algorithm","params":[{"required":"yes","param":"array $array"}],"returns":"bool"},"natsort":{"desc":"Sort an array using a &quot;natural order&quot; algorithm","params":[{"required":"yes","param":"array $array"}],"returns":"bool"},"ncurses_can_change_color":{"desc":"Checks if terminal color definitions can be changed","params":[],"returns":"bool"},"ncurses_cbreak":{"desc":"Switch of input buffering","params":[],"returns":"bool"},"ncurses_clear":{"desc":"Clear screen","params":[],"returns":"bool"},"ncurses_clrtobot":{"desc":"Clear screen from current position to bottom","params":[],"returns":"bool"},"ncurses_clrtoeol":{"desc":"Clear screen from current position to end of line","params":[],"returns":"bool"},"ncurses_def_prog_mode":{"desc":"Saves terminals (program) mode","params":[],"returns":"bool"},"ncurses_def_shell_mode":{"desc":"Saves terminals (shell) mode","params":[],"returns":"bool"},"ncurses_delch":{"desc":"Delete character at current position, move rest of line left","params":[],"returns":"bool"},"ncurses_deleteln":{"desc":"Delete line at current position, move rest of screen up","params":[],"returns":"bool"},"ncurses_delwin":{"desc":"Delete a ncurses window","params":[{"required":"yes","param":"resource $window"}],"returns":"bool"},"ncurses_del_panel":{"desc":"Remove panel from the stack and delete it (but not the associated window)","params":[{"required":"yes","param":"resource $panel"}],"returns":"bool"},"ncurses_doupdate":{"desc":"Write all prepared refreshes to terminal","params":[],"returns":"bool"},"ncurses_echo":{"desc":"Activate keyboard input echo","params":[],"returns":"bool"},"ncurses_erase":{"desc":"Erase terminal screen","params":[],"returns":"bool"},"ncurses_flash":{"desc":"Flash terminal screen (visual bell)","params":[],"returns":"bool"},"ncurses_flushinp":{"desc":"Flush keyboard input buffer","params":[],"returns":"bool"},"ncurses_getmouse":{"desc":"Reads mouse event","params":[{"required":"yes","param":"array $mevent"}],"returns":"bool"},"ncurses_has_colors":{"desc":"Checks if terminal has color capabilities","params":[],"returns":"bool"},"ncurses_has_ic":{"desc":"Check for insert- and delete-capabilities","params":[],"returns":"bool"},"ncurses_has_il":{"desc":"Check for line insert- and delete-capabilities","params":[],"returns":"bool"},"ncurses_isendwin":{"desc":"Ncurses is in endwin mode, normal screen output may be performed","params":[],"returns":"bool"},"ncurses_mouse_trafo":{"desc":"Transforms coordinates","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"bool $toscreen"}],"returns":"bool"},"ncurses_nl":{"desc":"Translate newline and carriage return / line feed","params":[],"returns":"bool"},"ncurses_nocbreak":{"desc":"Switch terminal to cooked mode","params":[],"returns":"bool"},"ncurses_noecho":{"desc":"Switch off keyboard input echo","params":[],"returns":"bool"},"ncurses_nonl":{"desc":"Do not translate newline and carriage return / line feed","params":[],"returns":"bool"},"ncurses_noraw":{"desc":"Switch terminal out of raw mode","params":[],"returns":"bool"},"ncurses_raw":{"desc":"Switch terminal into raw mode","params":[],"returns":"bool"},"ncurses_resetty":{"desc":"Restores saved terminal state","params":[],"returns":"bool"},"ncurses_savetty":{"desc":"Saves terminal state","params":[],"returns":"bool"},"ncurses_slk_clear":{"desc":"Clears soft labels from screen","params":[],"returns":"bool"},"ncurses_slk_init":{"desc":"Initializes soft label key functions","params":[{"required":"yes","param":"int $format"}],"returns":"bool"},"ncurses_slk_noutrefresh":{"desc":"Copies soft label keys to virtual screen","params":[],"returns":"bool"},"ncurses_slk_set":{"desc":"Sets function key labels","params":[{"required":"yes","param":"int $labelnr"},{"required":"yes","param":"string $label"},{"required":"yes","param":"int $format"}],"returns":"bool"},"ncurses_termattrs":{"desc":"Returns a logical OR of all attribute flags supported by terminal","params":[],"returns":"bool"},"ncurses_ungetmouse":{"desc":"Pushes mouse event to queue","params":[{"required":"yes","param":"array $mevent"}],"returns":"bool"},"ncurses_use_default_colors":{"desc":"Assign terminal default colors to color id -1","params":[],"returns":"bool"},"ncurses_wmouse_trafo":{"desc":"Transforms window/stdscr coordinates","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"bool $toscreen"}],"returns":"bool"},"normalizer_is_normalized":{"desc":"Checks if the provided string is already in the specified normalization   form.","params":[{"required":"yes","param":"string $input"},{"required":"no","param":"string $form = Normalizer::FORM_C"}],"returns":"bool"},"notes_copy_db":{"desc":"Copy a Lotus Notes database","params":[{"required":"yes","param":"string $from_database_name"},{"required":"yes","param":"string $to_database_name"}],"returns":"bool"},"notes_create_db":{"desc":"Create a Lotus Notes database","params":[{"required":"yes","param":"string $database_name"}],"returns":"bool"},"notes_create_note":{"desc":"Create a note using form form_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $form_name"}],"returns":"bool"},"notes_drop_db":{"desc":"Drop a Lotus Notes database","params":[{"required":"yes","param":"string $database_name"}],"returns":"bool"},"notes_list_msgs":{"desc":"Returns the notes from a selected database_name","params":[{"required":"yes","param":"string $db"}],"returns":"bool"},"notes_mark_read":{"desc":"Mark a note_id as read for the User user_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $user_name"},{"required":"yes","param":"string $note_id"}],"returns":"bool"},"notes_mark_unread":{"desc":"Mark a note_id as unread for the User user_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $user_name"},{"required":"yes","param":"string $note_id"}],"returns":"bool"},"notes_nav_create":{"desc":"Create a navigator name, in database_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $name"}],"returns":"bool"},"nsapi_virtual":{"desc":"Perform an NSAPI sub-request","params":[{"required":"yes","param":"string $uri"}],"returns":"bool"},"numfmt_set_attribute":{"desc":"Set an attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"int $value"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"bool"},"numfmt_set_pattern":{"desc":"Set formatter pattern","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"bool"},"numfmt_set_symbol":{"desc":"Set a symbol value","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"string $value"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"bool"},"numfmt_set_text_attribute":{"desc":"Set a text attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"string $value"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"bool"},"ob_end_clean":{"desc":"Clean (erase) the output buffer and turn off output buffering","params":[],"returns":"bool"},"ob_end_flush":{"desc":"Flush (send) the output buffer and turn off output buffering","params":[],"returns":"bool"},"ob_start":{"desc":"Turn on output buffering","params":[{"required":"no","param":"callback $output_callback = &#039;&#039;"},{"required":"no","param":"int $chunk_size = &#039;&#039;"},{"required":"no","param":"bool $erase = &#039;&#039;"}],"returns":"bool"},"oci_bind_array_by_name":{"desc":"Binds a PHP array to an Oracle PL/SQL array parameter","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"string $name"},{"required":"yes","param":"array $var_array"},{"required":"yes","param":"int $max_table_length"},{"required":"no","param":"int $max_item_length = -1"},{"required":"no","param":"int $type = SQLT_AFC"}],"returns":"bool"},"oci_bind_by_name":{"desc":"Binds a PHP variable to an Oracle placeholder","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"string $bv_name"},{"required":"yes","param":"mixed $variable"},{"required":"no","param":"int $maxlength = -1"},{"required":"no","param":"int $type = SQLT_CHR"}],"returns":"bool"},"oci_cancel":{"desc":"Cancels reading from cursor","params":[{"required":"yes","param":"resource $statement"}],"returns":"bool"},"oci_close":{"desc":"Closes an Oracle connection","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"oci_commit":{"desc":"Commits the outstanding database transaction","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"oci_define_by_name":{"desc":"Associates a PHP variable with a column for query fetches","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"string $column_name"},{"required":"yes","param":"mixed $variable"},{"required":"no","param":"int $type = SQLT_CHR"}],"returns":"bool"},"oci_execute":{"desc":"Executes a statement","params":[{"required":"yes","param":"resource $statement"},{"required":"no","param":"int $mode = OCI_COMMIT_ON_SUCCESS"}],"returns":"bool"},"oci_fetch":{"desc":"Fetches the next row from a query into internal buffers","params":[{"required":"yes","param":"resource $statement"}],"returns":"bool"},"oci_field_is_null":{"desc":"Checks if the field is NULL","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"mixed $field"}],"returns":"bool"},"oci_free_statement":{"desc":"Frees all resources associated with statement or cursor","params":[{"required":"yes","param":"resource $statement"}],"returns":"bool"},"oci_lob_copy":{"desc":"Copies large object","params":[{"required":"yes","param":"OCI-Lob $lob_to"},{"required":"yes","param":"OCI-Lob $lob_from"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"bool"},"oci_lob_is_equal":{"desc":"Compares two LOB/FILE locators for equality","params":[{"required":"yes","param":"OCI-Lob $lob1"},{"required":"yes","param":"OCI-Lob $lob2"}],"returns":"bool"},"oci_rollback":{"desc":"Rolls back the outstanding database transaction","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"oci_set_action":{"desc":"Sets the action name","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $action_name"}],"returns":"bool"},"oci_set_client_identifier":{"desc":"Sets the client identifier","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $client_identifier"}],"returns":"bool"},"oci_set_client_info":{"desc":"Sets the client information","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $client_info"}],"returns":"bool"},"oci_set_edition":{"desc":"Sets the database edition","params":[{"required":"yes","param":"string $edition"}],"returns":"bool"},"oci_set_module_name":{"desc":"Sets the module name","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $module_name"}],"returns":"bool"},"oci_set_prefetch":{"desc":"Sets number of rows to be prefetched by queries","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $rows"}],"returns":"bool"},"odbc_binmode":{"desc":"Handling of binary column data","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"odbc_commit":{"desc":"Commit an ODBC transaction","params":[{"required":"yes","param":"resource $connection_id"}],"returns":"bool"},"odbc_execute":{"desc":"Execute a prepared statement","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"array $parameters_array = &#039;&#039;"}],"returns":"bool"},"odbc_fetch_row":{"desc":"Fetch a row","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"int $row_number = &#039;&#039;"}],"returns":"bool"},"odbc_free_result":{"desc":"Free resources associated with a result","params":[{"required":"yes","param":"resource $result_id"}],"returns":"bool"},"odbc_longreadlen":{"desc":"Handling of LONG columns","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $length"}],"returns":"bool"},"odbc_next_result":{"desc":"Checks if multiple results are available","params":[{"required":"yes","param":"resource $result_id"}],"returns":"bool"},"odbc_rollback":{"desc":"Rollback a transaction","params":[{"required":"yes","param":"resource $connection_id"}],"returns":"bool"},"odbc_setoption":{"desc":"Adjust ODBC settings","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"int $function"},{"required":"yes","param":"int $option"},{"required":"yes","param":"int $param"}],"returns":"bool"},"openal_buffer_data":{"desc":"Load a buffer with data","params":[{"required":"yes","param":"resource $buffer"},{"required":"yes","param":"int $format"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $freq"}],"returns":"bool"},"openal_buffer_destroy":{"desc":"Destroys an OpenAL buffer","params":[{"required":"yes","param":"resource $buffer"}],"returns":"bool"},"openal_buffer_loadwav":{"desc":"Load a .wav file into a buffer","params":[{"required":"yes","param":"resource $buffer"},{"required":"yes","param":"string $wavfile"}],"returns":"bool"},"openal_context_current":{"desc":"Make the specified context current","params":[{"required":"yes","param":"resource $context"}],"returns":"bool"},"openal_context_destroy":{"desc":"Destroys a context","params":[{"required":"yes","param":"resource $context"}],"returns":"bool"},"openal_context_process":{"desc":"Process the specified context","params":[{"required":"yes","param":"resource $context"}],"returns":"bool"},"openal_context_suspend":{"desc":"Suspend the specified context","params":[{"required":"yes","param":"resource $context"}],"returns":"bool"},"openal_device_close":{"desc":"Close an OpenAL device","params":[{"required":"yes","param":"resource $device"}],"returns":"bool"},"openal_listener_set":{"desc":"Set a listener property","params":[{"required":"yes","param":"int $property"},{"required":"yes","param":"mixed $setting"}],"returns":"bool"},"openal_source_destroy":{"desc":"Destroy a source resource","params":[{"required":"yes","param":"resource $source"}],"returns":"bool"},"openal_source_pause":{"desc":"Pause the source","params":[{"required":"yes","param":"resource $source"}],"returns":"bool"},"openal_source_play":{"desc":"Start playing the source","params":[{"required":"yes","param":"resource $source"}],"returns":"bool"},"openal_source_rewind":{"desc":"Rewind the source","params":[{"required":"yes","param":"resource $source"}],"returns":"bool"},"openal_source_set":{"desc":"Set source property","params":[{"required":"yes","param":"resource $source"},{"required":"yes","param":"int $property"},{"required":"yes","param":"mixed $setting"}],"returns":"bool"},"openal_source_stop":{"desc":"Stop playing the source","params":[{"required":"yes","param":"resource $source"}],"returns":"bool"},"openlog":{"desc":"Open connection to system logger","params":[{"required":"yes","param":"string $ident"},{"required":"yes","param":"int $option"},{"required":"yes","param":"int $facility"}],"returns":"bool"},"openssl_csr_export":{"desc":"Exports a CSR as a string","params":[{"required":"yes","param":"resource $csr"},{"required":"yes","param":"string $out"},{"required":"no","param":"bool $notext = true"}],"returns":"bool"},"openssl_csr_export_to_file":{"desc":"Exports a CSR to a file","params":[{"required":"yes","param":"resource $csr"},{"required":"yes","param":"string $outfilename"},{"required":"no","param":"bool $notext = true"}],"returns":"bool"},"openssl_open":{"desc":"Open sealed data","params":[{"required":"yes","param":"string $sealed_data"},{"required":"yes","param":"string $open_data"},{"required":"yes","param":"string $env_key"},{"required":"yes","param":"mixed $priv_key_id"},{"required":"no","param":"string $method = &#039;&#039;"}],"returns":"bool"},"openssl_pkcs7_decrypt":{"desc":"Decrypts an S/MIME encrypted message","params":[{"required":"yes","param":"string $infilename"},{"required":"yes","param":"string $outfilename"},{"required":"yes","param":"mixed $recipcert"},{"required":"no","param":"mixed $recipkey = &#039;&#039;"}],"returns":"bool"},"openssl_pkcs7_encrypt":{"desc":"Encrypt an S/MIME message","params":[{"required":"yes","param":"string $infile"},{"required":"yes","param":"string $outfile"},{"required":"yes","param":"mixed $recipcerts"},{"required":"yes","param":"array $headers"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"int $cipherid = OPENSSL_CIPHER_RC2_40"}],"returns":"bool"},"openssl_pkcs7_sign":{"desc":"Sign an S/MIME message","params":[{"required":"yes","param":"string $infilename"},{"required":"yes","param":"string $outfilename"},{"required":"yes","param":"mixed $signcert"},{"required":"yes","param":"mixed $privkey"},{"required":"yes","param":"array $headers"},{"required":"no","param":"int $flags = PKCS7_DETACHED"},{"required":"no","param":"string $extracerts = &#039;&#039;"}],"returns":"bool"},"openssl_pkcs12_export":{"desc":"Exports a PKCS#12 Compatible Certificate Store File to variable.","params":[{"required":"yes","param":"mixed $x509"},{"required":"yes","param":"string $out"},{"required":"yes","param":"mixed $priv_key"},{"required":"yes","param":"string $pass"},{"required":"no","param":"array $args = &#039;&#039;"}],"returns":"bool"},"openssl_pkcs12_export_to_file":{"desc":"Exports a PKCS#12 Compatible Certificate Store File","params":[{"required":"yes","param":"mixed $x509"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $priv_key"},{"required":"yes","param":"string $pass"},{"required":"no","param":"array $args = &#039;&#039;"}],"returns":"bool"},"openssl_pkcs12_read":{"desc":"Parse a PKCS#12 Certificate Store into an array","params":[{"required":"yes","param":"string $pkcs12"},{"required":"yes","param":"array $certs"},{"required":"yes","param":"string $pass"}],"returns":"bool"},"openssl_pkey_export":{"desc":"Gets an exportable representation of a key into a string","params":[{"required":"yes","param":"mixed $key"},{"required":"yes","param":"string $out"},{"required":"no","param":"string $passphrase = &#039;&#039;"},{"required":"no","param":"array $configargs = &#039;&#039;"}],"returns":"bool"},"openssl_pkey_export_to_file":{"desc":"Gets an exportable representation of a key into a file","params":[{"required":"yes","param":"mixed $key"},{"required":"yes","param":"string $outfilename"},{"required":"no","param":"string $passphrase = &#039;&#039;"},{"required":"no","param":"array $configargs = &#039;&#039;"}],"returns":"bool"},"openssl_private_decrypt":{"desc":"Decrypts data with private key","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $decrypted"},{"required":"yes","param":"mixed $key"},{"required":"no","param":"int $padding = OPENSSL_PKCS1_PADDING"}],"returns":"bool"},"openssl_private_encrypt":{"desc":"Encrypts data with private key","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $crypted"},{"required":"yes","param":"mixed $key"},{"required":"no","param":"int $padding = OPENSSL_PKCS1_PADDING"}],"returns":"bool"},"openssl_public_decrypt":{"desc":"Decrypts data with public key","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $decrypted"},{"required":"yes","param":"mixed $key"},{"required":"no","param":"int $padding = OPENSSL_PKCS1_PADDING"}],"returns":"bool"},"openssl_public_encrypt":{"desc":"Encrypts data with public key","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $crypted"},{"required":"yes","param":"mixed $key"},{"required":"no","param":"int $padding = OPENSSL_PKCS1_PADDING"}],"returns":"bool"},"openssl_sign":{"desc":"Generate signature","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $signature"},{"required":"yes","param":"mixed $priv_key_id"},{"required":"no","param":"int $signature_alg = OPENSSL_ALGO_SHA1"}],"returns":"bool"},"openssl_x509_check_private_key":{"desc":"Checks if a private key corresponds to a certificate","params":[{"required":"yes","param":"mixed $cert"},{"required":"yes","param":"mixed $key"}],"returns":"bool"},"openssl_x509_export":{"desc":"Exports a certificate as a string","params":[{"required":"yes","param":"mixed $x509"},{"required":"yes","param":"string $output"},{"required":"no","param":"bool $notext = &#039;&#039;"}],"returns":"bool"},"openssl_x509_export_to_file":{"desc":"Exports a certificate to file","params":[{"required":"yes","param":"mixed $x509"},{"required":"yes","param":"string $outfilename"},{"required":"no","param":"bool $notext = &#039;&#039;"}],"returns":"bool"},"output_add_rewrite_var":{"desc":"Add URL rewriter values","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"bool"},"output_reset_rewrite_vars":{"desc":"Reset URL rewriter values","params":[],"returns":"bool"},"override_function":{"desc":"Overrides built-in functions","params":[{"required":"yes","param":"string $function_name"},{"required":"yes","param":"string $function_args"},{"required":"yes","param":"string $function_code"}],"returns":"bool"},"ovrimos_commit":{"desc":"Commits the transaction","params":[{"required":"yes","param":"int $connection_id"}],"returns":"bool"},"ovrimos_execute":{"desc":"Executes a prepared SQL statement","params":[{"required":"yes","param":"int $result_id"},{"required":"no","param":"array $parameters_array = &#039;&#039;"}],"returns":"bool"},"ovrimos_fetch_into":{"desc":"Fetches a row from the result set","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"array $result_array"},{"required":"no","param":"string $how = &#039;&#039;"},{"required":"no","param":"int $rownumber = &#039;&#039;"}],"returns":"bool"},"ovrimos_fetch_row":{"desc":"Fetches a row from the result set","params":[{"required":"yes","param":"int $result_id"},{"required":"no","param":"int $how = &#039;&#039;"},{"required":"no","param":"int $row_number = &#039;&#039;"}],"returns":"bool"},"ovrimos_free_result":{"desc":"Frees the specified result_id","params":[{"required":"yes","param":"int $result_id"}],"returns":"bool"},"ovrimos_longreadlen":{"desc":"Specifies how many bytes are to be retrieved from long datatypes","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"int $length"}],"returns":"bool"},"ovrimos_rollback":{"desc":"Rolls back the transaction","params":[{"required":"yes","param":"int $connection_id"}],"returns":"bool"},"pcntl_setpriority":{"desc":"Change the priority of any process","params":[{"required":"yes","param":"int $priority"},{"required":"no","param":"int $pid = getmypid()"},{"required":"no","param":"int $process_identifier = PRIO_PROCESS"}],"returns":"bool"},"pcntl_signal":{"desc":"Installs a signal handler","params":[{"required":"yes","param":"int $signo"},{"required":"yes","param":"callback $handler"},{"required":"no","param":"bool $restart_syscalls = true"}],"returns":"bool"},"pcntl_signal_dispatch":{"desc":"Calls signal handlers for pending signals","params":[],"returns":"bool"},"pcntl_sigprocmask":{"desc":"Sets and retrieves blocked signals","params":[{"required":"yes","param":"int $how"},{"required":"yes","param":"array $set"},{"required":"no","param":"array $oldset = &#039;&#039;"}],"returns":"bool"},"pcntl_wifexited":{"desc":"Checks if status code represents a normal exit","params":[{"required":"yes","param":"int $status"}],"returns":"bool"},"pcntl_wifsignaled":{"desc":"Checks whether the status code represents a termination due to a signal","params":[{"required":"yes","param":"int $status"}],"returns":"bool"},"pcntl_wifstopped":{"desc":"Checks whether the child process is currently stopped","params":[{"required":"yes","param":"int $status"}],"returns":"bool"},"PDF_activate_item":{"desc":"Activate structure element or other content item","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $id"}],"returns":"bool"},"PDF_add_launchlink":{"desc":"Add launch annotation for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"PDF_add_locallink":{"desc":"Add link annotation for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $lowerleftx"},{"required":"yes","param":"float $lowerlefty"},{"required":"yes","param":"float $upperrightx"},{"required":"yes","param":"float $upperrighty"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"PDF_add_nameddest":{"desc":"Create named destination","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_add_note":{"desc":"Set annotation for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $contents"},{"required":"yes","param":"string $title"},{"required":"yes","param":"string $icon"},{"required":"yes","param":"int $open"}],"returns":"bool"},"PDF_add_pdflink":{"desc":"Add file link annotation for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $bottom_left_x"},{"required":"yes","param":"float $bottom_left_y"},{"required":"yes","param":"float $up_right_x"},{"required":"yes","param":"float $up_right_y"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"PDF_add_thumbnail":{"desc":"Add thumbnail for current page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $image"}],"returns":"bool"},"PDF_add_weblink":{"desc":"Add weblink for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $lowerleftx"},{"required":"yes","param":"float $lowerlefty"},{"required":"yes","param":"float $upperrightx"},{"required":"yes","param":"float $upperrighty"},{"required":"yes","param":"string $url"}],"returns":"bool"},"PDF_arc":{"desc":"Draw a counterclockwise circular arc segment","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $r"},{"required":"yes","param":"float $alpha"},{"required":"yes","param":"float $beta"}],"returns":"bool"},"PDF_arcn":{"desc":"Draw a clockwise circular arc segment","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $r"},{"required":"yes","param":"float $alpha"},{"required":"yes","param":"float $beta"}],"returns":"bool"},"PDF_attach_file":{"desc":"Add file attachment for current page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $description"},{"required":"yes","param":"string $author"},{"required":"yes","param":"string $mimetype"},{"required":"yes","param":"string $icon"}],"returns":"bool"},"PDF_begin_font":{"desc":"Start a Type 3 font definition","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $c"},{"required":"yes","param":"float $d"},{"required":"yes","param":"float $e"},{"required":"yes","param":"float $f"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_begin_glyph":{"desc":"Start glyph definition for Type 3 font","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $glyphname"},{"required":"yes","param":"float $wx"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"}],"returns":"bool"},"PDF_begin_layer":{"desc":"Start layer","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $layer"}],"returns":"bool"},"PDF_begin_page":{"desc":"Start new page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"bool"},"PDF_begin_page_ext":{"desc":"Start new page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_circle":{"desc":"Draw a circle","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $r"}],"returns":"bool"},"PDF_clip":{"desc":"Clip to current path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_close":{"desc":"Close pdf resource [deprecated]","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_closepath":{"desc":"Close current path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_closepath_fill_stroke":{"desc":"Close, fill and stroke current path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_closepath_stroke":{"desc":"Close and stroke path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_close_image":{"desc":"Close image","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $image"}],"returns":"bool"},"PDF_close_pdi":{"desc":"Close the input PDF document [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $doc"}],"returns":"bool"},"PDF_close_pdi_page":{"desc":"Close the page handle","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $page"}],"returns":"bool"},"PDF_concat":{"desc":"Concatenate a matrix to the CTM","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $c"},{"required":"yes","param":"float $d"},{"required":"yes","param":"float $e"},{"required":"yes","param":"float $f"}],"returns":"bool"},"PDF_continue_text":{"desc":"Output text in next line","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $text"}],"returns":"bool"},"PDF_create_annotation":{"desc":"Create rectangular annotation","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_create_field":{"desc":"Create form field","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_create_fieldgroup":{"desc":"Create form field group","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_create_pvf":{"desc":"Create PDFlib virtual file","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $data"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_curveto":{"desc":"Draw Bezier curve","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $x3"},{"required":"yes","param":"float $y3"}],"returns":"bool"},"PDF_delete":{"desc":"Delete PDFlib object","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"bool"},"PDF_delete_table":{"desc":"Delete table object","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $table"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_delete_textflow":{"desc":"Delete textflow object","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $textflow"}],"returns":"bool"},"PDF_encoding_set_char":{"desc":"Add glyph name and/or Unicode value","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $encoding"},{"required":"yes","param":"int $slot"},{"required":"yes","param":"string $glyphname"},{"required":"yes","param":"int $uv"}],"returns":"bool"},"PDF_endpath":{"desc":"End current path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_end_document":{"desc":"Close PDF file","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_end_font":{"desc":"Terminate Type 3 font definition","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"bool"},"PDF_end_glyph":{"desc":"Terminate glyph definition for Type 3 font","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"bool"},"PDF_end_item":{"desc":"Close structure element or other content item","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $id"}],"returns":"bool"},"PDF_end_layer":{"desc":"Deactivate all active layers","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"bool"},"PDF_end_page":{"desc":"Finish page","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_end_page_ext":{"desc":"Finish page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_end_pattern":{"desc":"Finish pattern","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_end_template":{"desc":"Finish template","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_fill":{"desc":"Fill current path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_fill_stroke":{"desc":"Fill and stroke path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_fit_image":{"desc":"Place image or template","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $image"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_fit_pdi_page":{"desc":"Place imported PDF page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_fit_textline":{"desc":"Place single line of text","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_initgraphics":{"desc":"Reset graphic state","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_lineto":{"desc":"Draw a line","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"PDF_moveto":{"desc":"Set current point","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"PDF_open_file":{"desc":"Create PDF file [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"PDF_place_image":{"desc":"Place image on the page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $image"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $scale"}],"returns":"bool"},"PDF_place_pdi_page":{"desc":"Place PDF page [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $sx"},{"required":"yes","param":"float $sy"}],"returns":"bool"},"PDF_rect":{"desc":"Draw rectangle","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"bool"},"PDF_restore":{"desc":"Restore graphics state","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_resume_page":{"desc":"Resume page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_rotate":{"desc":"Rotate coordinate system","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $phi"}],"returns":"bool"},"PDF_save":{"desc":"Save graphics state","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_scale":{"desc":"Scale coordinate system","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $sx"},{"required":"yes","param":"float $sy"}],"returns":"bool"},"PDF_setcolor":{"desc":"Set fill and stroke color","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $fstype"},{"required":"yes","param":"string $colorspace"},{"required":"yes","param":"float $c1"},{"required":"yes","param":"float $c2"},{"required":"yes","param":"float $c3"},{"required":"yes","param":"float $c4"}],"returns":"bool"},"PDF_setdash":{"desc":"Set simple dash pattern","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $w"}],"returns":"bool"},"PDF_setdashpattern":{"desc":"Set dash pattern","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_setflat":{"desc":"Set flatness","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $flatness"}],"returns":"bool"},"PDF_setfont":{"desc":"Set font","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $font"},{"required":"yes","param":"float $fontsize"}],"returns":"bool"},"PDF_setgray":{"desc":"Set color to gray [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $g"}],"returns":"bool"},"PDF_setgray_fill":{"desc":"Set fill color to gray [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $g"}],"returns":"bool"},"PDF_setgray_stroke":{"desc":"Set stroke color to gray [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $g"}],"returns":"bool"},"PDF_setlinecap":{"desc":"Set linecap parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $linecap"}],"returns":"bool"},"PDF_setlinejoin":{"desc":"Set linejoin parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $value"}],"returns":"bool"},"PDF_setlinewidth":{"desc":"Set line width","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $width"}],"returns":"bool"},"PDF_setmatrix":{"desc":"Set current transformation matrix","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $c"},{"required":"yes","param":"float $d"},{"required":"yes","param":"float $e"},{"required":"yes","param":"float $f"}],"returns":"bool"},"PDF_setmiterlimit":{"desc":"Set miter limit","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $miter"}],"returns":"bool"},"PDF_setrgbcolor":{"desc":"Set fill and stroke rgb color values [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"bool"},"PDF_setrgbcolor_fill":{"desc":"Set fill rgb color values [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"bool"},"PDF_setrgbcolor_stroke":{"desc":"Set stroke rgb color values [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"bool"},"PDF_set_border_color":{"desc":"Set border color of annotations [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"bool"},"PDF_set_border_dash":{"desc":"Set border dash style of annotations [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $black"},{"required":"yes","param":"float $white"}],"returns":"bool"},"PDF_set_border_style":{"desc":"Set border style of annotations [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $style"},{"required":"yes","param":"float $width"}],"returns":"bool"},"PDF_set_gstate":{"desc":"Activate graphics state object","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $gstate"}],"returns":"bool"},"PDF_set_info":{"desc":"Fill document info field","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"}],"returns":"bool"},"PDF_set_layer_dependency":{"desc":"Define relationships among layers","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_set_parameter":{"desc":"Set string parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"}],"returns":"bool"},"PDF_set_text_pos":{"desc":"Set text position","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"PDF_set_value":{"desc":"Set numerical parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"float $value"}],"returns":"bool"},"PDF_shfill":{"desc":"Fill area with shading","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $shading"}],"returns":"bool"},"PDF_show":{"desc":"Output text at current position","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $text"}],"returns":"bool"},"PDF_show_xy":{"desc":"Output text at given position","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $text"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"PDF_skew":{"desc":"Skew the coordinate system","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $alpha"},{"required":"yes","param":"float $beta"}],"returns":"bool"},"PDF_stroke":{"desc":"Stroke path","params":[{"required":"yes","param":"resource $p"}],"returns":"bool"},"PDF_suspend_page":{"desc":"Suspend page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"bool"},"PDF_translate":{"desc":"Set origin of coordinate system","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"float $tx"},{"required":"yes","param":"float $ty"}],"returns":"bool"},"pg_cancel_query":{"desc":"Cancel an asynchronous query","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"pg_close":{"desc":"Closes a PostgreSQL connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"pg_connection_busy":{"desc":"Get connection is busy or not","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"pg_connection_reset":{"desc":"Reset connection (reconnect)","params":[{"required":"yes","param":"resource $connection"}],"returns":"bool"},"pg_copy_from":{"desc":"Insert records into a table from an array","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $rows"},{"required":"no","param":"string $delimiter = &#039;&#039;"},{"required":"no","param":"string $null_as = &#039;&#039;"}],"returns":"bool"},"pg_end_copy":{"desc":"Sync with PostgreSQL backend","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"pg_lo_close":{"desc":"Close a large object","params":[{"required":"yes","param":"resource $large_object"}],"returns":"bool"},"pg_lo_export":{"desc":"Export a large object to file","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"int $oid"},{"required":"yes","param":"string $pathname"}],"returns":"bool"},"pg_lo_seek":{"desc":"Seeks position within a large object","params":[{"required":"yes","param":"resource $large_object"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $whence = PGSQL_SEEK_CUR"}],"returns":"bool"},"pg_lo_unlink":{"desc":"Delete a large object","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"int $oid"}],"returns":"bool"},"pg_ping":{"desc":"Ping database connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"pg_put_line":{"desc":"Send a NULL-terminated string to PostgreSQL backend","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $data"}],"returns":"bool"},"pg_result_seek":{"desc":"Set internal row offset in result resource","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $offset"}],"returns":"bool"},"pg_send_execute":{"desc":"Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $stmtname"},{"required":"yes","param":"array $params"}],"returns":"bool"},"pg_send_prepare":{"desc":"Sends a request to create a prepared statement with the given parameters, without waiting for completion.","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $stmtname"},{"required":"yes","param":"string $query"}],"returns":"bool"},"pg_send_query":{"desc":"Sends asynchronous query","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $query"}],"returns":"bool"},"pg_send_query_params":{"desc":"Submits a command and separate parameters to the server without waiting for the result(s).","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $query"},{"required":"yes","param":"array $params"}],"returns":"bool"},"pg_trace":{"desc":"Enable tracing a PostgreSQL connection","params":[{"required":"yes","param":"string $pathname"},{"required":"no","param":"string $mode = &quot;w&quot;"},{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"pg_untrace":{"desc":"Disable tracing of a PostgreSQL connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"phpcredits":{"desc":"Prints out the credits for PHP","params":[{"required":"no","param":"int $flag = CREDITS_ALL"}],"returns":"bool"},"phpinfo":{"desc":"Outputs information about PHP&#039;s configuration","params":[{"required":"no","param":"int $what = INFO_ALL"}],"returns":"bool"},"php_check_syntax":{"desc":"Check the PHP syntax of (and execute) the specified file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"string $error_message = &#039;&#039;"}],"returns":"bool"},"png2wbmp":{"desc":"Convert PNG image file to WBMP image file","params":[{"required":"yes","param":"string $pngname"},{"required":"yes","param":"string $wbmpname"},{"required":"yes","param":"int $dest_height"},{"required":"yes","param":"int $dest_width"},{"required":"yes","param":"int $threshold"}],"returns":"bool"},"posix_access":{"desc":"Determine accessibility of a file","params":[{"required":"yes","param":"string $file"},{"required":"no","param":"int $mode = POSIX_F_OK"}],"returns":"bool"},"posix_initgroups":{"desc":"Calculate the group access list","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"int $base_group_id"}],"returns":"bool"},"posix_isatty":{"desc":"Determine if a file descriptor is an interactive terminal","params":[{"required":"yes","param":"int $fd"}],"returns":"bool"},"posix_kill":{"desc":"Send a signal to a process","params":[{"required":"yes","param":"int $pid"},{"required":"yes","param":"int $sig"}],"returns":"bool"},"posix_mkfifo":{"desc":"Create a fifo special file (a named pipe)","params":[{"required":"yes","param":"string $pathname"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"posix_mknod":{"desc":"Create a special or ordinary file (POSIX.1)","params":[{"required":"yes","param":"string $pathname"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $major = &#039;&#039;"},{"required":"no","param":"int $minor = &#039;&#039;"}],"returns":"bool"},"posix_setegid":{"desc":"Set the effective GID of the current process","params":[{"required":"yes","param":"int $gid"}],"returns":"bool"},"posix_seteuid":{"desc":"Set the effective UID of the current process","params":[{"required":"yes","param":"int $uid"}],"returns":"bool"},"posix_setgid":{"desc":"Set the GID of the current process","params":[{"required":"yes","param":"int $gid"}],"returns":"bool"},"posix_setpgid":{"desc":"Set process group id for job control","params":[{"required":"yes","param":"int $pid"},{"required":"yes","param":"int $pgid"}],"returns":"bool"},"posix_setuid":{"desc":"Set the UID of the current process","params":[{"required":"yes","param":"int $uid"}],"returns":"bool"},"printer_delete_dc":{"desc":"Delete a device context","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"bool"},"printer_draw_bmp":{"desc":"Draw a bmp","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"},{"required":"no","param":"int $width = &#039;&#039;"},{"required":"yes","param":"int $height"}],"returns":"bool"},"printer_end_doc":{"desc":"Close document","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"bool"},"printer_end_page":{"desc":"Close active page","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"bool"},"printer_set_option":{"desc":"Configure the printer connection","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"printer_start_doc":{"desc":"Start a new document","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"no","param":"string $document = &#039;&#039;"}],"returns":"bool"},"printer_start_page":{"desc":"Start a new page","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"bool"},"printer_write":{"desc":"Write data to the printer","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"string $content"}],"returns":"bool"},"proc_nice":{"desc":"Change the priority of the current process","params":[{"required":"yes","param":"int $increment"}],"returns":"bool"},"proc_terminate":{"desc":"Kills a process opened by proc_open","params":[{"required":"yes","param":"resource $process"},{"required":"no","param":"int $signal = 15"}],"returns":"bool"},"property_exists":{"desc":"Checks if the object or class has a property","params":[{"required":"yes","param":"mixed $class"},{"required":"yes","param":"string $property"}],"returns":"bool"},"pspell_add_to_personal":{"desc":"Add the word to a personal wordlist","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $word"}],"returns":"bool"},"pspell_add_to_session":{"desc":"Add the word to the wordlist in the current session","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $word"}],"returns":"bool"},"pspell_check":{"desc":"Check a word","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $word"}],"returns":"bool"},"pspell_clear_session":{"desc":"Clear the current session","params":[{"required":"yes","param":"int $dictionary_link"}],"returns":"bool"},"pspell_config_data_dir":{"desc":"location of language data files","params":[{"required":"yes","param":"int $conf"},{"required":"yes","param":"string $directory"}],"returns":"bool"},"pspell_config_dict_dir":{"desc":"Location of the main word list","params":[{"required":"yes","param":"int $conf"},{"required":"yes","param":"string $directory"}],"returns":"bool"},"pspell_config_ignore":{"desc":"Ignore words less than N characters long","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"int $n"}],"returns":"bool"},"pspell_config_mode":{"desc":"Change the mode number of suggestions returned","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"pspell_config_personal":{"desc":"Set a file that contains personal wordlist","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $file"}],"returns":"bool"},"pspell_config_repl":{"desc":"Set a file that contains replacement pairs","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $file"}],"returns":"bool"},"pspell_config_runtogether":{"desc":"Consider run-together words as valid compounds","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"bool $flag"}],"returns":"bool"},"pspell_config_save_repl":{"desc":"Determine whether to save a replacement pairs list  along with the wordlist","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"bool $flag"}],"returns":"bool"},"pspell_save_wordlist":{"desc":"Save the personal wordlist to a file","params":[{"required":"yes","param":"int $dictionary_link"}],"returns":"bool"},"pspell_store_replacement":{"desc":"Store a replacement pair for a word","params":[{"required":"yes","param":"int $dictionary_link"},{"required":"yes","param":"string $misspelled"},{"required":"yes","param":"string $correct"}],"returns":"bool"},"ps_add_launchlink":{"desc":"Adds link which launches file","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"ps_add_locallink":{"desc":"Adds link to a page in the same document","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"ps_add_note":{"desc":"Adds note to current page","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $contents"},{"required":"yes","param":"string $title"},{"required":"yes","param":"string $icon"},{"required":"yes","param":"int $open"}],"returns":"bool"},"ps_add_pdflink":{"desc":"Adds link to a page in a second pdf document","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"ps_add_weblink":{"desc":"Adds link to a web location","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $url"}],"returns":"bool"},"ps_arc":{"desc":"Draws an arc counterclockwise","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $radius"},{"required":"yes","param":"float $alpha"},{"required":"yes","param":"float $beta"}],"returns":"bool"},"ps_arcn":{"desc":"Draws an arc clockwise","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $radius"},{"required":"yes","param":"float $alpha"},{"required":"yes","param":"float $beta"}],"returns":"bool"},"ps_begin_page":{"desc":"Start a new page","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"bool"},"ps_circle":{"desc":"Draws a circle","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $radius"}],"returns":"bool"},"ps_clip":{"desc":"Clips drawing to current path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_close":{"desc":"Closes a PostScript document","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_closepath":{"desc":"Closes path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_closepath_stroke":{"desc":"Closes and strokes path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_continue_text":{"desc":"Continue text in next line","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"}],"returns":"bool"},"ps_curveto":{"desc":"Draws a curve","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $x3"},{"required":"yes","param":"float $y3"}],"returns":"bool"},"ps_delete":{"desc":"Deletes all resources of a PostScript document","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_end_page":{"desc":"End a page","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_end_pattern":{"desc":"End a pattern","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_end_template":{"desc":"End a template","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_fill":{"desc":"Fills the current path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_fill_stroke":{"desc":"Fills and strokes the current path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_include_file":{"desc":"Reads an external file with raw PostScript code","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $file"}],"returns":"bool"},"ps_lineto":{"desc":"Draws a line","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"ps_moveto":{"desc":"Sets current point","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"ps_open_file":{"desc":"Opens a file for output","params":[{"required":"yes","param":"resource $psdoc"},{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"ps_place_image":{"desc":"Places image on the page","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $imageid"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $scale"}],"returns":"bool"},"ps_rect":{"desc":"Draws a rectangle","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"bool"},"ps_restore":{"desc":"Restore previously save context","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_rotate":{"desc":"Sets rotation factor","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $rot"}],"returns":"bool"},"ps_save":{"desc":"Save current context","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_scale":{"desc":"Sets scaling factor","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"ps_setcolor":{"desc":"Sets current color","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $colorspace"},{"required":"yes","param":"float $c1"},{"required":"yes","param":"float $c2"},{"required":"yes","param":"float $c3"},{"required":"yes","param":"float $c4"}],"returns":"bool"},"ps_setdash":{"desc":"Sets appearance of a dashed line","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $on"},{"required":"yes","param":"float $off"}],"returns":"bool"},"ps_setflat":{"desc":"Sets flatness","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $value"}],"returns":"bool"},"ps_setfont":{"desc":"Sets font to use for following output","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $fontid"},{"required":"yes","param":"float $size"}],"returns":"bool"},"ps_setgray":{"desc":"Sets gray value","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $gray"}],"returns":"bool"},"ps_setlinecap":{"desc":"Sets appearance of line ends","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $type"}],"returns":"bool"},"ps_setlinejoin":{"desc":"Sets how contected lines are joined","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $type"}],"returns":"bool"},"ps_setlinewidth":{"desc":"Sets width of a line","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $width"}],"returns":"bool"},"ps_setmiterlimit":{"desc":"Sets the miter limit","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $value"}],"returns":"bool"},"ps_setoverprintmode":{"desc":"Sets overprint mode","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"ps_setpolydash":{"desc":"Sets appearance of a dashed line","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $arr"}],"returns":"bool"},"ps_set_border_color":{"desc":"Sets color of border for annotations","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"bool"},"ps_set_border_dash":{"desc":"Sets length of dashes for border of annotations","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $black"},{"required":"yes","param":"float $white"}],"returns":"bool"},"ps_set_border_style":{"desc":"Sets border style of annotations","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $style"},{"required":"yes","param":"float $width"}],"returns":"bool"},"ps_set_info":{"desc":"Sets information fields of document","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $val"}],"returns":"bool"},"ps_set_parameter":{"desc":"Sets certain parameters","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"bool"},"ps_set_text_pos":{"desc":"Sets position for text output","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"ps_set_value":{"desc":"Sets certain values","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"float $value"}],"returns":"bool"},"ps_shfill":{"desc":"Fills an area with a shading","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $shadingid"}],"returns":"bool"},"ps_show":{"desc":"Output text","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"}],"returns":"bool"},"ps_show2":{"desc":"Output a text at current position","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $len"}],"returns":"bool"},"ps_show_xy":{"desc":"Output text at given position","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"ps_show_xy2":{"desc":"Output text at position","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $len"},{"required":"yes","param":"float $xcoor"},{"required":"yes","param":"float $ycoor"}],"returns":"bool"},"ps_stroke":{"desc":"Draws the current path","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"bool"},"ps_symbol":{"desc":"Output a glyph","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $ord"}],"returns":"bool"},"ps_translate":{"desc":"Sets translation","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"bool"},"putenv":{"desc":"Sets the value of an environment variable","params":[{"required":"yes","param":"string $setting"}],"returns":"bool"},"px_close":{"desc":"Closes a paradox database","params":[{"required":"yes","param":"resource $pxdoc"}],"returns":"bool"},"px_create_fp":{"desc":"Create a new paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"resource $file"},{"required":"yes","param":"array $fielddesc"}],"returns":"bool"},"px_delete":{"desc":"Deletes resource of paradox database","params":[{"required":"yes","param":"resource $pxdoc"}],"returns":"bool"},"px_delete_record":{"desc":"Deletes record from paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"int $num"}],"returns":"bool"},"px_open_fp":{"desc":"Open paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"resource $file"}],"returns":"bool"},"px_put_record":{"desc":"Stores record into paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"array $record"},{"required":"no","param":"int $recpos = -1"}],"returns":"bool"},"px_set_blob_file":{"desc":"Sets the file where blobs are read from","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"px_set_parameter":{"desc":"Sets a parameter","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"bool"},"px_set_targetencoding":{"desc":"Sets the encoding for character fields (deprecated)","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $encoding"}],"returns":"bool"},"px_set_value":{"desc":"Sets a value","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"float $value"}],"returns":"bool"},"px_update_record":{"desc":"Updates record in paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"array $data"},{"required":"yes","param":"int $num"}],"returns":"bool"},"radius_add_server":{"desc":"Adds a server","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"string $hostname"},{"required":"yes","param":"int $port"},{"required":"yes","param":"string $secret"},{"required":"yes","param":"int $timeout"},{"required":"yes","param":"int $max_tries"}],"returns":"bool"},"radius_close":{"desc":"Frees all ressources","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"bool"},"radius_config":{"desc":"Causes the library to read the given configuration file","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"string $file"}],"returns":"bool"},"radius_create_request":{"desc":"Create accounting or authentication request","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $type"}],"returns":"bool"},"radius_put_addr":{"desc":"Attaches an IP-Address attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $addr"}],"returns":"bool"},"radius_put_attr":{"desc":"Attaches a binary attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $value"}],"returns":"bool"},"radius_put_int":{"desc":"Attaches an integer attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $type"},{"required":"yes","param":"int $value"}],"returns":"bool"},"radius_put_string":{"desc":"Attaches a string attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $value"}],"returns":"bool"},"radius_put_vendor_addr":{"desc":"Attaches a vendor specific IP-Address attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $vendor"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $addr"}],"returns":"bool"},"radius_put_vendor_attr":{"desc":"Attaches a vendor specific binary attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $vendor"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $value"}],"returns":"bool"},"radius_put_vendor_int":{"desc":"Attaches a vendor specific integer attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $vendor"},{"required":"yes","param":"int $type"},{"required":"yes","param":"int $value"}],"returns":"bool"},"radius_put_vendor_string":{"desc":"Attaches a vendor specific string attribute","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"int $vendor"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $value"}],"returns":"bool"},"rar_broken_is":{"desc":"Test whether an archive is broken (incomplete)","params":[{"required":"yes","param":"RarArchive $rarfile"}],"returns":"bool"},"rar_close":{"desc":"Close RAR archive and free all resources","params":[{"required":"yes","param":"RarArchive $rarfile"}],"returns":"bool"},"rar_solid_is":{"desc":"Check whether the RAR archive is solid","params":[{"required":"yes","param":"RarArchive $rarfile"}],"returns":"bool"},"readline_add_history":{"desc":"Adds a line to the history","params":[{"required":"yes","param":"string $line"}],"returns":"bool"},"readline_callback_handler_install":{"desc":"Initializes the readline callback interface and terminal, prints the prompt and returns immediately","params":[{"required":"yes","param":"string $prompt"},{"required":"yes","param":"callback $callback"}],"returns":"bool"},"readline_callback_handler_remove":{"desc":"Removes a previously installed callback handler and restores terminal settings","params":[],"returns":"bool"},"readline_clear_history":{"desc":"Clears the history","params":[],"returns":"bool"},"readline_completion_function":{"desc":"Registers a completion function","params":[{"required":"yes","param":"callback $function"}],"returns":"bool"},"readline_read_history":{"desc":"Reads the history","params":[{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"readline_write_history":{"desc":"Writes the history","params":[{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"bool"},"recode_file":{"desc":"Recode from file to file according to recode request","params":[{"required":"yes","param":"string $request"},{"required":"yes","param":"resource $input"},{"required":"yes","param":"resource $output"}],"returns":"bool"},"register_tick_function":{"desc":"Register a function for execution on each tick","params":[{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $arg = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"bool"},"rename":{"desc":"Renames a file or directory","params":[{"required":"yes","param":"string $oldname"},{"required":"yes","param":"string $newname"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"bool"},"rename_function":{"desc":"Renames orig_name to new_name in the global function table","params":[{"required":"yes","param":"string $original_name"},{"required":"yes","param":"string $new_name"}],"returns":"bool"},"restore_error_handler":{"desc":"Restores the previous error handler function","params":[],"returns":"bool"},"restore_exception_handler":{"desc":"Restores the previously defined exception handler function","params":[],"returns":"bool"},"rewind":{"desc":"Rewind the position of a file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"bool"},"rmdir":{"desc":"Removes directory","params":[{"required":"yes","param":"string $dirname"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"bool"},"rpm_close":{"desc":"Closes an RPM file","params":[{"required":"yes","param":"resource $rpmr"}],"returns":"bool"},"rpm_is_valid":{"desc":"Tests a filename for validity as an RPM file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"rrd_create":{"desc":"Creates rrd database file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $options"}],"returns":"bool"},"rrd_restore":{"desc":"Restores the RRD file from XML dump.","params":[{"required":"yes","param":"string $xml_file"},{"required":"yes","param":"string $rrd_file"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"bool"},"rrd_tune":{"desc":"Tunes some RRD database file header options.","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $options"}],"returns":"bool"},"rrd_update":{"desc":"Updates the RRD database.","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $options"}],"returns":"bool"},"rsort":{"desc":"Sort an array in reverse order","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"runkit_class_adopt":{"desc":"Convert a base class to an inherited class, add ancestral methods when appropriate","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $parentname"}],"returns":"bool"},"runkit_class_emancipate":{"desc":"Convert an inherited class to a base class, removes any method whose scope is ancestral","params":[{"required":"yes","param":"string $classname"}],"returns":"bool"},"runkit_constant_add":{"desc":"Similar to define(), but allows defining in class definitions as well","params":[{"required":"yes","param":"string $constname"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"runkit_constant_redefine":{"desc":"Redefine an already defined constant","params":[{"required":"yes","param":"string $constname"},{"required":"yes","param":"mixed $newvalue"}],"returns":"bool"},"runkit_constant_remove":{"desc":"Remove/Delete an already defined constant","params":[{"required":"yes","param":"string $constname"}],"returns":"bool"},"runkit_function_add":{"desc":"Add a new function, similar to create_function","params":[{"required":"yes","param":"string $funcname"},{"required":"yes","param":"string $arglist"},{"required":"yes","param":"string $code"}],"returns":"bool"},"runkit_function_copy":{"desc":"Copy a function to a new function name","params":[{"required":"yes","param":"string $funcname"},{"required":"yes","param":"string $targetname"}],"returns":"bool"},"runkit_function_redefine":{"desc":"Replace a function definition with a new implementation","params":[{"required":"yes","param":"string $funcname"},{"required":"yes","param":"string $arglist"},{"required":"yes","param":"string $code"}],"returns":"bool"},"runkit_function_remove":{"desc":"Remove a function definition","params":[{"required":"yes","param":"string $funcname"}],"returns":"bool"},"runkit_function_rename":{"desc":"Change a function&#039;s name","params":[{"required":"yes","param":"string $funcname"},{"required":"yes","param":"string $newname"}],"returns":"bool"},"runkit_import":{"desc":"Process a PHP file importing function and class definitions, overwriting where appropriate","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $flags = RUNKIT_IMPORT_CLASS_METHODS"}],"returns":"bool"},"runkit_lint":{"desc":"Check the PHP syntax of the specified php code","params":[{"required":"yes","param":"string $code"}],"returns":"bool"},"runkit_lint_file":{"desc":"Check the PHP syntax of the specified file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"runkit_method_add":{"desc":"Dynamically adds a new method to a given class","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $args"},{"required":"yes","param":"string $code"},{"required":"no","param":"int $flags = RUNKIT_ACC_PUBLIC"}],"returns":"bool"},"runkit_method_copy":{"desc":"Copies a method from class to another","params":[{"required":"yes","param":"string $dClass"},{"required":"yes","param":"string $dMethod"},{"required":"yes","param":"string $sClass"},{"required":"no","param":"string $sMethod = &#039;&#039;"}],"returns":"bool"},"runkit_method_redefine":{"desc":"Dynamically changes the code of the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $args"},{"required":"yes","param":"string $code"},{"required":"no","param":"int $flags = RUNKIT_ACC_PUBLIC"}],"returns":"bool"},"runkit_method_remove":{"desc":"Dynamically removes the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"}],"returns":"bool"},"runkit_method_rename":{"desc":"Dynamically changes the name of the given method","params":[{"required":"yes","param":"string $classname"},{"required":"yes","param":"string $methodname"},{"required":"yes","param":"string $newname"}],"returns":"bool"},"runkit_return_value_used":{"desc":"Determines if the current functions return value will be used","params":[],"returns":"bool"},"sem_acquire":{"desc":"Acquire a semaphore","params":[{"required":"yes","param":"resource $sem_identifier"}],"returns":"bool"},"sem_release":{"desc":"Release a semaphore","params":[{"required":"yes","param":"resource $sem_identifier"}],"returns":"bool"},"sem_remove":{"desc":"Remove a semaphore","params":[{"required":"yes","param":"resource $sem_identifier"}],"returns":"bool"},"session_decode":{"desc":"Decodes session data from a string","params":[{"required":"yes","param":"string $data"}],"returns":"bool"},"session_destroy":{"desc":"Destroys all data registered to a session","params":[],"returns":"bool"},"session_is_registered":{"desc":"Find out whether a global variable is registered in a session","params":[{"required":"yes","param":"string $name"}],"returns":"bool"},"session_pgsql_add_error":{"desc":"Increments error counts and sets last error message","params":[{"required":"yes","param":"int $error_level"},{"required":"no","param":"string $error_message = &#039;&#039;"}],"returns":"bool"},"session_pgsql_reset":{"desc":"Reset connection to session database servers","params":[],"returns":"bool"},"session_pgsql_set_field":{"desc":"Set custom field value","params":[{"required":"yes","param":"string $value"}],"returns":"bool"},"session_regenerate_id":{"desc":"Update the current session id with a newly generated one","params":[{"required":"no","param":"bool $delete_old_session = false"}],"returns":"bool"},"session_register":{"desc":"Register one or more global variables with the current session","params":[{"required":"yes","param":"mixed $name"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"bool"},"session_set_save_handler":{"desc":"Sets user-level session storage functions","params":[{"required":"yes","param":"callback $open"},{"required":"yes","param":"callback $close"},{"required":"yes","param":"callback $read"},{"required":"yes","param":"callback $write"},{"required":"yes","param":"callback $destroy"},{"required":"yes","param":"callback $gc"}],"returns":"bool"},"session_start":{"desc":"Initialize session data","params":[],"returns":"bool"},"session_unregister":{"desc":"Unregister a global variable from the current session","params":[{"required":"yes","param":"string $name"}],"returns":"bool"},"setcookie":{"desc":"Send a cookie","params":[{"required":"yes","param":"string $name"},{"required":"no","param":"string $value = &#039;&#039;"},{"required":"no","param":"int $expire = &#039;&#039;"},{"required":"no","param":"string $path = &#039;&#039;"},{"required":"no","param":"string $domain = &#039;&#039;"},{"required":"no","param":"bool $secure = false"},{"required":"no","param":"bool $httponly = false"}],"returns":"bool"},"setrawcookie":{"desc":"Send a cookie without urlencoding the cookie value","params":[{"required":"yes","param":"string $name"},{"required":"no","param":"string $value = &#039;&#039;"},{"required":"no","param":"int $expire = &#039;&#039;"},{"required":"no","param":"string $path = &#039;&#039;"},{"required":"no","param":"string $domain = &#039;&#039;"},{"required":"no","param":"bool $secure = false"},{"required":"no","param":"bool $httponly = false"}],"returns":"bool"},"setthreadtitle":{"desc":"Set the thread title","params":[{"required":"yes","param":"string $title"}],"returns":"bool"},"settype":{"desc":"Set the type of a variable","params":[{"required":"yes","param":"mixed $var"},{"required":"yes","param":"string $type"}],"returns":"bool"},"set_magic_quotes_runtime":{"desc":"Sets the current active configuration setting of magic_quotes_runtime","params":[{"required":"yes","param":"bool $new_setting"}],"returns":"bool"},"shmop_delete":{"desc":"Delete shared memory block","params":[{"required":"yes","param":"int $shmid"}],"returns":"bool"},"shm_detach":{"desc":"Disconnects from shared memory segment","params":[{"required":"yes","param":"resource $shm_identifier"}],"returns":"bool"},"shm_has_var":{"desc":"Check whether a specific entry exists","params":[{"required":"yes","param":"resource $shm_identifier"},{"required":"yes","param":"int $variable_key"}],"returns":"bool"},"shm_put_var":{"desc":"Inserts or updates a variable in shared memory","params":[{"required":"yes","param":"resource $shm_identifier"},{"required":"yes","param":"int $variable_key"},{"required":"yes","param":"mixed $variable"}],"returns":"bool"},"shm_remove":{"desc":"Removes shared memory from Unix systems","params":[{"required":"yes","param":"resource $shm_identifier"}],"returns":"bool"},"shm_remove_var":{"desc":"Removes a variable from shared memory","params":[{"required":"yes","param":"resource $shm_identifier"},{"required":"yes","param":"int $variable_key"}],"returns":"bool"},"shuffle":{"desc":"Shuffle an array","params":[{"required":"yes","param":"array $array"}],"returns":"bool"},"snmp2_set":{"desc":"Set the value of an SNMP object","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $value"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"bool"},"snmp3_set":{"desc":"Description","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $sec_name"},{"required":"yes","param":"string $sec_level"},{"required":"yes","param":"string $auth_protocol"},{"required":"yes","param":"string $auth_passphrase"},{"required":"yes","param":"string $priv_protocol"},{"required":"yes","param":"string $priv_passphrase"},{"required":"yes","param":"string $object_id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $value"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"bool"},"snmpset":{"desc":"Set the value of an SNMP object","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"bool"},"snmp_get_quick_print":{"desc":"Fetches the current value of the UCD library&#039;s quick_print setting","params":[],"returns":"bool"},"snmp_read_mib":{"desc":"Reads and parses a MIB file into the active MIB tree","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"snmp_set_enum_print":{"desc":"Return all values that are enums with their enum value instead of the raw integer","params":[{"required":"yes","param":"int $enum_print"}],"returns":"bool"},"snmp_set_oid_output_format":{"desc":"Set the OID output format","params":[{"required":"yes","param":"int $oid_format"}],"returns":"bool"},"snmp_set_quick_print":{"desc":"Set the value of quick_print within the UCD SNMP library","params":[{"required":"yes","param":"bool $quick_print"}],"returns":"bool"},"snmp_set_valueretrieval":{"desc":"Specify the method how the SNMP values will be returned","params":[{"required":"yes","param":"int $method"}],"returns":"bool"},"socket_bind":{"desc":"Binds a name to a socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $address"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"bool"},"socket_connect":{"desc":"Initiates a connection on a socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $address"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"bool"},"socket_create_pair":{"desc":"Creates a pair of indistinguishable sockets and stores them in an array","params":[{"required":"yes","param":"int $domain"},{"required":"yes","param":"int $type"},{"required":"yes","param":"int $protocol"},{"required":"yes","param":"array $fd"}],"returns":"bool"},"socket_getpeername":{"desc":"Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $address"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"bool"},"socket_getsockname":{"desc":"Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $addr"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"bool"},"socket_listen":{"desc":"Listens for a connection on a socket","params":[{"required":"yes","param":"resource $socket"},{"required":"no","param":"int $backlog = &#039;&#039;"}],"returns":"bool"},"socket_set_block":{"desc":"Sets blocking mode on a socket resource","params":[{"required":"yes","param":"resource $socket"}],"returns":"bool"},"socket_set_nonblock":{"desc":"Sets nonblocking mode for file descriptor fd","params":[{"required":"yes","param":"resource $socket"}],"returns":"bool"},"socket_set_option":{"desc":"Sets socket options for the socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"int $level"},{"required":"yes","param":"int $optname"},{"required":"yes","param":"mixed $optval"}],"returns":"bool"},"socket_shutdown":{"desc":"Shuts down a socket for receiving, sending, or both","params":[{"required":"yes","param":"resource $socket"},{"required":"no","param":"int $how = 2"}],"returns":"bool"},"sort":{"desc":"Sort an array","params":[{"required":"yes","param":"array $array"},{"required":"no","param":"int $sort_flags = SORT_REGULAR"}],"returns":"bool"},"spl_autoload_register":{"desc":"Register given function as __autoload() implementation","params":[{"required":"no","param":"callback $autoload_function = &#039;&#039;"},{"required":"no","param":"bool $throw = true"},{"required":"no","param":"bool $prepend = false"}],"returns":"bool"},"spl_autoload_unregister":{"desc":"Unregister given function as __autoload() implementation","params":[{"required":"yes","param":"mixed $autoload_function"}],"returns":"bool"},"sqlite_exec":{"desc":"Executes a result-less query against a given database","params":[{"required":"yes","param":"resource $dbhandle"},{"required":"yes","param":"string $query"},{"required":"no","param":"string $error_msg = &#039;&#039;"}],"returns":"bool"},"sqlite_has_more":{"desc":"Finds whether or not more rows are available","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sqlite_has_prev":{"desc":"Returns whether or not a previous row is available","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sqlite_next":{"desc":"Seek to the next row number","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sqlite_prev":{"desc":"Seek to the previous row number of a result set","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sqlite_rewind":{"desc":"Seek to the first row number","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sqlite_seek":{"desc":"Seek to a particular row number of a buffered result set","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $rownum"}],"returns":"bool"},"sqlite_valid":{"desc":"Returns whether more rows are available","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"ssh2_auth_hostbased_file":{"desc":"Authenticate using a public hostkey","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $hostname"},{"required":"yes","param":"string $pubkeyfile"},{"required":"yes","param":"string $privkeyfile"},{"required":"no","param":"string $passphrase = &#039;&#039;"},{"required":"no","param":"string $local_username = &#039;&#039;"}],"returns":"bool"},"ssh2_auth_password":{"desc":"Authenticate over SSH using a plain password","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"}],"returns":"bool"},"ssh2_auth_pubkey_file":{"desc":"Authenticate using a public key","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $pubkeyfile"},{"required":"yes","param":"string $privkeyfile"},{"required":"no","param":"string $passphrase = &#039;&#039;"}],"returns":"bool"},"ssh2_publickey_add":{"desc":"Add an authorized publickey","params":[{"required":"yes","param":"resource $pkey"},{"required":"yes","param":"string $algoname"},{"required":"yes","param":"string $blob"},{"required":"no","param":"bool $overwrite = false"},{"required":"no","param":"array $attributes = &#039;&#039;"}],"returns":"bool"},"ssh2_publickey_remove":{"desc":"Remove an authorized publickey","params":[{"required":"yes","param":"resource $pkey"},{"required":"yes","param":"string $algoname"},{"required":"yes","param":"string $blob"}],"returns":"bool"},"ssh2_scp_recv":{"desc":"Request a file via SCP","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"string $local_file"}],"returns":"bool"},"ssh2_scp_send":{"desc":"Send a file via SCP","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $local_file"},{"required":"yes","param":"string $remote_file"},{"required":"no","param":"int $create_mode = 0644"}],"returns":"bool"},"ssh2_sftp_mkdir":{"desc":"Create a directory","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $dirname"},{"required":"no","param":"int $mode = 0777"},{"required":"no","param":"bool $recursive = false"}],"returns":"bool"},"ssh2_sftp_rename":{"desc":"Rename a remote file","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $from"},{"required":"yes","param":"string $to"}],"returns":"bool"},"ssh2_sftp_rmdir":{"desc":"Remove a directory","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $dirname"}],"returns":"bool"},"ssh2_sftp_symlink":{"desc":"Create a symlink","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $target"},{"required":"yes","param":"string $link"}],"returns":"bool"},"ssh2_sftp_unlink":{"desc":"Delete a file","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $filename"}],"returns":"bool"},"stomp_abort":{"desc":"Rolls back a transaction in progress","params":[{"required":"yes","param":"string $transaction_id"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_ack":{"desc":"Acknowledges consumption of a message","params":[{"required":"yes","param":"mixed $msg"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_begin":{"desc":"Starts a transaction","params":[{"required":"yes","param":"string $transaction_id"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_close":{"desc":"Closes stomp connection","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_commit":{"desc":"Commits a transaction in progress","params":[{"required":"yes","param":"string $transaction_id"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_has_frame":{"desc":"Indicates whether or not there is a frame ready to read","params":[{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_send":{"desc":"Sends a message","params":[{"required":"yes","param":"string $destination"},{"required":"yes","param":"mixed $msg"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_subscribe":{"desc":"Registers to listen to a given destination","params":[{"required":"yes","param":"string $destination"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stomp_unsubscribe":{"desc":"Removes an existing subscription","params":[{"required":"yes","param":"string $destination"},{"required":"no","param":"array $headers = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"bool"},"stream_context_set_option":{"desc":"Sets an option for a stream/wrapper/context","params":[{"required":"yes","param":"resource $stream_or_context"},{"required":"yes","param":"string $wrapper"},{"required":"yes","param":"string $option"},{"required":"yes","param":"mixed $value"},{"required":"yes","param":"array $options"}],"returns":"bool"},"stream_context_set_params":{"desc":"Set parameters for a stream/wrapper/context","params":[{"required":"yes","param":"resource $stream_or_context"},{"required":"yes","param":"array $params"}],"returns":"bool"},"stream_encoding":{"desc":"Set character set for stream encoding","params":[{"required":"yes","param":"resource $stream"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"bool"},"stream_filter_register":{"desc":"Register a user defined stream filter","params":[{"required":"yes","param":"string $filtername"},{"required":"yes","param":"string $classname"}],"returns":"bool"},"stream_filter_remove":{"desc":"Remove a filter from a stream","params":[{"required":"yes","param":"resource $stream_filter"}],"returns":"bool"},"stream_is_local":{"desc":"Checks if a stream is a local stream","params":[{"required":"yes","param":"mixed $stream_or_url"}],"returns":"bool"},"stream_set_blocking":{"desc":"Set blocking/non-blocking mode on a stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"int $mode"}],"returns":"bool"},"stream_set_timeout":{"desc":"Set timeout period on a stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"int $seconds"},{"required":"no","param":"int $microseconds = &#039;&#039;"}],"returns":"bool"},"stream_socket_shutdown":{"desc":"Shutdown a full-duplex connection","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"int $how"}],"returns":"bool"},"stream_supports_lock":{"desc":"Tells whether the stream supports locking.","params":[{"required":"yes","param":"resource $stream"}],"returns":"bool"},"stream_wrapper_register":{"desc":"Register a URL wrapper implemented as a PHP class","params":[{"required":"yes","param":"string $protocol"},{"required":"yes","param":"string $classname"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"stream_wrapper_restore":{"desc":"Restores a previously unregistered built-in wrapper","params":[{"required":"yes","param":"string $protocol"}],"returns":"bool"},"stream_wrapper_unregister":{"desc":"Unregister a URL wrapper","params":[{"required":"yes","param":"string $protocol"}],"returns":"bool"},"svn_add":{"desc":"Schedules the addition of an item in a working directory","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"bool $recursive = true"},{"required":"no","param":"bool $force = false"}],"returns":"bool"},"svn_checkout":{"desc":"Checks out a working copy from the repository","params":[{"required":"yes","param":"string $repos"},{"required":"yes","param":"string $targetpath"},{"required":"no","param":"int $revision = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"svn_cleanup":{"desc":"Recursively cleanup a working copy directory, finishing incomplete operations and removing locks","params":[{"required":"yes","param":"string $workingdir"}],"returns":"bool"},"svn_delete":{"desc":"Delete items from a working copy or repository.","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"bool $force = false"}],"returns":"bool"},"svn_export":{"desc":"Export the contents of a SVN directory","params":[{"required":"yes","param":"string $frompath"},{"required":"yes","param":"string $topath"},{"required":"no","param":"bool $working_copy = true"},{"required":"no","param":"int $revision_no = -1"}],"returns":"bool"},"svn_fs_abort_txn":{"desc":"Abort a transaction, returns true if everything is okay, false otherwise","params":[{"required":"yes","param":"resource $txn"}],"returns":"bool"},"svn_fs_change_node_prop":{"desc":"Return true if everything is ok, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"bool"},"svn_fs_contents_changed":{"desc":"Return true if content is different, false otherwise","params":[{"required":"yes","param":"resource $root1"},{"required":"yes","param":"string $path1"},{"required":"yes","param":"resource $root2"},{"required":"yes","param":"string $path2"}],"returns":"bool"},"svn_fs_copy":{"desc":"Copies a file or a directory, returns true if all is ok, false otherwise","params":[{"required":"yes","param":"resource $from_root"},{"required":"yes","param":"string $from_path"},{"required":"yes","param":"resource $to_root"},{"required":"yes","param":"string $to_path"}],"returns":"bool"},"svn_fs_delete":{"desc":"Deletes a file or a directory, return true if all is ok, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_fs_is_dir":{"desc":"Return true if the path points to a directory, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_fs_is_file":{"desc":"Return true if the path points to a file, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_fs_make_dir":{"desc":"Creates a new empty directory, returns true if all is ok, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_fs_make_file":{"desc":"Creates a new empty file, returns true if all is ok, false otherwise","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_fs_props_changed":{"desc":"Return true if props are different, false otherwise","params":[{"required":"yes","param":"resource $root1"},{"required":"yes","param":"string $path1"},{"required":"yes","param":"resource $root2"},{"required":"yes","param":"string $path2"}],"returns":"bool"},"svn_import":{"desc":"Imports an unversioned path into a repository","params":[{"required":"yes","param":"string $path"},{"required":"yes","param":"string $url"},{"required":"yes","param":"bool $nonrecursive"}],"returns":"bool"},"svn_mkdir":{"desc":"Creates a directory in a working copy or repository","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"string $log_message = &#039;&#039;"}],"returns":"bool"},"svn_repos_hotcopy":{"desc":"Make a hot-copy of the repos at repospath; copy it to destpath","params":[{"required":"yes","param":"string $repospath"},{"required":"yes","param":"string $destpath"},{"required":"yes","param":"bool $cleanlogs"}],"returns":"bool"},"svn_repos_recover":{"desc":"Run recovery procedures on the repository located at path.","params":[{"required":"yes","param":"string $path"}],"returns":"bool"},"svn_revert":{"desc":"Revert changes to the working copy","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"bool $recursive = false"}],"returns":"bool"},"sybase_close":{"desc":"Closes a Sybase connection","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"sybase_data_seek":{"desc":"Moves internal row pointer","params":[{"required":"yes","param":"resource $result_identifier"},{"required":"yes","param":"int $row_number"}],"returns":"bool"},"sybase_field_seek":{"desc":"Sets field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"bool"},"sybase_free_result":{"desc":"Frees result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"bool"},"sybase_select_db":{"desc":"Selects a Sybase database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"bool"},"sybase_set_message_handler":{"desc":"Sets the handler called when a server message is raised","params":[{"required":"yes","param":"callback $handler"},{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"bool"},"symlink":{"desc":"Creates a symbolic link","params":[{"required":"yes","param":"string $target"},{"required":"yes","param":"string $link"}],"returns":"bool"},"syslog":{"desc":"Generate a system log message","params":[{"required":"yes","param":"int $priority"},{"required":"yes","param":"string $message"}],"returns":"bool"},"tcpwrap_check":{"desc":"Performs a tcpwrap check","params":[{"required":"yes","param":"string $daemon"},{"required":"yes","param":"string $address"},{"required":"no","param":"string $user = &#039;&#039;"},{"required":"no","param":"bool $nodns = false"}],"returns":"bool"},"tidy_clean_repair":{"desc":"Execute configured cleanup and repair operations on parsed markup","params":[{"required":"yes","param":"tidy $object"}],"returns":"bool"},"tidy_diagnose":{"desc":"Run configured diagnostics on parsed and repaired markup","params":[{"required":"yes","param":"tidy $object"}],"returns":"bool"},"tidy_is_xhtml":{"desc":"Indicates if the document is a XHTML document","params":[{"required":"yes","param":"tidy $object"}],"returns":"bool"},"tidy_is_xml":{"desc":"Indicates if the document is a generic (non HTML/XHTML) XML document","params":[{"required":"yes","param":"tidy $object"}],"returns":"bool"},"tidy_reset_config":{"desc":"Restore Tidy configuration to default values","params":[],"returns":"bool"},"tidy_save_config":{"desc":"Save current settings to named file","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"tidy_setopt":{"desc":"Updates the configuration settings for the specified tidy document","params":[{"required":"yes","param":"string $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"tidy_set_encoding":{"desc":"Set the input/output character encoding for parsing markup","params":[{"required":"yes","param":"string $encoding"}],"returns":"bool"},"time_sleep_until":{"desc":"Make the script sleep until the specified time","params":[{"required":"yes","param":"float $timestamp"}],"returns":"bool"},"touch":{"desc":"Sets access and modification time of file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $time = time()"},{"required":"no","param":"int $atime = &#039;&#039;"}],"returns":"bool"},"trigger_error":{"desc":"Generates a user-level error/warning/notice message","params":[{"required":"yes","param":"string $error_msg"},{"required":"no","param":"int $error_type = E_USER_NOTICE"}],"returns":"bool"},"uasort":{"desc":"Sort an array with a user-defined comparison function and maintain index association","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"callback $cmp_function"}],"returns":"bool"},"udm_add_search_limit":{"desc":"Add various search limits","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"int $var"},{"required":"yes","param":"string $val"}],"returns":"bool"},"udm_check_charset":{"desc":"Check if the given charset is known to mnogosearch","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $charset"}],"returns":"bool"},"udm_clear_search_limits":{"desc":"Clear all mnoGoSearch search restrictions","params":[{"required":"yes","param":"resource $agent"}],"returns":"bool"},"udm_free_ispell_data":{"desc":"Free memory allocated for ispell data","params":[{"required":"yes","param":"int $agent"}],"returns":"bool"},"udm_free_res":{"desc":"Free mnoGoSearch result","params":[{"required":"yes","param":"resource $res"}],"returns":"bool"},"udm_load_ispell_data":{"desc":"Load ispell data","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"int $var"},{"required":"yes","param":"string $val1"},{"required":"yes","param":"string $val2"},{"required":"yes","param":"int $flag"}],"returns":"bool"},"udm_set_agent_param":{"desc":"Set mnoGoSearch agent session parameters","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"int $var"},{"required":"yes","param":"string $val"}],"returns":"bool"},"uksort":{"desc":"Sort an array by keys using a user-defined comparison function","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"callback $cmp_function"}],"returns":"bool"},"unlink":{"desc":"Deletes a file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"bool"},"use_soap_error_handler":{"desc":"Set whether to use the SOAP error handler","params":[{"required":"no","param":"bool $handler = true"}],"returns":"bool"},"usort":{"desc":"Sort an array by values using a user-defined comparison function","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"callback $cmp_function"}],"returns":"bool"},"virtual":{"desc":"Perform an Apache sub-request","params":[{"required":"yes","param":"string $filename"}],"returns":"bool"},"vpopmail_add_alias_domain":{"desc":"Add an alias for a virtual domain","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $aliasdomain"}],"returns":"bool"},"vpopmail_add_alias_domain_ex":{"desc":"Add alias to an existing virtual domain","params":[{"required":"yes","param":"string $olddomain"},{"required":"yes","param":"string $newdomain"}],"returns":"bool"},"vpopmail_add_domain":{"desc":"Add a new virtual domain","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $dir"},{"required":"yes","param":"int $uid"},{"required":"yes","param":"int $gid"}],"returns":"bool"},"vpopmail_add_domain_ex":{"desc":"Add a new virtual domain","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $passwd"},{"required":"no","param":"string $quota = &#039;&#039;"},{"required":"no","param":"string $bounce = &#039;&#039;"},{"required":"no","param":"bool $apop = &#039;&#039;"}],"returns":"bool"},"vpopmail_add_user":{"desc":"Add a new user to the specified virtual domain","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $gecos = &#039;&#039;"},{"required":"no","param":"bool $apop = &#039;&#039;"}],"returns":"bool"},"vpopmail_alias_add":{"desc":"Insert a virtual alias","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $alias"}],"returns":"bool"},"vpopmail_alias_del":{"desc":"Deletes all virtual aliases of a user","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"}],"returns":"bool"},"vpopmail_alias_del_domain":{"desc":"Deletes all virtual aliases of a domain","params":[{"required":"yes","param":"string $domain"}],"returns":"bool"},"vpopmail_auth_user":{"desc":"Attempt to validate a username/domain/password","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $apop = &#039;&#039;"}],"returns":"bool"},"vpopmail_del_domain":{"desc":"Delete a virtual domain","params":[{"required":"yes","param":"string $domain"}],"returns":"bool"},"vpopmail_del_domain_ex":{"desc":"Delete a virtual domain","params":[{"required":"yes","param":"string $domain"}],"returns":"bool"},"vpopmail_del_user":{"desc":"Delete a user from a virtual domain","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"}],"returns":"bool"},"vpopmail_passwd":{"desc":"Change a virtual user&#039;s password","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $password"},{"required":"no","param":"bool $apop = &#039;&#039;"}],"returns":"bool"},"vpopmail_set_user_quota":{"desc":"Sets a virtual user&#039;s quota","params":[{"required":"yes","param":"string $user"},{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $quota"}],"returns":"bool"},"w32api_deftype":{"desc":"Defines a type for use with other w32api_functions","params":[{"required":"yes","param":"string $typename"},{"required":"yes","param":"string $member1_type"},{"required":"yes","param":"string $member1_name"},{"required":"no","param":"string $... = &#039;&#039;"}],"returns":"bool"},"w32api_register_function":{"desc":"Registers function function_name from library with PHP","params":[{"required":"yes","param":"string $library"},{"required":"yes","param":"string $function_name"},{"required":"yes","param":"string $return_type"}],"returns":"bool"},"wddx_add_vars":{"desc":"Add variables to a WDDX packet with the specified ID","params":[{"required":"yes","param":"resource $packet_id"},{"required":"yes","param":"mixed $var_name"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"bool"},"win32_set_service_status":{"desc":"Update the service status","params":[{"required":"yes","param":"int $status"},{"required":"no","param":"int $checkpoint = &#039;&#039;"}],"returns":"bool"},"wincache_lock":{"desc":"Acquires an exclusive lock on a given key","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"bool $isglobal = false"}],"returns":"bool"},"wincache_refresh_if_changed":{"desc":"Refreshes the cache entries for the cached files","params":[{"required":"no","param":"array $files = &#039;&#039;"}],"returns":"bool"},"wincache_ucache_add":{"desc":"Adds a variable in user cache only if variable does not already exist in the cache","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"int $ttl = &#039;&#039;"},{"required":"yes","param":"array $values"},{"required":"no","param":"mixed $unused = &#039;&#039;"}],"returns":"bool"},"wincache_ucache_cas":{"desc":"Compares the variable with old value and assigns new value to it","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"int $old_value"},{"required":"yes","param":"int $new_value"}],"returns":"bool"},"wincache_ucache_clear":{"desc":"Deletes entire content of the user cache","params":[],"returns":"bool"},"wincache_ucache_delete":{"desc":"Deletes variables from the user cache","params":[{"required":"yes","param":"mixed $key"}],"returns":"bool"},"wincache_ucache_exists":{"desc":"Checks if a variable exists in the user cache","params":[{"required":"yes","param":"string $key"}],"returns":"bool"},"wincache_ucache_set":{"desc":"Adds a variable in user cache and overwrites a variable if it already exists in the cache","params":[{"required":"yes","param":"mixed $key"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"int $ttl = &#039;&#039;"},{"required":"yes","param":"array $values"},{"required":"no","param":"mixed $unused = &#039;&#039;"}],"returns":"bool"},"wincache_unlock":{"desc":"Releases an exclusive lock on a given key","params":[{"required":"yes","param":"string $key"}],"returns":"bool"},"xattr_remove":{"desc":"Remove an extended attribute","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $name"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"xattr_set":{"desc":"Set an extended attribute","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"xattr_supported":{"desc":"Check if filesystem supports extended attributes","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"bool"},"xdiff_file_bdiff":{"desc":"Make binary diff of two files","params":[{"required":"yes","param":"string $old_file"},{"required":"yes","param":"string $new_file"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"xdiff_file_bpatch":{"desc":"Patch a file with a binary diff","params":[{"required":"yes","param":"string $file"},{"required":"yes","param":"string $patch"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"xdiff_file_diff":{"desc":"Make unified diff of two files","params":[{"required":"yes","param":"string $old_file"},{"required":"yes","param":"string $new_file"},{"required":"yes","param":"string $dest"},{"required":"no","param":"int $context = 3"},{"required":"no","param":"bool $minimal = false"}],"returns":"bool"},"xdiff_file_diff_binary":{"desc":"Alias of xdiff_file_bdiff","params":[{"required":"yes","param":"string $old_file"},{"required":"yes","param":"string $new_file"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"xdiff_file_patch_binary":{"desc":"Alias of xdiff_file_bpatch","params":[{"required":"yes","param":"string $file"},{"required":"yes","param":"string $patch"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"xdiff_file_rabdiff":{"desc":"Make binary diff of two files using the Rabin&#039;s polynomial fingerprinting algorithm","params":[{"required":"yes","param":"string $old_file"},{"required":"yes","param":"string $new_file"},{"required":"yes","param":"string $dest"}],"returns":"bool"},"xmlrpc_is_fault":{"desc":"Determines if an array value represents an XMLRPC fault","params":[{"required":"yes","param":"array $arg"}],"returns":"bool"},"xmlrpc_server_register_introspection_callback":{"desc":"Register a PHP function to generate documentation","params":[{"required":"yes","param":"resource $server"},{"required":"yes","param":"string $function"}],"returns":"bool"},"xmlrpc_server_register_method":{"desc":"Register a PHP function to resource method matching method_name","params":[{"required":"yes","param":"resource $server"},{"required":"yes","param":"string $method_name"},{"required":"yes","param":"string $function"}],"returns":"bool"},"xmlrpc_set_type":{"desc":"Sets xmlrpc type, base64 or datetime, for a PHP string value","params":[{"required":"yes","param":"string $value"},{"required":"yes","param":"string $type"}],"returns":"bool"},"xml_parser_free":{"desc":"Free an XML parser","params":[{"required":"yes","param":"resource $parser"}],"returns":"bool"},"xml_parser_set_option":{"desc":"Set options in an XML parser","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"int $option"},{"required":"yes","param":"mixed $value"}],"returns":"bool"},"xml_set_character_data_handler":{"desc":"Set up character data handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_default_handler":{"desc":"Set up default handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_element_handler":{"desc":"Set up start and end element handlers","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $start_element_handler"},{"required":"yes","param":"callback $end_element_handler"}],"returns":"bool"},"xml_set_end_namespace_decl_handler":{"desc":"Set up end namespace declaration handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_external_entity_ref_handler":{"desc":"Set up external entity reference handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_notation_decl_handler":{"desc":"Set up notation declaration handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_object":{"desc":"Use XML Parser within an object","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"object $object"}],"returns":"bool"},"xml_set_processing_instruction_handler":{"desc":"Set up processing instruction (PI) handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_start_namespace_decl_handler":{"desc":"Set up start namespace declaration handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xml_set_unparsed_entity_decl_handler":{"desc":"Set up unparsed entity declaration handler","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"callback $handler"}],"returns":"bool"},"xpath_register_ns":{"desc":"Register the given namespace in the passed XPath context","params":[{"required":"yes","param":"XPathContext $xpath_context"},{"required":"yes","param":"string $prefix"},{"required":"yes","param":"string $uri"}],"returns":"bool"},"xpath_register_ns_auto":{"desc":"Register the given namespace in the passed XPath context","params":[{"required":"yes","param":"XPathContext $xpath_context"},{"required":"no","param":"object $context_node = &#039;&#039;"}],"returns":"bool"},"xslt_set_object":{"desc":"Sets the object in which to resolve callback functions","params":[{"required":"yes","param":"resource $processor"},{"required":"yes","param":"object $obj"}],"returns":"bool"},"yaml_emit_file":{"desc":"Send the YAML representation of a value to a file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $data"},{"required":"no","param":"int $encoding = YAML_ANY_ENCODING"},{"required":"no","param":"int $linebreak = YAML_ANY_BREAK"}],"returns":"bool"},"yaz_ccl_parse":{"desc":"Invoke CCL Parser","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $query"},{"required":"yes","param":"array $result"}],"returns":"bool"},"yaz_close":{"desc":"Close YAZ connection","params":[{"required":"yes","param":"resource $id"}],"returns":"bool"},"yaz_database":{"desc":"Specifies the databases within a session","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $databases"}],"returns":"bool"},"yaz_element":{"desc":"Specifies Element-Set Name for retrieval","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $elementset"}],"returns":"bool"},"yaz_present":{"desc":"Prepares for retrieval (Z39.50 present)","params":[{"required":"yes","param":"resource $id"}],"returns":"bool"},"yaz_search":{"desc":"Prepares for a search","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $query"}],"returns":"bool"},"zip_entry_close":{"desc":"Close a directory entry","params":[{"required":"yes","param":"resource $zip_entry"}],"returns":"bool"},"zip_entry_open":{"desc":"Open a directory entry for reading","params":[{"required":"yes","param":"resource $zip"},{"required":"yes","param":"resource $zip_entry"},{"required":"no","param":"string $mode = &#039;&#039;"}],"returns":"bool"},"acos":{"desc":"Arc cosine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"acosh":{"desc":"Inverse hyperbolic cosine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"asin":{"desc":"Arc sine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"asinh":{"desc":"Inverse hyperbolic sine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"atan":{"desc":"Arc tangent","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"atan2":{"desc":"Arc tangent of two variables","params":[{"required":"yes","param":"float $y"},{"required":"yes","param":"float $x"}],"returns":"float"},"atanh":{"desc":"Inverse hyperbolic tangent","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"bindec":{"desc":"Binary to decimal","params":[{"required":"yes","param":"string $binary_string"}],"returns":"float"},"cairo_get_line_width":{"desc":"The getLineWidth purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"float"},"cairo_get_miter_limit":{"desc":"The getMiterLimit purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"float"},"cairo_get_tolerance":{"desc":"The getTolerance purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"float"},"ceil":{"desc":"Round fractions up","params":[{"required":"yes","param":"float $value"}],"returns":"float"},"cos":{"desc":"Cosine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"cosh":{"desc":"Hyperbolic cosine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"deg2rad":{"desc":"Converts the number in degrees to the radian equivalent","params":[{"required":"yes","param":"float $number"}],"returns":"float"},"disk_free_space":{"desc":"Returns available space on filesystem or disk partition","params":[{"required":"yes","param":"string $directory"}],"returns":"float"},"disk_total_space":{"desc":"Returns the total size of a filesystem or disk partition","params":[{"required":"yes","param":"string $directory"}],"returns":"float"},"exp":{"desc":"Calculates the exponent of e","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"expm1":{"desc":"Returns exp(number) - 1, computed in a way that is accurate even   when the value of number is close to zero","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"floatval":{"desc":"Get float value of a variable","params":[{"required":"yes","param":"mixed $var"}],"returns":"float"},"floor":{"desc":"Round fractions down","params":[{"required":"yes","param":"float $value"}],"returns":"float"},"fmod":{"desc":"Returns the floating point remainder (modulo) of the division  of the arguments","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"float"},"hypot":{"desc":"Calculate the length of the hypotenuse of a right-angle triangle","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"float"},"lcg_value":{"desc":"Combined linear congruential generator","params":[],"returns":"float"},"log":{"desc":"Natural logarithm","params":[{"required":"yes","param":"float $arg"},{"required":"no","param":"float $base = M_E"}],"returns":"float"},"log1p":{"desc":"Returns log(1 + number), computed in a way that is accurate even when   the value of number is close to zero","params":[{"required":"yes","param":"float $number"}],"returns":"float"},"log10":{"desc":"Base-10 logarithm","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"notes_version":{"desc":"Get the version Lotus Notes","params":[{"required":"yes","param":"string $database_name"}],"returns":"float"},"numfmt_parse_currency":{"desc":"Parse a currency number","params":[{"required":"yes","param":"string $value"},{"required":"yes","param":"string $currency"},{"required":"no","param":"int $position = &#039;&#039;"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"float"},"PDF_get_pdi_value":{"desc":"Get PDI numerical parameter [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"int $reserved"}],"returns":"float"},"PDF_get_value":{"desc":"Get numerical parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"float $modifier"}],"returns":"float"},"PDF_info_font":{"desc":"Query detailed information about a loaded font","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $font"},{"required":"yes","param":"string $keyword"},{"required":"yes","param":"string $optlist"}],"returns":"float"},"PDF_info_matchbox":{"desc":"Query matchbox information","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $boxname"},{"required":"yes","param":"int $num"},{"required":"yes","param":"string $keyword"}],"returns":"float"},"PDF_info_table":{"desc":"Retrieve table information","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $table"},{"required":"yes","param":"string $keyword"}],"returns":"float"},"PDF_info_textflow":{"desc":"Query textflow state","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $textflow"},{"required":"yes","param":"string $keyword"}],"returns":"float"},"PDF_info_textline":{"desc":"Perform textline formatting and query metrics","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $keyword"},{"required":"yes","param":"string $optlist"}],"returns":"float"},"PDF_pcos_get_number":{"desc":"Get value of pCOS path with type number or boolean","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"string $path"}],"returns":"float"},"PDF_stringwidth":{"desc":"Return width of text","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $font"},{"required":"yes","param":"float $fontsize"}],"returns":"float"},"pi":{"desc":"Get value of pi","params":[],"returns":"float"},"pow":{"desc":"Exponential expression","params":[{"required":"yes","param":"number $base"},{"required":"yes","param":"number $exp"}],"returns":"float"},"ps_get_value":{"desc":"Gets certain values","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $name"},{"required":"no","param":"float $modifier = &#039;&#039;"}],"returns":"float"},"ps_stringwidth":{"desc":"Gets width of a string","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"no","param":"int $fontid = &#039;&#039;"},{"required":"no","param":"float $size = 0.0"}],"returns":"float"},"ps_symbol_width":{"desc":"Gets width of a glyph","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $ord"},{"required":"no","param":"int $fontid = &#039;&#039;"},{"required":"no","param":"float $size = 0.0"}],"returns":"float"},"px_get_value":{"desc":"Gets a value","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $name"}],"returns":"float"},"rad2deg":{"desc":"Converts the radian number to the equivalent number in degrees","params":[{"required":"yes","param":"float $number"}],"returns":"float"},"round":{"desc":"Rounds a float","params":[{"required":"yes","param":"float $val"},{"required":"no","param":"int $precision = &#039;&#039;"},{"required":"no","param":"int $mode = PHP_ROUND_HALF_UP"}],"returns":"float"},"sin":{"desc":"Sine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"sinh":{"desc":"Hyperbolic sine","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"sqrt":{"desc":"Square root","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"stats_absolute_deviation":{"desc":"Returns the absolute deviation of an array of values","params":[{"required":"yes","param":"array $a"}],"returns":"float"},"stats_cdf_beta":{"desc":"CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_binomial":{"desc":"Calculates any one parameter of the binomial distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_cauchy":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_chisquare":{"desc":"Calculates any one parameter of the chi-square distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_exponential":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_f":{"desc":"Calculates any one parameter of the F distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_gamma":{"desc":"Calculates any one parameter of the gamma distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_laplace":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_logistic":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_negative_binomial":{"desc":"Calculates any one parameter of the negative binomial distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_noncentral_chisquare":{"desc":"Calculates any one parameter of the non-central chi-square distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_noncentral_f":{"desc":"Calculates any one parameter of the Non-central F distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"float $par4"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_poisson":{"desc":"Calculates any one parameter of the Poisson distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_t":{"desc":"Calculates any one parameter of the T distribution given values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_uniform":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_cdf_weibull":{"desc":"Not documented","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_covariance":{"desc":"Computes the covariance of two data sets","params":[{"required":"yes","param":"array $a"},{"required":"yes","param":"array $b"}],"returns":"float"},"stats_dens_beta":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"}],"returns":"float"},"stats_dens_cauchy":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $ave"},{"required":"yes","param":"float $stdev"}],"returns":"float"},"stats_dens_chisquare":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $dfr"}],"returns":"float"},"stats_dens_exponential":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $scale"}],"returns":"float"},"stats_dens_f":{"desc":"","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $dfr1"},{"required":"yes","param":"float $dfr2"}],"returns":"float"},"stats_dens_gamma":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $shape"},{"required":"yes","param":"float $scale"}],"returns":"float"},"stats_dens_laplace":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $ave"},{"required":"yes","param":"float $stdev"}],"returns":"float"},"stats_dens_logistic":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $ave"},{"required":"yes","param":"float $stdev"}],"returns":"float"},"stats_dens_negative_binomial":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $n"},{"required":"yes","param":"float $pi"}],"returns":"float"},"stats_dens_normal":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $ave"},{"required":"yes","param":"float $stdev"}],"returns":"float"},"stats_dens_pmf_binomial":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $n"},{"required":"yes","param":"float $pi"}],"returns":"float"},"stats_dens_pmf_hypergeometric":{"desc":"","params":[{"required":"yes","param":"float $n1"},{"required":"yes","param":"float $n2"},{"required":"yes","param":"float $N1"},{"required":"yes","param":"float $N2"}],"returns":"float"},"stats_dens_pmf_poisson":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $lb"}],"returns":"float"},"stats_dens_t":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $dfr"}],"returns":"float"},"stats_dens_weibull":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"}],"returns":"float"},"stats_den_uniform":{"desc":"Not documented","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"}],"returns":"float"},"stats_kurtosis":{"desc":"Computes the kurtosis of the data in the array","params":[{"required":"yes","param":"array $a"}],"returns":"float"},"stats_rand_gen_beta":{"desc":"Generates beta random deviate","params":[{"required":"yes","param":"float $a"},{"required":"yes","param":"float $b"}],"returns":"float"},"stats_rand_gen_chisquare":{"desc":"Generates random deviate from the distribution of a chisquare with &quot;df&quot; degrees of freedom random variable.","params":[{"required":"yes","param":"float $df"}],"returns":"float"},"stats_rand_gen_exponential":{"desc":"Generates a single random deviate from an exponential distribution with mean &quot;av&quot;","params":[{"required":"yes","param":"float $av"}],"returns":"float"},"stats_rand_gen_f":{"desc":"Generates a random deviate","params":[{"required":"yes","param":"float $dfn"},{"required":"yes","param":"float $dfd"}],"returns":"float"},"stats_rand_gen_funiform":{"desc":"Generates uniform float between low (exclusive) and high (exclusive)","params":[{"required":"yes","param":"float $low"},{"required":"yes","param":"float $high"}],"returns":"float"},"stats_rand_gen_gamma":{"desc":"Generates random deviates from a gamma distribution","params":[{"required":"yes","param":"float $a"},{"required":"yes","param":"float $r"}],"returns":"float"},"stats_rand_gen_noncenral_chisquare":{"desc":"Generates random deviate from the distribution of a noncentral chisquare with &quot;df&quot; degrees of freedom and noncentrality parameter &quot;xnonc&quot;. d must be &gt;= 1.0, xnonc must &gt;= 0.0","params":[{"required":"yes","param":"float $df"},{"required":"yes","param":"float $xnonc"}],"returns":"float"},"stats_rand_gen_noncentral_f":{"desc":"Generates a random deviate from the noncentral F (variance ratio) distribution with &quot;dfn&quot; degrees of freedom in the numerator, and &quot;dfd&quot; degrees of freedom in the denominator, and noncentrality parameter &quot;xnonc&quot;. Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.","params":[{"required":"yes","param":"float $dfn"},{"required":"yes","param":"float $dfd"},{"required":"yes","param":"float $xnonc"}],"returns":"float"},"stats_rand_gen_noncentral_t":{"desc":"Generates a single random deviate from a noncentral T distribution","params":[{"required":"yes","param":"float $df"},{"required":"yes","param":"float $xnonc"}],"returns":"float"},"stats_rand_gen_normal":{"desc":"Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd &gt;= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.","params":[{"required":"yes","param":"float $av"},{"required":"yes","param":"float $sd"}],"returns":"float"},"stats_rand_gen_t":{"desc":"Generates a single random deviate from a T distribution","params":[{"required":"yes","param":"float $df"}],"returns":"float"},"stats_rand_ranf":{"desc":"Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator","params":[],"returns":"float"},"stats_skew":{"desc":"Computes the skewness of the data in the array","params":[{"required":"yes","param":"array $a"}],"returns":"float"},"stats_standard_deviation":{"desc":"Returns the standard deviation","params":[{"required":"yes","param":"array $a"},{"required":"no","param":"bool $sample = false"}],"returns":"float"},"stats_stat_binomial_coef":{"desc":"Not documented","params":[{"required":"yes","param":"int $x"},{"required":"yes","param":"int $n"}],"returns":"float"},"stats_stat_correlation":{"desc":"Not documented","params":[{"required":"yes","param":"array $arr1"},{"required":"yes","param":"array $arr2"}],"returns":"float"},"stats_stat_gennch":{"desc":"Not documented","params":[{"required":"yes","param":"int $n"}],"returns":"float"},"stats_stat_independent_t":{"desc":"Not documented","params":[{"required":"yes","param":"array $arr1"},{"required":"yes","param":"array $arr2"}],"returns":"float"},"stats_stat_innerproduct":{"desc":"","params":[{"required":"yes","param":"array $arr1"},{"required":"yes","param":"array $arr2"}],"returns":"float"},"stats_stat_noncentral_t":{"desc":"Calculates any one parameter of the noncentral t distribution give values for the others.","params":[{"required":"yes","param":"float $par1"},{"required":"yes","param":"float $par2"},{"required":"yes","param":"float $par3"},{"required":"yes","param":"int $which"}],"returns":"float"},"stats_stat_paired_t":{"desc":"Not documented","params":[{"required":"yes","param":"array $arr1"},{"required":"yes","param":"array $arr2"}],"returns":"float"},"stats_stat_percentile":{"desc":"Not documented","params":[{"required":"yes","param":"float $df"},{"required":"yes","param":"float $xnonc"}],"returns":"float"},"stats_stat_powersum":{"desc":"Not documented","params":[{"required":"yes","param":"array $arr"},{"required":"yes","param":"float $power"}],"returns":"float"},"stats_variance":{"desc":"Returns the population variance","params":[{"required":"yes","param":"array $a"},{"required":"no","param":"bool $sample = false"}],"returns":"float"},"swf_textwidth":{"desc":"Get the width of a string","params":[{"required":"yes","param":"string $str"}],"returns":"float"},"tan":{"desc":"Tangent","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"tanh":{"desc":"Hyperbolic tangent","params":[{"required":"yes","param":"float $arg"}],"returns":"float"},"hw_api_object":{"desc":"Creates a new instance of class hw_api_object","params":[{"required":"yes","param":"array $parameter"}],"returns":"object"},"apc_bin_dumpfile":{"desc":"Output a binary dump of cached files and user variables to a file","params":[{"required":"yes","param":"array $files"},{"required":"yes","param":"array $user_vars"},{"required":"yes","param":"string $filename"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"int"},"apc_dec":{"desc":"Decrease a stored number","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"int $step = 1"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"int"},"apc_inc":{"desc":"Increase a stored number","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"int $step = 1"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"int"},"array_push":{"desc":"Push one or more elements onto the end of array","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"mixed $var"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"array_unshift":{"desc":"Prepend one or more elements to the beginning of an array","params":[{"required":"yes","param":"array $array"},{"required":"yes","param":"mixed $var"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"bccomp":{"desc":"Compare two arbitrary precision numbers","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"int"},"bzclose":{"desc":"Close a bzip2 file","params":[{"required":"yes","param":"resource $bz"}],"returns":"int"},"bzerrno":{"desc":"Returns a bzip2 error number","params":[{"required":"yes","param":"resource $bz"}],"returns":"int"},"bzflush":{"desc":"Force a write of all buffered data","params":[{"required":"yes","param":"resource $bz"}],"returns":"int"},"bzwrite":{"desc":"Binary safe bzip2 file write","params":[{"required":"yes","param":"resource $bz"},{"required":"yes","param":"string $data"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"cairo_font_face_get_type":{"desc":"Description","params":[{"required":"yes","param":"CairoFontFace $fontface"}],"returns":"int"},"cairo_font_face_status":{"desc":"Check for CairoFontFace errors","params":[{"required":"yes","param":"CairoFontFace $fontface"}],"returns":"int"},"cairo_font_options_get_antialias":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_font_options_get_hint_metrics":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_font_options_get_hint_style":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_font_options_get_subpixel_order":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_font_options_hash":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_font_options_status":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"}],"returns":"int"},"cairo_format_stride_for_width":{"desc":"Description","params":[{"required":"yes","param":"int $format"},{"required":"yes","param":"int $width"}],"returns":"int"},"cairo_get_antialias":{"desc":"The getAntialias purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_get_dash_count":{"desc":"The getDashCount purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_get_fill_rule":{"desc":"The getFillRule purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_get_line_cap":{"desc":"The getLineCap purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_get_line_join":{"desc":"The getLineJoin purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_get_operator":{"desc":"The getOperator purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_image_surface_get_format":{"desc":"Description","params":[{"required":"yes","param":"CairoImageSurface $surface"}],"returns":"int"},"cairo_image_surface_get_height":{"desc":"Description","params":[{"required":"yes","param":"CairoImageSurface $surface"}],"returns":"int"},"cairo_image_surface_get_stride":{"desc":"Description","params":[{"required":"yes","param":"CairoImageSurface $surface"}],"returns":"int"},"cairo_image_surface_get_width":{"desc":"Description","params":[{"required":"yes","param":"CairoImageSurface $surface"}],"returns":"int"},"cairo_pattern_get_color_stop_count":{"desc":"Description","params":[{"required":"yes","param":"CairoGradientPattern $pattern"}],"returns":"int"},"cairo_pattern_get_extend":{"desc":"Description","params":[{"required":"yes","param":"string $pattern"}],"returns":"int"},"cairo_pattern_get_filter":{"desc":"Description","params":[{"required":"yes","param":"CairoSurfacePattern $pattern"}],"returns":"int"},"cairo_pattern_get_type":{"desc":"Description","params":[{"required":"yes","param":"CairoPattern $pattern"}],"returns":"int"},"cairo_pattern_status":{"desc":"Description","params":[{"required":"yes","param":"CairoPattern $pattern"}],"returns":"int"},"cairo_scaled_font_get_type":{"desc":"Description","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"}],"returns":"int"},"cairo_scaled_font_status":{"desc":"Description","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"}],"returns":"int"},"cairo_status":{"desc":"The status purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"int"},"cairo_surface_get_content":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"int"},"cairo_surface_get_type":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"int"},"cairo_surface_status":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"int"},"cairo_version":{"desc":"Retrives cairo&#039;s library version","params":[],"returns":"int"},"cal_days_in_month":{"desc":"Return the number of days in a month for a given year and calendar","params":[{"required":"yes","param":"int $calendar"},{"required":"yes","param":"int $month"},{"required":"yes","param":"int $year"}],"returns":"int"},"cal_to_jd":{"desc":"Converts from a supported calendar to Julian Day Count","params":[{"required":"yes","param":"int $calendar"},{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"int"},"collator_compare":{"desc":"Compare two Unicode strings","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"},{"required":"yes","param":"Collator $coll"}],"returns":"int"},"collator_get_attribute":{"desc":"Get collation attribute value","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"Collator $coll"}],"returns":"int"},"collator_get_error_code":{"desc":"Get collator&#039;s last error code","params":[{"required":"yes","param":"Collator $coll"}],"returns":"int"},"collator_get_strength":{"desc":"Get current collation strength","params":[{"required":"yes","param":"Collator $coll"}],"returns":"int"},"connection_aborted":{"desc":"Check whether client disconnected","params":[],"returns":"int"},"connection_status":{"desc":"Returns connection status bitfield","params":[],"returns":"int"},"connection_timeout":{"desc":"Check if the script timed out","params":[],"returns":"int"},"count":{"desc":"Count all elements in an array, or properties in an object","params":[{"required":"yes","param":"mixed $var"},{"required":"no","param":"int $mode = COUNT_NORMAL"}],"returns":"int"},"crc32":{"desc":"Calculates the crc32 polynomial of a string","params":[{"required":"yes","param":"string $str"}],"returns":"int"},"cubrid_affected_rows":{"desc":"Return the number of rows affected by the last SQL statement","params":[{"required":"no","param":"resource $req_identifier = &#039;&#039;"}],"returns":"int"},"cubrid_close_prepare":{"desc":"Close the request handle","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"int"},"cubrid_col_size":{"desc":"Get the number of elements in collection type column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $attr_name"}],"returns":"int"},"cubrid_data_seek":{"desc":"Move the internal row pointer of the CUBRID result","params":[{"required":"yes","param":"resource $req_identifier"},{"required":"yes","param":"int $row_number"}],"returns":"int"},"cubrid_errno":{"desc":"Return the numerical value of the error message from previous CUBRID operation","params":[{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"int"},"cubrid_error_code":{"desc":"Get error code for the most recent function call","params":[],"returns":"int"},"cubrid_error_code_facility":{"desc":"Get the facility code of error","params":[],"returns":"int"},"cubrid_field_len":{"desc":"Get the maximum length of the specified field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"int"},"cubrid_is_instance":{"desc":"Check whether the instance pointed by OID exists","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"int"},"cubrid_load_from_glo":{"desc":"Read data from a GLO instance and save it in a file","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $file_name"}],"returns":"int"},"cubrid_move_cursor":{"desc":"Move the cursor in the result","params":[{"required":"yes","param":"resource $req_identifier"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $origin = CUBRID_CURSOR_CURRENT"}],"returns":"int"},"cubrid_num_cols":{"desc":"Return the number of columns in the result set","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"int"},"cubrid_num_fields":{"desc":"Return the number of columns in the result set","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"cubrid_num_rows":{"desc":"Get the number of rows in the result set","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"int"},"cubrid_put":{"desc":"Update a column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"no","param":"string $attr = &#039;&#039;"},{"required":"yes","param":"mixed $value"}],"returns":"int"},"cubrid_save_to_glo":{"desc":"Save requested file in a GLO instance","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"yes","param":"string $file_name"}],"returns":"int"},"cubrid_send_glo":{"desc":"Read data from glo and send it to std output","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"int"},"curl_errno":{"desc":"Return the last error number","params":[{"required":"yes","param":"resource $ch"}],"returns":"int"},"curl_multi_add_handle":{"desc":"Add a normal cURL handle to a cURL multi handle","params":[{"required":"yes","param":"resource $mh"},{"required":"yes","param":"resource $ch"}],"returns":"int"},"curl_multi_exec":{"desc":"Run the sub-connections of the current cURL handle","params":[{"required":"yes","param":"resource $mh"},{"required":"yes","param":"int $still_running"}],"returns":"int"},"curl_multi_remove_handle":{"desc":"Remove a multi handle from a set of cURL handles","params":[{"required":"yes","param":"resource $mh"},{"required":"yes","param":"resource $ch"}],"returns":"int"},"curl_multi_select":{"desc":"Wait for activity on any curl_multi connection","params":[{"required":"yes","param":"resource $mh"},{"required":"no","param":"float $timeout = 1.0"}],"returns":"int"},"datefmt_get_calendar":{"desc":"Get the calendar used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"int"},"datefmt_get_datetype":{"desc":"Get the datetype used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"int"},"datefmt_get_error_code":{"desc":"Get the error code from last operation","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"int"},"datefmt_get_timetype":{"desc":"Get the timetype used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"int"},"datefmt_parse":{"desc":"Parse string to a timestamp value","params":[{"required":"yes","param":"string $value"},{"required":"no","param":"int $position = &#039;&#039;"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"int"},"db2_cursor_type":{"desc":"Returns the cursor type used by a statement resource","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"db2_field_display_size":{"desc":"Returns the maximum number of bytes required to display a column","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"int"},"db2_field_num":{"desc":"Returns the position of the named column in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"int"},"db2_field_precision":{"desc":"Returns the precision of the indicated column in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"int"},"db2_field_scale":{"desc":"Returns the scale of the indicated column in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"int"},"db2_field_width":{"desc":"Returns the width of the current value of the indicated column in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"int"},"db2_num_fields":{"desc":"Returns the number of fields contained in a result set","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"dbase_create":{"desc":"Creates a database","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"array $fields"}],"returns":"int"},"dbase_numfields":{"desc":"Gets the number of fields of a database","params":[{"required":"yes","param":"int $dbase_identifier"}],"returns":"int"},"dbase_numrecords":{"desc":"Gets the number of records in a database","params":[{"required":"yes","param":"int $dbase_identifier"}],"returns":"int"},"dbase_open":{"desc":"Opens a database","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $mode"}],"returns":"int"},"dbplus_add":{"desc":"Add a tuple to a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_curr":{"desc":"Get current tuple from relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_errno":{"desc":"Get error code for last operation","params":[],"returns":"int"},"dbplus_find":{"desc":"Set a constraint on a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $constraints"},{"required":"yes","param":"mixed $tuple"}],"returns":"int"},"dbplus_first":{"desc":"Get first tuple from relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_flush":{"desc":"Flush all changes made on a relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_freealllocks":{"desc":"Free all locks held by this client","params":[],"returns":"int"},"dbplus_freelock":{"desc":"Release write lock on tuple","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"string $tuple"}],"returns":"int"},"dbplus_freerlocks":{"desc":"Free all tuple locks on given relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_getlock":{"desc":"Get a write lock on a tuple","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"string $tuple"}],"returns":"int"},"dbplus_getunique":{"desc":"Get an id number unique to a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"int $uniqueid"}],"returns":"int"},"dbplus_info":{"desc":"Get information about a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"string $key"},{"required":"yes","param":"array $result"}],"returns":"int"},"dbplus_last":{"desc":"Get last tuple from relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_lockrel":{"desc":"Request write lock on relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_next":{"desc":"Get next tuple from relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_prev":{"desc":"Get previous tuple from relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_rchperm":{"desc":"Change relation permissions","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"int $mask"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $group"}],"returns":"int"},"dbplus_restorepos":{"desc":"Restore position","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"}],"returns":"int"},"dbplus_rrename":{"desc":"Rename a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"string $name"}],"returns":"int"},"dbplus_runlink":{"desc":"Remove relation from filesystem","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_rzap":{"desc":"Remove all tuples from relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_savepos":{"desc":"Save position","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_setindex":{"desc":"Set index","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"string $idx_name"}],"returns":"int"},"dbplus_setindexbynumber":{"desc":"Set index by number","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"int $idx_number"}],"returns":"int"},"dbplus_tremove":{"desc":"Remove tuple and return new current tuple","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $tuple"},{"required":"no","param":"array $current = &#039;&#039;"}],"returns":"int"},"dbplus_undo":{"desc":"Undo","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_undoprepare":{"desc":"Prepare undo","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_unlockrel":{"desc":"Give up write lock on relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_unselect":{"desc":"Remove a constraint from relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_update":{"desc":"Update specified tuple in relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"array $old"},{"required":"yes","param":"array $new"}],"returns":"int"},"dbplus_xlockrel":{"desc":"Request exclusive lock on relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbplus_xunlockrel":{"desc":"Free exclusive lock on relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"int"},"dbx_close":{"desc":"Close an open connection/database","params":[{"required":"yes","param":"object $link_identifier"}],"returns":"int"},"dbx_compare":{"desc":"Compare two rows for sorting purposes","params":[{"required":"yes","param":"array $row_a"},{"required":"yes","param":"array $row_b"},{"required":"yes","param":"string $column_key"},{"required":"no","param":"int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE"}],"returns":"int"},"dio_seek":{"desc":"Seeks to pos on fd from whence","params":[{"required":"yes","param":"resource $fd"},{"required":"yes","param":"int $pos"},{"required":"no","param":"int $whence = SEEK_SET"}],"returns":"int"},"dio_write":{"desc":"Writes data to fd with optional truncation at length","params":[{"required":"yes","param":"resource $fd"},{"required":"yes","param":"string $data"},{"required":"no","param":"int $len = &#039;&#039;"}],"returns":"int"},"domxml_xslt_version":{"desc":"Gets the XSLT library version","params":[],"returns":"int"},"dotnet_load":{"desc":"Loads a DOTNET module","params":[{"required":"yes","param":"string $assembly_name"},{"required":"no","param":"string $datatype_name = &#039;&#039;"},{"required":"no","param":"int $codepage = &#039;&#039;"}],"returns":"int"},"easter_date":{"desc":"Get Unix timestamp for midnight on Easter of a given year","params":[{"required":"no","param":"int $year = &#039;&#039;"}],"returns":"int"},"easter_days":{"desc":"Get number of days after March 21 on which Easter falls for a given year","params":[{"required":"no","param":"int $year = &#039;&#039;"},{"required":"no","param":"int $method = CAL_EASTER_DEFAULT"}],"returns":"int"},"ereg":{"desc":"Regular expression match","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"array $regs = &#039;&#039;"}],"returns":"int"},"eregi":{"desc":"Case insensitive regular expression match","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"array $regs = &#039;&#039;"}],"returns":"int"},"error_reporting":{"desc":"Sets which PHP errors are reported","params":[{"required":"no","param":"int $level = &#039;&#039;"}],"returns":"int"},"event_base_loop":{"desc":"Handle events","params":[{"required":"yes","param":"resource $event_base"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"int"},"exif_imagetype":{"desc":"Determine the type of an image","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"expect_expectl":{"desc":"Waits until the output from a process matches one  of the patterns, a specified time period has passed, or an EOF is seen","params":[{"required":"yes","param":"resource $expect"},{"required":"yes","param":"array $cases"},{"required":"no","param":"array $match = &#039;&#039;"}],"returns":"int"},"extract":{"desc":"Import variables into the current symbol table from an array","params":[{"required":"yes","param":"array $var_array"},{"required":"no","param":"int $extract_type = EXTR_OVERWRITE"},{"required":"no","param":"string $prefix = &#039;&#039;"}],"returns":"int"},"ezmlm_hash":{"desc":"Calculate the hash value needed by EZMLM","params":[{"required":"yes","param":"string $addr"}],"returns":"int"},"fam_pending":{"desc":"Check for pending FAM events","params":[{"required":"yes","param":"resource $fam"}],"returns":"int"},"fbsql_affected_rows":{"desc":"Get number of affected rows in previous FrontBase operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_blob_size":{"desc":"Get the size of a BLOB","params":[{"required":"yes","param":"string $blob_handle"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_clob_size":{"desc":"Get the size of a CLOB","params":[{"required":"yes","param":"string $clob_handle"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_db_status":{"desc":"Get the status for a given database","params":[{"required":"yes","param":"string $database_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_errno":{"desc":"Returns the error number from previous operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_field_len":{"desc":"Returns the length of the specified field","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"int"},"fbsql_insert_id":{"desc":"Get the id generated from the previous INSERT operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"fbsql_num_fields":{"desc":"Get number of fields in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"fbsql_num_rows":{"desc":"Get number of rows in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"fbsql_rows_fetched":{"desc":"Get the number of rows affected by the last statement","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"fdf_errno":{"desc":"Return error code for last fdf operation","params":[],"returns":"int"},"fdf_get_flags":{"desc":"Gets the flags of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"yes","param":"int $whichflags"}],"returns":"int"},"fileatime":{"desc":"Gets last access time of file","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"filectime":{"desc":"Gets inode change time of file","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"filegroup":{"desc":"Gets file group","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"fileinode":{"desc":"Gets file inode","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"filemtime":{"desc":"Gets file modification time","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"fileowner":{"desc":"Gets file owner","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"fileperms":{"desc":"Gets file permissions","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"filepro_fieldcount":{"desc":"Find out how many fields are in a filePro database","params":[],"returns":"int"},"filepro_fieldwidth":{"desc":"Gets the width of a field","params":[{"required":"yes","param":"int $field_number"}],"returns":"int"},"filepro_rowcount":{"desc":"Find out how many rows are in a filePro database","params":[],"returns":"int"},"filesize":{"desc":"Gets file size","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"file_put_contents":{"desc":"Write a string to a file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"mixed $data"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"int"},"filter_id":{"desc":"Returns the filter ID belonging to a named filter","params":[{"required":"yes","param":"string $filtername"}],"returns":"int"},"fpassthru":{"desc":"Output all remaining data on a file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"int"},"fprintf":{"desc":"Write a formatted string to a stream","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"fputcsv":{"desc":"Format line as CSV and write to file pointer","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"array $fields"},{"required":"no","param":"string $delimiter = &#039;"},{"required":"yes","param":"&#039;"},{"required":"no","param":"string $enclosure = &#039;&quot;&#039;"}],"returns":"int"},"FrenchToJD":{"desc":"Converts a date from the French Republican Calendar to a Julian Day Count","params":[{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"int"},"fseek":{"desc":"Seeks on a file pointer","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $whence = SEEK_SET"}],"returns":"int"},"ftell":{"desc":"Returns the current position of the file read/write pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"int"},"ftok":{"desc":"Convert a pathname and a project identifier to a System V IPC key","params":[{"required":"yes","param":"string $pathname"},{"required":"yes","param":"string $proj"}],"returns":"int"},"ftp_chmod":{"desc":"Set permissions on a file via FTP","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"int $mode"},{"required":"yes","param":"string $filename"}],"returns":"int"},"ftp_mdtm":{"desc":"Returns the last modified time of the given file","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"}],"returns":"int"},"ftp_nb_continue":{"desc":"Continues retrieving/sending a file (non-blocking)","params":[{"required":"yes","param":"resource $ftp_stream"}],"returns":"int"},"ftp_nb_fget":{"desc":"Retrieves a file from the FTP server and writes it to an open file (non-blocking)","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $resumepos = &#039;&#039;"}],"returns":"int"},"ftp_nb_fput":{"desc":"Stores a file from an open file to the FTP server (non-blocking)","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $startpos = &#039;&#039;"}],"returns":"int"},"ftp_nb_get":{"desc":"Retrieves a file from the FTP server and writes it to a local file (non-blocking)","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $local_file"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $resumepos = &#039;&#039;"}],"returns":"int"},"ftp_nb_put":{"desc":"Stores a file on the FTP server (non-blocking)","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"},{"required":"yes","param":"string $local_file"},{"required":"yes","param":"int $mode"},{"required":"no","param":"int $startpos = &#039;&#039;"}],"returns":"int"},"ftp_size":{"desc":"Returns the size of the given file","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $remote_file"}],"returns":"int"},"func_num_args":{"desc":"Returns the number of arguments passed to the function","params":[],"returns":"int"},"fwrite":{"desc":"Binary-safe file write","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"gc_collect_cycles":{"desc":"Forces collection of any existing garbage cycles","params":[],"returns":"int"},"geoip_id_by_name":{"desc":"Get the Internet connection type","params":[{"required":"yes","param":"string $hostname"}],"returns":"int"},"getlastmod":{"desc":"Gets time of last page modification","params":[],"returns":"int"},"getmygid":{"desc":"Get PHP script owner&#039;s GID","params":[],"returns":"int"},"getmyinode":{"desc":"Gets the inode of the current script","params":[],"returns":"int"},"getmypid":{"desc":"Gets PHP&#039;s process ID","params":[],"returns":"int"},"getmyuid":{"desc":"Gets PHP script owner&#039;s UID","params":[],"returns":"int"},"getprotobyname":{"desc":"Get protocol number associated with protocol name","params":[{"required":"yes","param":"string $name"}],"returns":"int"},"getrandmax":{"desc":"Show largest possible random value","params":[],"returns":"int"},"getservbyname":{"desc":"Get port number associated with an Internet service and protocol","params":[{"required":"yes","param":"string $service"},{"required":"yes","param":"string $protocol"}],"returns":"int"},"get_magic_quotes_gpc":{"desc":"Gets the current configuration setting of magic_quotes_gpc","params":[],"returns":"int"},"get_magic_quotes_runtime":{"desc":"Gets the current active configuration setting of magic_quotes_runtime","params":[],"returns":"int"},"gmmktime":{"desc":"Get Unix timestamp for a GMT date","params":[{"required":"no","param":"int $hour = gmdate(&quot;H&quot;)"},{"required":"no","param":"int $minute = gmdate(&quot;i&quot;)"},{"required":"no","param":"int $second = gmdate(&quot;s&quot;)"},{"required":"no","param":"int $month = gmdate(&quot;n&quot;)"},{"required":"no","param":"int $day = gmdate(&quot;j&quot;)"},{"required":"no","param":"int $year = gmdate(&quot;Y&quot;)"},{"required":"no","param":"int $is_dst = -1"}],"returns":"int"},"gmp_cmp":{"desc":"Compare numbers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"int"},"gmp_hamdist":{"desc":"Hamming distance","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"int"},"gmp_intval":{"desc":"Convert GMP number to integer","params":[{"required":"yes","param":"resource $gmpnumber"}],"returns":"int"},"gmp_jacobi":{"desc":"Jacobi symbol","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $p"}],"returns":"int"},"gmp_legendre":{"desc":"Legendre symbol","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $p"}],"returns":"int"},"gmp_popcount":{"desc":"Population count","params":[{"required":"yes","param":"resource $a"}],"returns":"int"},"gmp_prob_prime":{"desc":"Check if number is &quot;probably prime&quot;","params":[{"required":"yes","param":"resource $a"},{"required":"no","param":"int $reps = 10"}],"returns":"int"},"gmp_scan0":{"desc":"Scan for 0","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"int $start"}],"returns":"int"},"gmp_scan1":{"desc":"Scan for 1","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"int $start"}],"returns":"int"},"gmp_sign":{"desc":"Sign of number","params":[{"required":"yes","param":"resource $a"}],"returns":"int"},"gnupg_getprotocol":{"desc":"Returns the currently active protocol for all operations","params":[{"required":"yes","param":"resource $identifier"}],"returns":"int"},"grapheme_stripos":{"desc":"Find position (in grapheme units) of first occurrence of a case-insensitive string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"grapheme_strlen":{"desc":"Get string length in grapheme units","params":[{"required":"yes","param":"string $input"}],"returns":"int"},"grapheme_strpos":{"desc":"Find position (in grapheme units) of first occurrence of a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"grapheme_strripos":{"desc":"Find position (in grapheme units) of last occurrence of a case-insensitive string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"grapheme_strrpos":{"desc":"Find position (in grapheme units) of last occurrence of a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"grapheme_substr":{"desc":"Return part of a string","params":[{"required":"yes","param":"string $string"},{"required":"yes","param":"int $start"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"GregorianToJD":{"desc":"Converts a Gregorian date to Julian Day Count","params":[{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"int"},"gupnp_context_get_port":{"desc":"Get the port","params":[{"required":"yes","param":"resource $context"}],"returns":"int"},"gupnp_context_get_subscription_timeout":{"desc":"Get the event subscription timeout","params":[{"required":"yes","param":"resource $context"}],"returns":"int"},"gzeof":{"desc":"Test for EOF on a gz-file pointer","params":[{"required":"yes","param":"resource $zp"}],"returns":"int"},"gzpassthru":{"desc":"Output all remaining data on a gz-file pointer","params":[{"required":"yes","param":"resource $zp"}],"returns":"int"},"gzseek":{"desc":"Seek on a gz-file pointer","params":[{"required":"yes","param":"resource $zp"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $whence = SEEK_SET"}],"returns":"int"},"gztell":{"desc":"Tell gz-file pointer read/write position","params":[{"required":"yes","param":"resource $zp"}],"returns":"int"},"gzwrite":{"desc":"Binary-safe gz-file write","params":[{"required":"yes","param":"resource $zp"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"hash_update_stream":{"desc":"Pump data into an active hashing context from an open stream","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"resource $handle"},{"required":"no","param":"int $length = -1"}],"returns":"int"},"http_request_method_exists":{"desc":"Check whether request method exists","params":[{"required":"yes","param":"mixed $method"}],"returns":"int"},"http_request_method_register":{"desc":"Register request method","params":[{"required":"yes","param":"string $method"}],"returns":"int"},"http_support":{"desc":"Check built-in HTTP support","params":[{"required":"no","param":"int $feature = &#039;&#039;"}],"returns":"int"},"hw_Connect":{"desc":"Opens a connection","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"yes","param":"string $password"}],"returns":"int"},"hw_cp":{"desc":"Copies objects","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"array $object_id_array"},{"required":"yes","param":"int $destination_id"}],"returns":"int"},"hw_DocByAnchor":{"desc":"Object id object belonging to anchor","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $anchorID"}],"returns":"int"},"hw_Document_Size":{"desc":"Size of hw_document","params":[{"required":"yes","param":"int $hw_document"}],"returns":"int"},"hw_Error":{"desc":"Error number","params":[{"required":"yes","param":"int $connection"}],"returns":"int"},"hw_GetRemote":{"desc":"Gets a remote document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"int"},"hw_GetText":{"desc":"Retrieve text document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"},{"required":"no","param":"mixed $rootID/prefix = &#039;&#039;"}],"returns":"int"},"hw_InsColl":{"desc":"Insert collection","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"},{"required":"yes","param":"array $object_array"}],"returns":"int"},"hw_InsDoc":{"desc":"Insert document","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"int $parentID"},{"required":"yes","param":"string $object_record"},{"required":"no","param":"string $text = &#039;&#039;"}],"returns":"int"},"hw_InsertDocument":{"desc":"Upload any document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $parent_id"},{"required":"yes","param":"int $hw_document"}],"returns":"int"},"hw_InsertObject":{"desc":"Inserts an object record","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"string $object_rec"},{"required":"yes","param":"string $parameter"}],"returns":"int"},"hw_mapid":{"desc":"Maps global id on virtual local id","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $server_id"},{"required":"yes","param":"int $object_id"}],"returns":"int"},"hw_mv":{"desc":"Moves objects","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"array $object_id_array"},{"required":"yes","param":"int $source_id"},{"required":"yes","param":"int $destination_id"}],"returns":"int"},"hw_New_Document":{"desc":"Create new document","params":[{"required":"yes","param":"string $object_record"},{"required":"yes","param":"string $document_data"},{"required":"yes","param":"int $document_size"}],"returns":"int"},"hw_pConnect":{"desc":"Make a persistent database connection","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"yes","param":"string $password"}],"returns":"int"},"hw_PipeDocument":{"desc":"Retrieve any document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"},{"required":"no","param":"array $url_prefixes = &#039;&#039;"}],"returns":"int"},"hw_Root":{"desc":"Root object id","params":[],"returns":"int"},"hw_setlinkroot":{"desc":"Set the id to which links are calculated","params":[{"required":"yes","param":"int $link"},{"required":"yes","param":"int $rootid"}],"returns":"int"},"ibase_affected_rows":{"desc":"Return the number of rows that were affected by the previous query","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"ibase_errcode":{"desc":"Return an error code","params":[],"returns":"int"},"ibase_num_fields":{"desc":"Get the number of fields in a result set","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"ibase_num_params":{"desc":"Return the number of parameters in a prepared query","params":[{"required":"yes","param":"resource $query"}],"returns":"int"},"iconv_strlen":{"desc":"Returns the character count of string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"int"},"iconv_strpos":{"desc":"Finds position of first occurrence of a needle within a haystack","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"int"},"iconv_strrpos":{"desc":"Finds the last occurrence of a needle within a haystack","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"int"},"id3_get_genre_id":{"desc":"Get the id for a genre","params":[{"required":"yes","param":"string $genre"}],"returns":"int"},"id3_get_version":{"desc":"Get version of an ID3 tag","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"idate":{"desc":"Format a local time/date as integer","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $timestamp = time("}],"returns":"int"},"ifxus_create_slob":{"desc":"Creates an slob object and opens it","params":[{"required":"yes","param":"int $mode"}],"returns":"int"},"ifxus_open_slob":{"desc":"Opens an slob object","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"int $mode"}],"returns":"int"},"ifxus_seek_slob":{"desc":"Sets the current file or seek position","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"int $mode"},{"required":"yes","param":"int $offset"}],"returns":"int"},"ifxus_tell_slob":{"desc":"Returns the current file or seek position","params":[{"required":"yes","param":"int $bid"}],"returns":"int"},"ifxus_write_slob":{"desc":"Writes a string into the slob object","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"string $content"}],"returns":"int"},"ifx_affected_rows":{"desc":"Get number of rows affected by a query","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"ifx_copy_blob":{"desc":"Duplicates the given blob object","params":[{"required":"yes","param":"int $bid"}],"returns":"int"},"ifx_create_blob":{"desc":"Creates an blob object","params":[{"required":"yes","param":"int $type"},{"required":"yes","param":"int $mode"},{"required":"yes","param":"string $param"}],"returns":"int"},"ifx_create_char":{"desc":"Creates an char object","params":[{"required":"yes","param":"string $param"}],"returns":"int"},"ifx_htmltbl_result":{"desc":"Formats all rows of a query into a HTML table","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"string $html_table_options = &#039;&#039;"}],"returns":"int"},"ifx_num_fields":{"desc":"Returns the number of columns in the query","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"ifx_num_rows":{"desc":"Count the rows already fetched from a query","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"ignore_user_abort":{"desc":"Set whether a client disconnect should abort script execution","params":[{"required":"no","param":"string $value = &#039;&#039;"}],"returns":"int"},"iis_add_server":{"desc":"Creates a new virtual web server","params":[{"required":"yes","param":"string $path"},{"required":"yes","param":"string $comment"},{"required":"yes","param":"string $server_ip"},{"required":"yes","param":"int $port"},{"required":"yes","param":"string $host_name"},{"required":"yes","param":"int $rights"},{"required":"yes","param":"int $start_server"}],"returns":"int"},"iis_get_dir_security":{"desc":"Gets Directory Security","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"}],"returns":"int"},"iis_get_server_by_comment":{"desc":"Return the instance number associated with the Comment","params":[{"required":"yes","param":"string $comment"}],"returns":"int"},"iis_get_server_by_path":{"desc":"Return the instance number associated with the Path","params":[{"required":"yes","param":"string $path"}],"returns":"int"},"iis_get_server_rights":{"desc":"Gets server rights","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"}],"returns":"int"},"iis_get_service_state":{"desc":"Returns the state for the service defined by ServiceId","params":[{"required":"yes","param":"string $service_id"}],"returns":"int"},"iis_remove_server":{"desc":"Removes the virtual web server indicated by ServerInstance","params":[{"required":"yes","param":"int $server_instance"}],"returns":"int"},"iis_set_app_settings":{"desc":"Creates application scope for a virtual directory","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"},{"required":"yes","param":"string $application_scope"}],"returns":"int"},"iis_set_dir_security":{"desc":"Sets Directory Security","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"},{"required":"yes","param":"int $directory_flags"}],"returns":"int"},"iis_set_script_map":{"desc":"Sets script mapping on a virtual directory","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"},{"required":"yes","param":"string $script_extension"},{"required":"yes","param":"string $engine_path"},{"required":"yes","param":"int $allow_scripting"}],"returns":"int"},"iis_set_server_rights":{"desc":"Sets server rights","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"},{"required":"yes","param":"int $directory_flags"}],"returns":"int"},"iis_start_server":{"desc":"Starts the virtual web server","params":[{"required":"yes","param":"int $server_instance"}],"returns":"int"},"iis_start_service":{"desc":"Starts the service defined by ServiceId","params":[{"required":"yes","param":"string $service_id"}],"returns":"int"},"iis_stop_server":{"desc":"Stops the virtual web server","params":[{"required":"yes","param":"int $server_instance"}],"returns":"int"},"iis_stop_service":{"desc":"Stops the service defined by ServiceId","params":[{"required":"yes","param":"string $service_id"}],"returns":"int"},"imagecolorallocate":{"desc":"Allocate a color for an image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"}],"returns":"int"},"imagecolorallocatealpha":{"desc":"Allocate a color for an image","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"},{"required":"yes","param":"int $alpha"}],"returns":"int"},"imagecolorat":{"desc":"Get the index of the color of a pixel","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"}],"returns":"int"},"imagecolorclosest":{"desc":"Get the index of the closest color to the specified color","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"}],"returns":"int"},"imagecolorclosestalpha":{"desc":"Get the index of the closest color to the specified color + alpha","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"},{"required":"yes","param":"int $alpha"}],"returns":"int"},"imagecolorclosesthwb":{"desc":"Get the index of the color which has the hue, white and blackness","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"}],"returns":"int"},"imagecolorexact":{"desc":"Get the index of the specified color","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"}],"returns":"int"},"imagecolorexactalpha":{"desc":"Get the index of the specified color + alpha","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"},{"required":"yes","param":"int $alpha"}],"returns":"int"},"imagecolorresolve":{"desc":"Get the index of the specified color or its closest possible alternative","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"}],"returns":"int"},"imagecolorresolvealpha":{"desc":"Get the index of the specified color + alpha or its closest possible alternative","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"},{"required":"yes","param":"int $alpha"}],"returns":"int"},"imagecolorstotal":{"desc":"Find out the number of colors in an image&#039;s palette","params":[{"required":"yes","param":"resource $image"}],"returns":"int"},"imagecolortransparent":{"desc":"Define a color as transparent","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"int $color = &#039;&#039;"}],"returns":"int"},"imagefontheight":{"desc":"Get font height","params":[{"required":"yes","param":"int $font"}],"returns":"int"},"imagefontwidth":{"desc":"Get font width","params":[{"required":"yes","param":"int $font"}],"returns":"int"},"imageinterlace":{"desc":"Enable or disable interlace","params":[{"required":"yes","param":"resource $image"},{"required":"no","param":"int $interlace = &#039;&#039;"}],"returns":"int"},"imageloadfont":{"desc":"Load a new font","params":[{"required":"yes","param":"string $file"}],"returns":"int"},"imagesx":{"desc":"Get image width","params":[{"required":"yes","param":"resource $image"}],"returns":"int"},"imagesy":{"desc":"Get image height","params":[{"required":"yes","param":"resource $image"}],"returns":"int"},"imagetypes":{"desc":"Return the image types supported by this PHP build","params":[],"returns":"int"},"imap_msgno":{"desc":"Gets the message sequence number for the given UID","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $uid"}],"returns":"int"},"imap_num_msg":{"desc":"Gets the number of messages in the current mailbox","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"int"},"imap_num_recent":{"desc":"Gets the number of recent messages in current mailbox","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"int"},"imap_uid":{"desc":"This function returns the UID for the given message sequence number","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"}],"returns":"int"},"ingres_errno":{"desc":"Get the last Ingres error number generated","params":[{"required":"no","param":"resource $link = &#039;&#039;"}],"returns":"int"},"ingres_fetch_proc_return":{"desc":"Get the return value from a procedure call","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"ingres_field_length":{"desc":"Get the length of a field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"int"},"ingres_field_precision":{"desc":"Get the precision of a field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"int"},"ingres_field_scale":{"desc":"Get the scale of a field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"int"},"ingres_num_fields":{"desc":"Get the number of fields returned by the last query","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"ingres_num_rows":{"desc":"Get the number of rows affected or returned by a query","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"inotify_add_watch":{"desc":"Add a watch to an initialized inotify instance","params":[{"required":"yes","param":"resource $inotify_instance"},{"required":"yes","param":"string $pathname"},{"required":"yes","param":"int $mask"}],"returns":"int"},"inotify_queue_len":{"desc":"Return a number upper than zero if there are pending events","params":[{"required":"yes","param":"resource $inotify_instance"}],"returns":"int"},"intl_get_error_code":{"desc":"Get the last error code","params":[],"returns":"int"},"ip2long":{"desc":"Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address","params":[{"required":"yes","param":"string $ip_address"}],"returns":"int"},"iterator_apply":{"desc":"Call a function for every element in an iterator","params":[{"required":"yes","param":"Traversable $iterator"},{"required":"yes","param":"callback $function"},{"required":"no","param":"array $args = &#039;&#039;"}],"returns":"int"},"iterator_count":{"desc":"Count the elements in an iterator","params":[{"required":"yes","param":"Traversable $iterator"}],"returns":"int"},"jdtounix":{"desc":"Convert Julian Day to Unix timestamp","params":[{"required":"yes","param":"int $jday"}],"returns":"int"},"JewishToJD":{"desc":"Converts a date in the Jewish Calendar to Julian Day Count","params":[{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"int"},"json_last_error":{"desc":"Returns the last error occurred","params":[],"returns":"int"},"judy_type":{"desc":"Return the type of a Judy array","params":[{"required":"yes","param":"Judy $array"}],"returns":"int"},"JulianToJD":{"desc":"Converts a Julian Calendar date to Julian Day Count","params":[{"required":"yes","param":"int $month"},{"required":"yes","param":"int $day"},{"required":"yes","param":"int $year"}],"returns":"int"},"ldap_count_entries":{"desc":"Count the number of entries in a search","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_identifier"}],"returns":"int"},"ldap_errno":{"desc":"Return the LDAP error number of the last LDAP command","params":[{"required":"yes","param":"resource $link_identifier"}],"returns":"int"},"levenshtein":{"desc":"Calculate Levenshtein distance between two strings","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"},{"required":"yes","param":"int $cost_ins"},{"required":"yes","param":"int $cost_rep"},{"required":"yes","param":"int $cost_del"}],"returns":"int"},"linkinfo":{"desc":"Gets information about a link","params":[{"required":"yes","param":"string $path"}],"returns":"int"},"lzf_optimized_for":{"desc":"Determines what LZF extension was optimized for","params":[],"returns":"int"},"maxdb_affected_rows":{"desc":"Gets the number of affected rows in a previous MaxDB operation","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_connect_errno":{"desc":"Returns the error code from last connect call","params":[],"returns":"int"},"maxdb_errno":{"desc":"Returns the error code for the most recent function call","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_field_count":{"desc":"Returns the number of columns for the most recent query","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_field_tell":{"desc":"Get current field offset of a result pointer","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"maxdb_get_client_version":{"desc":"Get MaxDB client info","params":[],"returns":"int"},"maxdb_get_server_version":{"desc":"Returns the version of the MaxDB server as an integer","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_num_fields":{"desc":"Get the number of fields in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"maxdb_num_rows":{"desc":"Gets the number of rows in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"maxdb_rpl_parse_enabled":{"desc":"Check if RPL parse is enabled","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_rpl_query_type":{"desc":"Returns RPL query type","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_stmt_affected_rows":{"desc":"Returns the total number of rows changed, deleted, or  inserted by the last executed statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"maxdb_stmt_errno":{"desc":"Returns the error code for the most recent statement call","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"maxdb_stmt_num_rows":{"desc":"Return the number of rows in statements result set","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"maxdb_stmt_param_count":{"desc":"Returns the number of parameter for the given statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"int"},"maxdb_thread_id":{"desc":"Returns the thread ID for the current connection","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"maxdb_warning_count":{"desc":"Returns the number of warnings from the last query for the given link","params":[{"required":"yes","param":"resource $link"}],"returns":"int"},"mb_ereg":{"desc":"Regular expression match with multibyte support","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"array $regs = &#039;&#039;"}],"returns":"int"},"mb_eregi":{"desc":"Regular expression match ignoring case with multibyte support","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $string"},{"required":"no","param":"array $regs = &#039;&#039;"}],"returns":"int"},"mb_ereg_search_getpos":{"desc":"Returns start point for next regular expression match","params":[],"returns":"int"},"mb_stripos":{"desc":"Finds position of first occurrence of a string within another, case insensitive","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"int"},"mb_strripos":{"desc":"Finds position of last occurrence of a string within another, case insensitive","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"int"},"mb_strrpos":{"desc":"Find position of last occurrence of a string in a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"int"},"mcrypt_enc_get_block_size":{"desc":"Returns the blocksize of the opened algorithm","params":[{"required":"yes","param":"resource $td"}],"returns":"int"},"mcrypt_enc_get_iv_size":{"desc":"Returns the size of the IV of the opened algorithm","params":[{"required":"yes","param":"resource $td"}],"returns":"int"},"mcrypt_enc_get_key_size":{"desc":"Returns the maximum supported keysize of the opened mode","params":[{"required":"yes","param":"resource $td"}],"returns":"int"},"mcrypt_enc_self_test":{"desc":"Runs a self test on the opened module","params":[{"required":"yes","param":"resource $td"}],"returns":"int"},"mcrypt_generic_init":{"desc":"This function initializes all buffers needed for encryption","params":[{"required":"yes","param":"resource $td"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $iv"}],"returns":"int"},"mcrypt_get_block_size":{"desc":"Gets the block size of the specified cipher","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $module"}],"returns":"int"},"mcrypt_get_iv_size":{"desc":"Returns the size of the IV belonging to a specific cipher/mode combination","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $mode"}],"returns":"int"},"mcrypt_get_key_size":{"desc":"Gets the key size of the specified cipher","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $module"}],"returns":"int"},"mcrypt_module_get_algo_block_size":{"desc":"Returns the blocksize of the specified algorithm","params":[{"required":"yes","param":"string $algorithm"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"int"},"mcrypt_module_get_algo_key_size":{"desc":"Returns the maximum supported keysize of the opened mode","params":[{"required":"yes","param":"string $algorithm"},{"required":"no","param":"string $lib_dir = &#039;&#039;"}],"returns":"int"},"memory_get_peak_usage":{"desc":"Returns the peak of memory allocated by PHP","params":[{"required":"no","param":"bool $real_usage = false"}],"returns":"int"},"memory_get_usage":{"desc":"Returns the amount of memory allocated to PHP","params":[{"required":"no","param":"bool $real_usage = false"}],"returns":"int"},"mhash_count":{"desc":"Gets the highest available hash ID","params":[],"returns":"int"},"mhash_get_block_size":{"desc":"Gets the block size of the specified hash","params":[{"required":"yes","param":"int $hash"}],"returns":"int"},"ming_keypress":{"desc":"Returns the action flag for keyPress(char)","params":[{"required":"yes","param":"string $char"}],"returns":"int"},"mktime":{"desc":"Get Unix timestamp for a date","params":[{"required":"no","param":"int $hour = date(&quot;H&quot;)"},{"required":"no","param":"int $minute = date(&quot;i&quot;)"},{"required":"no","param":"int $second = date(&quot;s&quot;)"},{"required":"no","param":"int $month = date(&quot;n&quot;)"},{"required":"no","param":"int $day = date(&quot;j&quot;)"},{"required":"no","param":"int $year = date(&quot;Y&quot;)"},{"required":"no","param":"int $is_dst = -1"}],"returns":"int"},"msession_count":{"desc":"Get session count","params":[],"returns":"int"},"msession_lock":{"desc":"Lock a session","params":[{"required":"yes","param":"string $name"}],"returns":"int"},"msession_timeout":{"desc":"Set/get session timeout","params":[{"required":"yes","param":"string $session"},{"required":"no","param":"int $param = &#039;&#039;"}],"returns":"int"},"msession_unlock":{"desc":"Unlock a session","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"int $key"}],"returns":"int"},"msgfmt_get_error_code":{"desc":"Get the error code from last operation","params":[{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"int"},"msql_affected_rows":{"desc":"Returns number of affected rows","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"msql_field_len":{"desc":"Get field length","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"int"},"msql_field_table":{"desc":"Get table name for field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"int"},"msql_num_fields":{"desc":"Get number of fields in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"msql_num_rows":{"desc":"Get number of rows in result","params":[{"required":"yes","param":"resource $query_identifier"}],"returns":"int"},"mssql_fetch_batch":{"desc":"Returns the next batch of records","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"mssql_field_length":{"desc":"Get the length of a field","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $offset = -1"}],"returns":"int"},"mssql_num_fields":{"desc":"Gets the number of fields in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"mssql_num_rows":{"desc":"Gets the number of rows in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"mssql_rows_affected":{"desc":"Returns the number of records affected by the query","params":[{"required":"yes","param":"resource $link_identifier"}],"returns":"int"},"mt_getrandmax":{"desc":"Show largest possible random value","params":[],"returns":"int"},"mt_rand":{"desc":"Generate a better random value","params":[{"required":"yes","param":"int $min"},{"required":"yes","param":"int $max"}],"returns":"int"},"mysqli_affected_rows":{"desc":"Gets the number of affected rows in a previous MySQL operation","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_connect_errno":{"desc":"Returns the error code from last connect call","params":[],"returns":"int"},"mysqli_errno":{"desc":"Returns the error code for the most recent function call","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_field_count":{"desc":"Returns the number of columns for the most recent query","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_field_tell":{"desc":"Get current field offset of a result pointer","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"int"},"mysqli_get_client_version":{"desc":"Get MySQL client info","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_get_proto_info":{"desc":"Returns the version of the MySQL protocol used","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_get_server_version":{"desc":"Returns the version of the MySQL server as an integer","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_num_fields":{"desc":"Get the number of fields in a result","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"int"},"mysqli_num_rows":{"desc":"Gets the number of rows in a result","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"int"},"mysqli_poll":{"desc":"Poll connections","params":[{"required":"yes","param":"array $read"},{"required":"yes","param":"array $error"},{"required":"yes","param":"array $reject"},{"required":"yes","param":"int $sec"},{"required":"no","param":"int $usec = &#039;&#039;"}],"returns":"int"},"mysqli_rpl_parse_enabled":{"desc":"Check if RPL parse is enabled","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_rpl_query_type":{"desc":"Returns RPL query type","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_stmt_affected_rows":{"desc":"Returns the total number of rows changed, deleted, or  inserted by the last executed statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_stmt_attr_get":{"desc":"Used to get the current value of a statement attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_stmt_errno":{"desc":"Returns the error code for the most recent statement call","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_stmt_field_count":{"desc":"Returns the number of field in the given statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_stmt_num_rows":{"desc":"Return the number of rows in statements result set","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_stmt_param_count":{"desc":"Returns the number of parameter for the given statement","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"int"},"mysqli_thread_id":{"desc":"Returns the thread ID for the current connection","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqli_warning_count":{"desc":"Returns the number of warnings from the last query for the given link","params":[{"required":"yes","param":"mysqli $link"}],"returns":"int"},"mysqlnd_ms_query_is_select":{"desc":"Find whether to send the query to the master, the slave or the last used MySQL server","params":[{"required":"yes","param":"string $query"}],"returns":"int"},"mysql_affected_rows":{"desc":"Get number of affected rows in previous MySQL operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"mysql_errno":{"desc":"Returns the numerical value of the error message from previous MySQL operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"mysql_field_len":{"desc":"Returns the length of the specified field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"int"},"mysql_get_proto_info":{"desc":"Get MySQL protocol info","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"mysql_insert_id":{"desc":"Get the ID generated in the last query","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"mysql_num_fields":{"desc":"Get number of fields in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"mysql_num_rows":{"desc":"Get number of rows in result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"mysql_thread_id":{"desc":"Return the current thread ID","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"m_checkstatus":{"desc":"Check to see if a transaction has completed","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_completeauthorizations":{"desc":"Number of complete authorizations in queue, returning an array of their identifiers","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $array"}],"returns":"int"},"m_connect":{"desc":"Establish the connection to MCVE","params":[{"required":"yes","param":"resource $conn"}],"returns":"int"},"m_initengine":{"desc":"Ready the client for IP/SSL Communication","params":[{"required":"yes","param":"string $location"}],"returns":"int"},"m_iscommadelimited":{"desc":"Checks to see if response is comma delimited","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_monitor":{"desc":"Perform communication with MCVE (send/receive data) Non-blocking","params":[{"required":"yes","param":"resource $conn"}],"returns":"int"},"m_numcolumns":{"desc":"Number of columns returned in a comma delimited response","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_numrows":{"desc":"Number of rows returned in a comma delimited response","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_parsecommadelimited":{"desc":"Parse the comma delimited response so m_getcell, etc will work","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_returnstatus":{"desc":"Check to see if the transaction was successful","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_setblocking":{"desc":"Set blocking/non-blocking mode for connection","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $tf"}],"returns":"int"},"m_setdropfile":{"desc":"Set the connection method to Drop-File","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"string $directory"}],"returns":"int"},"m_setip":{"desc":"Set the connection method to IP","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"}],"returns":"int"},"m_setssl":{"desc":"Set the connection method to SSL","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"}],"returns":"int"},"m_setssl_cafile":{"desc":"Set SSL CA (Certificate Authority) file for verification of server certificate","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"string $cafile"}],"returns":"int"},"m_setssl_files":{"desc":"Set certificate key files and certificates if server requires client certificate verification","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"string $sslkeyfile"},{"required":"yes","param":"string $sslcertfile"}],"returns":"int"},"m_settimeout":{"desc":"Set maximum transaction time (per trans)","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $seconds"}],"returns":"int"},"m_transactionssent":{"desc":"Check to see if outgoing buffer is clear","params":[{"required":"yes","param":"resource $conn"}],"returns":"int"},"m_transinqueue":{"desc":"Number of transactions in client-queue","params":[{"required":"yes","param":"resource $conn"}],"returns":"int"},"m_transkeyval":{"desc":"Add key/value pair to a transaction. Replaces deprecated transparam()","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"}],"returns":"int"},"m_transnew":{"desc":"Start a new transaction","params":[{"required":"yes","param":"resource $conn"}],"returns":"int"},"m_transsend":{"desc":"Finalize and send the transaction","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"int"},"m_uwait":{"desc":"Wait x microsecs","params":[{"required":"yes","param":"int $microsecs"}],"returns":"int"},"m_validateidentifier":{"desc":"Whether or not to validate the passed identifier on any transaction it is passed to","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $tf"}],"returns":"int"},"ncurses_addch":{"desc":"Add character at current position and advance cursor","params":[{"required":"yes","param":"int $ch"}],"returns":"int"},"ncurses_addchnstr":{"desc":"Add attributed string with specified length at current position","params":[{"required":"yes","param":"string $s"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_addchstr":{"desc":"Add attributed string at current position","params":[{"required":"yes","param":"string $s"}],"returns":"int"},"ncurses_addnstr":{"desc":"Add string with specified length at current position","params":[{"required":"yes","param":"string $s"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_addstr":{"desc":"Output text at current position","params":[{"required":"yes","param":"string $text"}],"returns":"int"},"ncurses_assume_default_colors":{"desc":"Define default colors for color 0","params":[{"required":"yes","param":"int $fg"},{"required":"yes","param":"int $bg"}],"returns":"int"},"ncurses_attroff":{"desc":"Turn off the given attributes","params":[{"required":"yes","param":"int $attributes"}],"returns":"int"},"ncurses_attron":{"desc":"Turn on the given attributes","params":[{"required":"yes","param":"int $attributes"}],"returns":"int"},"ncurses_attrset":{"desc":"Set given attributes","params":[{"required":"yes","param":"int $attributes"}],"returns":"int"},"ncurses_baudrate":{"desc":"Returns baudrate of terminal","params":[],"returns":"int"},"ncurses_beep":{"desc":"Let the terminal beep","params":[],"returns":"int"},"ncurses_bkgd":{"desc":"Set background property for terminal screen","params":[{"required":"yes","param":"int $attrchar"}],"returns":"int"},"ncurses_border":{"desc":"Draw a border around the screen using attributed characters","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $right"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $bottom"},{"required":"yes","param":"int $tl_corner"},{"required":"yes","param":"int $tr_corner"},{"required":"yes","param":"int $bl_corner"},{"required":"yes","param":"int $br_corner"}],"returns":"int"},"ncurses_bottom_panel":{"desc":"Moves a visible panel to the bottom of the stack","params":[{"required":"yes","param":"resource $panel"}],"returns":"int"},"ncurses_color_content":{"desc":"Retrieves RGB components of a color","params":[{"required":"yes","param":"int $color"},{"required":"yes","param":"int $r"},{"required":"yes","param":"int $g"},{"required":"yes","param":"int $b"}],"returns":"int"},"ncurses_color_set":{"desc":"Set active foreground and background colors","params":[{"required":"yes","param":"int $pair"}],"returns":"int"},"ncurses_curs_set":{"desc":"Set cursor state","params":[{"required":"yes","param":"int $visibility"}],"returns":"int"},"ncurses_define_key":{"desc":"Define a keycode","params":[{"required":"yes","param":"string $definition"},{"required":"yes","param":"int $keycode"}],"returns":"int"},"ncurses_delay_output":{"desc":"Delay output on terminal using padding characters","params":[{"required":"yes","param":"int $milliseconds"}],"returns":"int"},"ncurses_echochar":{"desc":"Single character output including refresh","params":[{"required":"yes","param":"int $character"}],"returns":"int"},"ncurses_end":{"desc":"Stop using ncurses, clean up the screen","params":[],"returns":"int"},"ncurses_getch":{"desc":"Read a character from keyboard","params":[],"returns":"int"},"ncurses_halfdelay":{"desc":"Put terminal into halfdelay mode","params":[{"required":"yes","param":"int $tenth"}],"returns":"int"},"ncurses_has_key":{"desc":"Check for presence of a function key on terminal keyboard","params":[{"required":"yes","param":"int $keycode"}],"returns":"int"},"ncurses_hide_panel":{"desc":"Remove panel from the stack, making it invisible","params":[{"required":"yes","param":"resource $panel"}],"returns":"int"},"ncurses_hline":{"desc":"Draw a horizontal line at current position using an attributed character and max. n characters long","params":[{"required":"yes","param":"int $charattr"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_init_color":{"desc":"Define a terminal color","params":[{"required":"yes","param":"int $color"},{"required":"yes","param":"int $r"},{"required":"yes","param":"int $g"},{"required":"yes","param":"int $b"}],"returns":"int"},"ncurses_init_pair":{"desc":"Define a color pair","params":[{"required":"yes","param":"int $pair"},{"required":"yes","param":"int $fg"},{"required":"yes","param":"int $bg"}],"returns":"int"},"ncurses_insch":{"desc":"Insert character moving rest of line including character at current position","params":[{"required":"yes","param":"int $character"}],"returns":"int"},"ncurses_insdelln":{"desc":"Insert lines before current line scrolling down (negative numbers delete and scroll up)","params":[{"required":"yes","param":"int $count"}],"returns":"int"},"ncurses_insertln":{"desc":"Insert a line, move rest of screen down","params":[],"returns":"int"},"ncurses_insstr":{"desc":"Insert string at current position, moving rest of line right","params":[{"required":"yes","param":"string $text"}],"returns":"int"},"ncurses_instr":{"desc":"Reads string from terminal screen","params":[{"required":"yes","param":"string $buffer"}],"returns":"int"},"ncurses_keyok":{"desc":"Enable or disable a keycode","params":[{"required":"yes","param":"int $keycode"},{"required":"yes","param":"bool $enable"}],"returns":"int"},"ncurses_keypad":{"desc":"Turns keypad on or off","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"bool $bf"}],"returns":"int"},"ncurses_meta":{"desc":"Enables/Disable 8-bit meta key information","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"bool $8bit"}],"returns":"int"},"ncurses_mouseinterval":{"desc":"Set timeout for mouse button clicks","params":[{"required":"yes","param":"int $milliseconds"}],"returns":"int"},"ncurses_mousemask":{"desc":"Sets mouse options","params":[{"required":"yes","param":"int $newmask"},{"required":"yes","param":"int $oldmask"}],"returns":"int"},"ncurses_move":{"desc":"Move output position","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"int"},"ncurses_move_panel":{"desc":"Moves a panel so that its upper-left corner is at [startx, starty]","params":[{"required":"yes","param":"resource $panel"},{"required":"yes","param":"int $startx"},{"required":"yes","param":"int $starty"}],"returns":"int"},"ncurses_mvaddch":{"desc":"Move current position and add character","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $c"}],"returns":"int"},"ncurses_mvaddchnstr":{"desc":"Move position and add attributed string with specified length","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"string $s"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_mvaddchstr":{"desc":"Move position and add attributed string","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"string $s"}],"returns":"int"},"ncurses_mvaddnstr":{"desc":"Move position and add string with specified length","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"string $s"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_mvaddstr":{"desc":"Move position and add string","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"string $s"}],"returns":"int"},"ncurses_mvcur":{"desc":"Move cursor immediately","params":[{"required":"yes","param":"int $old_y"},{"required":"yes","param":"int $old_x"},{"required":"yes","param":"int $new_y"},{"required":"yes","param":"int $new_x"}],"returns":"int"},"ncurses_mvdelch":{"desc":"Move position and delete character, shift rest of line left","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"int"},"ncurses_mvgetch":{"desc":"Move position and get character at new position","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"int"},"ncurses_mvhline":{"desc":"Set new position and draw a horizontal line using an attributed character and max. n characters long","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $attrchar"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_mvinch":{"desc":"Move position and get attributed character at new position","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"int"},"ncurses_mvvline":{"desc":"Set new position and draw a vertical line using an attributed character and max. n characters long","params":[{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $attrchar"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_mvwaddstr":{"desc":"Add string at new position in window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"},{"required":"yes","param":"string $text"}],"returns":"int"},"ncurses_napms":{"desc":"Sleep","params":[{"required":"yes","param":"int $milliseconds"}],"returns":"int"},"ncurses_pair_content":{"desc":"Retrieves foreground and background colors of a color pair","params":[{"required":"yes","param":"int $pair"},{"required":"yes","param":"int $f"},{"required":"yes","param":"int $b"}],"returns":"int"},"ncurses_pnoutrefresh":{"desc":"Copies a region from a pad into the virtual screen","params":[{"required":"yes","param":"resource $pad"},{"required":"yes","param":"int $pminrow"},{"required":"yes","param":"int $pmincol"},{"required":"yes","param":"int $sminrow"},{"required":"yes","param":"int $smincol"},{"required":"yes","param":"int $smaxrow"},{"required":"yes","param":"int $smaxcol"}],"returns":"int"},"ncurses_prefresh":{"desc":"Copies a region from a pad into the virtual screen","params":[{"required":"yes","param":"resource $pad"},{"required":"yes","param":"int $pminrow"},{"required":"yes","param":"int $pmincol"},{"required":"yes","param":"int $sminrow"},{"required":"yes","param":"int $smincol"},{"required":"yes","param":"int $smaxrow"},{"required":"yes","param":"int $smaxcol"}],"returns":"int"},"ncurses_putp":{"desc":"Apply padding information to the string and output it","params":[{"required":"yes","param":"string $text"}],"returns":"int"},"ncurses_refresh":{"desc":"Refresh screen","params":[{"required":"yes","param":"int $ch"}],"returns":"int"},"ncurses_replace_panel":{"desc":"Replaces the window associated with panel","params":[{"required":"yes","param":"resource $panel"},{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_reset_prog_mode":{"desc":"Resets the prog mode saved by def_prog_mode","params":[],"returns":"int"},"ncurses_reset_shell_mode":{"desc":"Resets the shell mode saved by def_shell_mode","params":[],"returns":"int"},"ncurses_scrl":{"desc":"Scroll window content up or down without changing current position","params":[{"required":"yes","param":"int $count"}],"returns":"int"},"ncurses_scr_dump":{"desc":"Dump screen content to file","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"ncurses_scr_init":{"desc":"Initialize screen from file dump","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"ncurses_scr_restore":{"desc":"Restore screen from file dump","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"ncurses_scr_set":{"desc":"Inherit screen from file dump","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"ncurses_show_panel":{"desc":"Places an invisible panel on top of the stack, making it visible","params":[{"required":"yes","param":"resource $panel"}],"returns":"int"},"ncurses_slk_attr":{"desc":"Returns current soft label key attribute","params":[],"returns":"int"},"ncurses_slk_attroff":{"desc":"Turn off the given attributes for soft function-key labels","params":[{"required":"yes","param":"int $intarg"}],"returns":"int"},"ncurses_slk_attron":{"desc":"Turn on the given attributes for soft function-key labels","params":[{"required":"yes","param":"int $intarg"}],"returns":"int"},"ncurses_slk_attrset":{"desc":"Set given attributes for soft function-key labels","params":[{"required":"yes","param":"int $intarg"}],"returns":"int"},"ncurses_slk_color":{"desc":"Sets color for soft label keys","params":[{"required":"yes","param":"int $intarg"}],"returns":"int"},"ncurses_slk_refresh":{"desc":"Copies soft label keys to screen","params":[],"returns":"int"},"ncurses_slk_restore":{"desc":"Restores soft label keys","params":[],"returns":"int"},"ncurses_slk_touch":{"desc":"Forces output when ncurses_slk_noutrefresh is performed","params":[],"returns":"int"},"ncurses_standend":{"desc":"Stop using &#039;standout&#039; attribute","params":[],"returns":"int"},"ncurses_standout":{"desc":"Start using &#039;standout&#039; attribute","params":[],"returns":"int"},"ncurses_start_color":{"desc":"Initializes color functionality","params":[],"returns":"int"},"ncurses_top_panel":{"desc":"Moves a visible panel to the top of the stack","params":[{"required":"yes","param":"resource $panel"}],"returns":"int"},"ncurses_typeahead":{"desc":"Specify different filedescriptor for typeahead checking","params":[{"required":"yes","param":"int $fd"}],"returns":"int"},"ncurses_ungetch":{"desc":"Put a character back into the input stream","params":[{"required":"yes","param":"int $keycode"}],"returns":"int"},"ncurses_use_extended_names":{"desc":"Control use of extended names in terminfo descriptions","params":[{"required":"yes","param":"bool $flag"}],"returns":"int"},"ncurses_vidattr":{"desc":"Display the string on the terminal in the video attribute mode","params":[{"required":"yes","param":"int $intarg"}],"returns":"int"},"ncurses_vline":{"desc":"Draw a vertical line at current position using an attributed character and max. n characters long","params":[{"required":"yes","param":"int $charattr"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_waddch":{"desc":"Adds character at current position in a window and advance cursor","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $ch"}],"returns":"int"},"ncurses_waddstr":{"desc":"Outputs text at current postion in window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"string $str"},{"required":"no","param":"int $n = &#039;&#039;"}],"returns":"int"},"ncurses_wattroff":{"desc":"Turns off attributes for a window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $attrs"}],"returns":"int"},"ncurses_wattron":{"desc":"Turns on attributes for a window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $attrs"}],"returns":"int"},"ncurses_wattrset":{"desc":"Set the attributes for a window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $attrs"}],"returns":"int"},"ncurses_wborder":{"desc":"Draws a border around the window using attributed characters","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $left"},{"required":"yes","param":"int $right"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $bottom"},{"required":"yes","param":"int $tl_corner"},{"required":"yes","param":"int $tr_corner"},{"required":"yes","param":"int $bl_corner"},{"required":"yes","param":"int $br_corner"}],"returns":"int"},"ncurses_wclear":{"desc":"Clears window","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wcolor_set":{"desc":"Sets windows color pairings","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $color_pair"}],"returns":"int"},"ncurses_werase":{"desc":"Erase window contents","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wgetch":{"desc":"Reads a character from keyboard (window)","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_whline":{"desc":"Draws a horizontal line in a window at current position using an attributed character and max. n characters long","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $charattr"},{"required":"yes","param":"int $n"}],"returns":"int"},"ncurses_wmove":{"desc":"Moves windows output position","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"int"},"ncurses_wnoutrefresh":{"desc":"Copies window to virtual screen","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wrefresh":{"desc":"Refresh window on terminal screen","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wstandend":{"desc":"End standout mode for a window","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wstandout":{"desc":"Enter standout mode for a window","params":[{"required":"yes","param":"resource $window"}],"returns":"int"},"ncurses_wvline":{"desc":"Draws a vertical line in a window at current position using an attributed character and max. n characters long","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $charattr"},{"required":"yes","param":"int $n"}],"returns":"int"},"newt_centered_window":{"desc":"Open a centered window of the specified size","params":[{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"no","param":"string $title = &#039;&#039;"}],"returns":"int"},"newt_finished":{"desc":"Uninitializes newt interface","params":[],"returns":"int"},"newt_init":{"desc":"Initialize newt","params":[],"returns":"int"},"newt_listbox_item_count":{"desc":"","params":[{"required":"yes","param":"resource $listbox"}],"returns":"int"},"newt_open_window":{"desc":"Open a window of the specified size and position","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"no","param":"string $title = &#039;&#039;"}],"returns":"int"},"newt_textbox_get_num_lines":{"desc":"","params":[{"required":"yes","param":"resource $textbox"}],"returns":"int"},"newt_win_choice":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $button1_text"},{"required":"yes","param":"string $button2_text"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"newt_win_entries":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $suggested_width"},{"required":"yes","param":"int $flex_down"},{"required":"yes","param":"int $flex_up"},{"required":"yes","param":"int $data_width"},{"required":"yes","param":"array $items"},{"required":"yes","param":"string $button1"},{"required":"no","param":"string $... = &#039;&#039;"}],"returns":"int"},"newt_win_menu":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $suggestedWidth"},{"required":"yes","param":"int $flexDown"},{"required":"yes","param":"int $flexUp"},{"required":"yes","param":"int $maxListHeight"},{"required":"yes","param":"array $items"},{"required":"yes","param":"int $listItem"},{"required":"no","param":"string $button1 = &#039;&#039;"},{"required":"no","param":"string $... = &#039;&#039;"}],"returns":"int"},"newt_win_ternary":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $button1_text"},{"required":"yes","param":"string $button2_text"},{"required":"yes","param":"string $button3_text"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"notes_find_note":{"desc":"Returns a note id found in database_name","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $name"},{"required":"no","param":"string $type = &#039;&#039;"}],"returns":"int"},"numfmt_get_attribute":{"desc":"Get an attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"int"},"numfmt_get_error_code":{"desc":"Get formatter&#039;s last error code.","params":[{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"int"},"ob_get_length":{"desc":"Return the length of the output buffer","params":[],"returns":"int"},"ob_get_level":{"desc":"Return the nesting level of the output buffering mechanism","params":[],"returns":"int"},"ocifetchinto":{"desc":"Fetches the next row into an array (deprecated)","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"array $result"},{"required":"no","param":"int $mode =  +"}],"returns":"int"},"oci_fetch_all":{"desc":"Fetches multiple rows from a query into a two-dimensional array","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"array $output"},{"required":"no","param":"int $skip = &#039;&#039;"},{"required":"no","param":"int $maxrows = -1"},{"required":"no","param":"int $flags =  +"}],"returns":"int"},"oci_field_precision":{"desc":"Tell the precision of a field","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $field"}],"returns":"int"},"oci_field_scale":{"desc":"Tell the scale of the field","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $field"}],"returns":"int"},"oci_field_size":{"desc":"Returns field&#039;s size","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"mixed $field"}],"returns":"int"},"oci_field_type_raw":{"desc":"Tell the raw Oracle data type of the field","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $field"}],"returns":"int"},"oci_num_fields":{"desc":"Returns the number of result columns in a statement","params":[{"required":"yes","param":"resource $statement"}],"returns":"int"},"oci_num_rows":{"desc":"Returns number of rows affected during statement execution","params":[{"required":"yes","param":"resource $statement"}],"returns":"int"},"odbc_field_len":{"desc":"Get the length (precision) of a field","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"odbc_field_num":{"desc":"Return column number","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"string $field_name"}],"returns":"int"},"odbc_field_scale":{"desc":"Get the scale of a field","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"odbc_num_fields":{"desc":"Number of columns in a result","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"odbc_num_rows":{"desc":"Number of rows in a result","params":[{"required":"yes","param":"resource $result_id"}],"returns":"int"},"odbc_result_all":{"desc":"Print result as HTML table","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"string $format = &#039;&#039;"}],"returns":"int"},"openal_buffer_get":{"desc":"Retrieve an OpenAL buffer property","params":[{"required":"yes","param":"resource $buffer"},{"required":"yes","param":"int $property"}],"returns":"int"},"openssl_seal":{"desc":"Seal (encrypt) data","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $sealed_data"},{"required":"yes","param":"array $env_keys"},{"required":"yes","param":"array $pub_key_ids"},{"required":"no","param":"string $method = &#039;&#039;"}],"returns":"int"},"openssl_verify":{"desc":"Verify signature","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $signature"},{"required":"yes","param":"mixed $pub_key_id"},{"required":"no","param":"int $signature_alg = OPENSSL_ALGO_SHA1"}],"returns":"int"},"openssl_x509_checkpurpose":{"desc":"Verifies if a certificate can be used for a particular purpose","params":[{"required":"yes","param":"mixed $x509cert"},{"required":"yes","param":"int $purpose"},{"required":"no","param":"array $cainfo = array()"},{"required":"no","param":"string $untrustedfile = &#039;&#039;"}],"returns":"int"},"ord":{"desc":"Return ASCII value of character","params":[{"required":"yes","param":"string $string"}],"returns":"int"},"ovrimos_connect":{"desc":"Connect to the specified database","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $dborport"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"}],"returns":"int"},"ovrimos_exec":{"desc":"Executes an SQL statement","params":[{"required":"yes","param":"int $connection_id"},{"required":"yes","param":"string $query"}],"returns":"int"},"ovrimos_field_len":{"desc":"Returns the length of the output column","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"ovrimos_field_num":{"desc":"Returns the (1-based) index of the output column","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"string $field_name"}],"returns":"int"},"ovrimos_field_type":{"desc":"Returns the type of the output column","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"ovrimos_num_fields":{"desc":"Returns the number of columns","params":[{"required":"yes","param":"int $result_id"}],"returns":"int"},"ovrimos_num_rows":{"desc":"Returns the number of rows affected by update operations","params":[{"required":"yes","param":"int $result_id"}],"returns":"int"},"ovrimos_prepare":{"desc":"Prepares an SQL statement","params":[{"required":"yes","param":"int $connection_id"},{"required":"yes","param":"string $query"}],"returns":"int"},"ovrimos_result_all":{"desc":"Prints the whole result set as an HTML table","params":[{"required":"yes","param":"int $result_id"},{"required":"no","param":"string $format = &#039;&#039;"}],"returns":"int"},"pclose":{"desc":"Closes process file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"int"},"pcntl_alarm":{"desc":"Set an alarm clock for delivery of a signal","params":[{"required":"yes","param":"int $seconds"}],"returns":"int"},"pcntl_fork":{"desc":"Forks the currently running process","params":[],"returns":"int"},"pcntl_getpriority":{"desc":"Get the priority of any process","params":[{"required":"no","param":"int $pid = getmypid()"},{"required":"no","param":"int $process_identifier = PRIO_PROCESS"}],"returns":"int"},"pcntl_sigtimedwait":{"desc":"Waits for signals, with a timeout","params":[{"required":"yes","param":"array $set"},{"required":"no","param":"array $siginfo = &#039;&#039;"},{"required":"no","param":"int $seconds = &#039;&#039;"},{"required":"no","param":"int $nanoseconds = &#039;&#039;"}],"returns":"int"},"pcntl_sigwaitinfo":{"desc":"Waits for signals","params":[{"required":"yes","param":"array $set"},{"required":"no","param":"array $siginfo = &#039;&#039;"}],"returns":"int"},"pcntl_wait":{"desc":"Waits on or returns the status of a forked child","params":[{"required":"yes","param":"int $status"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"int"},"pcntl_waitpid":{"desc":"Waits on or returns the status of a forked child","params":[{"required":"yes","param":"int $pid"},{"required":"yes","param":"int $status"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"int"},"pcntl_wexitstatus":{"desc":"Returns the return code of a terminated child","params":[{"required":"yes","param":"int $status"}],"returns":"int"},"pcntl_wstopsig":{"desc":"Returns the signal which caused the child to stop","params":[{"required":"yes","param":"int $status"}],"returns":"int"},"pcntl_wtermsig":{"desc":"Returns the signal which caused the child to terminate","params":[{"required":"yes","param":"int $status"}],"returns":"int"},"PDF_add_table_cell":{"desc":"Add a cell to a new or existing table","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $table"},{"required":"yes","param":"int $column"},{"required":"yes","param":"int $row"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_add_textflow":{"desc":"Create Textflow or add text to existing Textflow","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $textflow"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_begin_document":{"desc":"Create new PDF file","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_begin_item":{"desc":"Open structure element or other content item","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $tag"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_begin_pattern":{"desc":"Start pattern definition","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"float $xstep"},{"required":"yes","param":"float $ystep"},{"required":"yes","param":"int $painttype"}],"returns":"int"},"PDF_begin_template":{"desc":"Start template definition [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"int"},"PDF_begin_template_ext":{"desc":"Start template definition","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_create_3dview":{"desc":"Create 3D view","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_create_action":{"desc":"Create action for objects or events","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_create_bookmark":{"desc":"Create bookmark","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_create_gstate":{"desc":"Create graphics state object","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_create_textflow":{"desc":"Create textflow object","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_define_layer":{"desc":"Create layer definition","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_delete_pvf":{"desc":"Delete PDFlib virtual file","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"}],"returns":"int"},"PDF_fill_imageblock":{"desc":"Fill image block with variable data","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $blockname"},{"required":"yes","param":"int $image"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_fill_pdfblock":{"desc":"Fill PDF block with variable data","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $blockname"},{"required":"yes","param":"int $contents"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_fill_textblock":{"desc":"Fill text block with variable data","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $blockname"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_findfont":{"desc":"Prepare font for later use [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $fontname"},{"required":"yes","param":"string $encoding"},{"required":"yes","param":"int $embed"}],"returns":"int"},"PDF_get_errnum":{"desc":"Get error number","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"int"},"PDF_get_majorversion":{"desc":"Get major version number [deprecated]","params":[],"returns":"int"},"PDF_get_minorversion":{"desc":"Get minor version number [deprecated]","params":[],"returns":"int"},"PDF_load_3ddata":{"desc":"Load 3D model","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_load_font":{"desc":"Search and prepare font","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $fontname"},{"required":"yes","param":"string $encoding"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_load_iccprofile":{"desc":"Search and prepare ICC profile","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $profilename"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_load_image":{"desc":"Open image file","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $imagetype"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_makespotcolor":{"desc":"Make spot color","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $spotname"}],"returns":"int"},"PDF_open_ccitt":{"desc":"Open raw CCITT image [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $BitReverse"},{"required":"yes","param":"int $k"},{"required":"yes","param":"int $Blackls1"}],"returns":"int"},"PDF_open_image":{"desc":"Use image data [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $imagetype"},{"required":"yes","param":"string $source"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $length"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $components"},{"required":"yes","param":"int $bpc"},{"required":"yes","param":"string $params"}],"returns":"int"},"PDF_open_image_file":{"desc":"Read image from file [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $imagetype"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $stringparam"},{"required":"yes","param":"int $intparam"}],"returns":"int"},"PDF_open_memory_image":{"desc":"Open image created with PHP&#039;s image functions [not supported]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"resource $image"}],"returns":"int"},"PDF_open_pdi":{"desc":"Open PDF file [deprecated]","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $optlist"},{"required":"yes","param":"int $len"}],"returns":"int"},"PDF_open_pdi_document":{"desc":"Prepare a pdi document","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_open_pdi_page":{"desc":"Prepare a page","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"int $pagenumber"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_process_pdi":{"desc":"Process imported PDF document","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_shading":{"desc":"Define blend","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $shtype"},{"required":"yes","param":"float $x0"},{"required":"yes","param":"float $y0"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $c1"},{"required":"yes","param":"float $c2"},{"required":"yes","param":"float $c3"},{"required":"yes","param":"float $c4"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_shading_pattern":{"desc":"Define shading pattern","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $shading"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"PDF_show_boxed":{"desc":"Output text in a box [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $text"},{"required":"yes","param":"float $left"},{"required":"yes","param":"float $top"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"string $mode"},{"required":"yes","param":"string $feature"}],"returns":"int"},"pg_affected_rows":{"desc":"Returns number of affected records (tuples)","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"pg_connection_status":{"desc":"Get connection status","params":[{"required":"yes","param":"resource $connection"}],"returns":"int"},"pg_field_is_null":{"desc":"Test if a field is SQL NULL","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"yes","param":"mixed $field"}],"returns":"int"},"pg_field_num":{"desc":"Returns the field number of the named field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"string $field_name"}],"returns":"int"},"pg_field_size":{"desc":"Returns the internal storage size of the named field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"pg_field_type_oid":{"desc":"Returns the type ID (OID) for the corresponding field number","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"}],"returns":"int"},"pg_get_pid":{"desc":"Gets the backend&#039;s process ID","params":[{"required":"yes","param":"resource $connection"}],"returns":"int"},"pg_lo_create":{"desc":"Create a large object","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"mixed $object_id"}],"returns":"int"},"pg_lo_import":{"desc":"Import a large object from file","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $pathname"},{"required":"no","param":"mixed $object_id = &#039;&#039;"}],"returns":"int"},"pg_lo_read_all":{"desc":"Reads an entire large object and send straight to browser","params":[{"required":"yes","param":"resource $large_object"}],"returns":"int"},"pg_lo_tell":{"desc":"Returns current seek position a of large object","params":[{"required":"yes","param":"resource $large_object"}],"returns":"int"},"pg_lo_write":{"desc":"Write to a large object","params":[{"required":"yes","param":"resource $large_object"},{"required":"yes","param":"string $data"},{"required":"no","param":"int $len = &#039;&#039;"}],"returns":"int"},"pg_num_fields":{"desc":"Returns the number of fields in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"pg_num_rows":{"desc":"Returns the number of rows in a result","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"pg_port":{"desc":"Return the port number associated with the connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"int"},"pg_set_client_encoding":{"desc":"Set the client encoding","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $encoding"}],"returns":"int"},"pg_set_error_verbosity":{"desc":"Determines the verbosity of messages returned by pg_last_error    and pg_result_error.","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"int $verbosity"}],"returns":"int"},"pg_transaction_status":{"desc":"Returns the current in-transaction status of the server.","params":[{"required":"yes","param":"resource $connection"}],"returns":"int"},"posix_getegid":{"desc":"Return the effective group ID of the current process","params":[],"returns":"int"},"posix_geteuid":{"desc":"Return the effective user ID of the current process","params":[],"returns":"int"},"posix_getgid":{"desc":"Return the real group ID of the current process","params":[],"returns":"int"},"posix_getpgid":{"desc":"Get process group id for job control","params":[{"required":"yes","param":"int $pid"}],"returns":"int"},"posix_getpgrp":{"desc":"Return the current process group identifier","params":[],"returns":"int"},"posix_getpid":{"desc":"Return the current process identifier","params":[],"returns":"int"},"posix_getppid":{"desc":"Return the parent process identifier","params":[],"returns":"int"},"posix_getsid":{"desc":"Get the current sid of the process","params":[{"required":"yes","param":"int $pid"}],"returns":"int"},"posix_getuid":{"desc":"Return the real user ID of the current process","params":[],"returns":"int"},"posix_get_last_error":{"desc":"Retrieve the error number set by the last posix function that failed","params":[],"returns":"int"},"posix_setsid":{"desc":"Make the current process a session leader","params":[],"returns":"int"},"preg_last_error":{"desc":"Returns the error code of the last PCRE regex execution","params":[],"returns":"int"},"preg_match":{"desc":"Perform a regular expression match","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $subject"},{"required":"no","param":"array $matches = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"preg_match_all":{"desc":"Perform a global regular expression match","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $subject"},{"required":"yes","param":"array $matches"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"print":{"desc":"Output a string","params":[{"required":"yes","param":"string $arg"}],"returns":"int"},"printer_logical_fontheight":{"desc":"Get logical font height","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $height"}],"returns":"int"},"printf":{"desc":"Output a formatted string","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"int"},"proc_close":{"desc":"Close a process opened by proc_open and return the exit code of that process","params":[{"required":"yes","param":"resource $process"}],"returns":"int"},"pspell_config_create":{"desc":"Create a config used to open a dictionary","params":[{"required":"yes","param":"string $language"},{"required":"no","param":"string $spelling = &#039;&#039;"},{"required":"no","param":"string $jargon = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"int"},"pspell_new":{"desc":"Load a new dictionary","params":[{"required":"yes","param":"string $language"},{"required":"no","param":"string $spelling = &#039;&#039;"},{"required":"no","param":"string $jargon = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"int"},"pspell_new_config":{"desc":"Load a new dictionary with settings based on a given config","params":[{"required":"yes","param":"int $config"}],"returns":"int"},"pspell_new_personal":{"desc":"Load a new dictionary with personal wordlist","params":[{"required":"yes","param":"string $personal"},{"required":"yes","param":"string $language"},{"required":"no","param":"string $spelling = &#039;&#039;"},{"required":"no","param":"string $jargon = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"int"},"ps_add_bookmark":{"desc":"Add bookmark to current page","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"no","param":"int $parent = &#039;&#039;"},{"required":"no","param":"int $open = &#039;&#039;"}],"returns":"int"},"ps_begin_pattern":{"desc":"Start a new pattern","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"float $xstep"},{"required":"yes","param":"float $ystep"},{"required":"yes","param":"int $painttype"}],"returns":"int"},"ps_begin_template":{"desc":"Start a new template","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"int"},"ps_findfont":{"desc":"Loads a font","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $fontname"},{"required":"yes","param":"string $encoding"},{"required":"no","param":"bool $embed = false"}],"returns":"int"},"ps_makespotcolor":{"desc":"Create spot color","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $name"},{"required":"no","param":"int $reserved = &#039;&#039;"}],"returns":"int"},"ps_open_image":{"desc":"Reads an image for later placement","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $source"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $lenght"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $components"},{"required":"yes","param":"int $bpc"},{"required":"yes","param":"string $params"}],"returns":"int"},"ps_open_image_file":{"desc":"Opens image from file","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $filename"},{"required":"no","param":"string $stringparam = &#039;&#039;"},{"required":"no","param":"int $intparam = &#039;&#039;"}],"returns":"int"},"ps_open_memory_image":{"desc":"Takes an GD image and returns an image for placement in a PS document","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $gd"}],"returns":"int"},"ps_shading":{"desc":"Creates a shading for later use","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $type"},{"required":"yes","param":"float $x0"},{"required":"yes","param":"float $y0"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $c1"},{"required":"yes","param":"float $c2"},{"required":"yes","param":"float $c3"},{"required":"yes","param":"float $c4"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"ps_shading_pattern":{"desc":"Creates a pattern based on a shading","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $shadingid"},{"required":"yes","param":"string $optlist"}],"returns":"int"},"ps_show_boxed":{"desc":"Output text in a box","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $text"},{"required":"yes","param":"float $left"},{"required":"yes","param":"float $bottom"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"string $hmode"},{"required":"no","param":"string $feature = &#039;&#039;"}],"returns":"int"},"px_insert_record":{"desc":"Inserts record into paradox database","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"array $data"}],"returns":"int"},"px_numfields":{"desc":"Returns number of fields in a database","params":[{"required":"yes","param":"resource $pxdoc"}],"returns":"int"},"px_numrecords":{"desc":"Returns number of records in a database","params":[{"required":"yes","param":"resource $pxdoc"}],"returns":"int"},"radius_cvt_int":{"desc":"Converts raw data to integer","params":[{"required":"yes","param":"string $data"}],"returns":"int"},"radius_send_request":{"desc":"Sends the request and waites for a reply","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"int"},"rand":{"desc":"Generate a random integer","params":[{"required":"yes","param":"int $min"},{"required":"yes","param":"int $max"}],"returns":"int"},"readfile":{"desc":"Outputs a file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $use_include_path = false"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"int"},"readgzfile":{"desc":"Output a gz-file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $use_include_path = &#039;&#039;"}],"returns":"int"},"realpath_cache_size":{"desc":"Get realpath cache size","params":[],"returns":"int"},"resourcebundle_count":{"desc":"Get number of elements in the bundle","params":[{"required":"yes","param":"ResourceBundle $r"}],"returns":"int"},"resourcebundle_get_error_code":{"desc":"Get bundle&#039;s last error code.","params":[{"required":"yes","param":"ResourceBundle $r"}],"returns":"int"},"rrd_first":{"desc":"Gets the timestamp of the first sample from rrd file.","params":[{"required":"yes","param":"string $file"},{"required":"no","param":"int $raaindex = &#039;&#039;"}],"returns":"int"},"rrd_last":{"desc":"Gets unix timestamp of the last sample.","params":[{"required":"yes","param":"string $filename"}],"returns":"int"},"session_cache_expire":{"desc":"Return current cache expire","params":[{"required":"no","param":"string $new_cache_expire = &#039;&#039;"}],"returns":"int"},"shmop_open":{"desc":"Create or open shared memory block","params":[{"required":"yes","param":"int $key"},{"required":"yes","param":"string $flags"},{"required":"yes","param":"int $mode"},{"required":"yes","param":"int $size"}],"returns":"int"},"shmop_size":{"desc":"Get size of shared memory block","params":[{"required":"yes","param":"int $shmid"}],"returns":"int"},"shmop_write":{"desc":"Write data into shared memory block","params":[{"required":"yes","param":"int $shmid"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $offset"}],"returns":"int"},"similar_text":{"desc":"Calculate the similarity between two strings","params":[{"required":"yes","param":"string $first"},{"required":"yes","param":"string $second"},{"required":"no","param":"float $percent = &#039;&#039;"}],"returns":"int"},"sleep":{"desc":"Delay execution","params":[{"required":"yes","param":"int $seconds"}],"returns":"int"},"snmp_get_valueretrieval":{"desc":"Return the method how the SNMP values will be returned","params":[],"returns":"int"},"socket_last_error":{"desc":"Returns the last error on the socket","params":[{"required":"no","param":"resource $socket = &#039;&#039;"}],"returns":"int"},"socket_recv":{"desc":"Receives data from a connected socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $buf"},{"required":"yes","param":"int $len"},{"required":"yes","param":"int $flags"}],"returns":"int"},"socket_recvfrom":{"desc":"Receives data from a socket whether or not it is connection-oriented","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $buf"},{"required":"yes","param":"int $len"},{"required":"yes","param":"int $flags"},{"required":"yes","param":"string $name"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"int"},"socket_select":{"desc":"Runs the select() system call on the given arrays of sockets with a specified timeout","params":[{"required":"yes","param":"array $read"},{"required":"yes","param":"array $write"},{"required":"yes","param":"array $except"},{"required":"yes","param":"int $tv_sec"},{"required":"no","param":"int $tv_usec = &#039;&#039;"}],"returns":"int"},"socket_send":{"desc":"Sends data to a connected socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $buf"},{"required":"yes","param":"int $len"},{"required":"yes","param":"int $flags"}],"returns":"int"},"socket_sendto":{"desc":"Sends a message to a socket, whether it is connected or not","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $buf"},{"required":"yes","param":"int $len"},{"required":"yes","param":"int $flags"},{"required":"yes","param":"string $addr"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"int"},"socket_write":{"desc":"Write to a socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $buffer"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"sqlite_changes":{"desc":"Returns the number of rows that were changed by the most   recent SQL statement","params":[{"required":"yes","param":"resource $dbhandle"}],"returns":"int"},"sqlite_key":{"desc":"Returns the current row index","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"sqlite_last_error":{"desc":"Returns the error code of the last error for a database","params":[{"required":"yes","param":"resource $dbhandle"}],"returns":"int"},"sqlite_last_insert_rowid":{"desc":"Returns the rowid of the most recently inserted row","params":[{"required":"yes","param":"resource $dbhandle"}],"returns":"int"},"sqlite_num_fields":{"desc":"Returns the number of fields in a result set","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"sqlite_num_rows":{"desc":"Returns the number of rows in a buffered result set","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"ssdeep_fuzzy_compare":{"desc":"Calculates the match score between two fuzzy hash signatures","params":[{"required":"yes","param":"string $signature1"},{"required":"yes","param":"string $signature2"}],"returns":"int"},"stats_rand_gen_ibinomial":{"desc":"Generates a single random deviate from a binomial distribution whose number of trials is &quot;n&quot; (n &gt;= 0) and whose probability of an event in each trial is &quot;pp&quot; ([0;1]). Method : algorithm BTPE","params":[{"required":"yes","param":"int $n"},{"required":"yes","param":"float $pp"}],"returns":"int"},"stats_rand_gen_ibinomial_negative":{"desc":"Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n &gt; 0), p - the probability of an event (0 &lt; p &lt; 1)).","params":[{"required":"yes","param":"int $n"},{"required":"yes","param":"float $p"}],"returns":"int"},"stats_rand_gen_int":{"desc":"Generates random integer between 1 and 2147483562","params":[],"returns":"int"},"stats_rand_gen_ipoisson":{"desc":"Generates a single random deviate from a Poisson distribution with mean &quot;mu&quot; (mu &gt;= 0.0).","params":[{"required":"yes","param":"float $mu"}],"returns":"int"},"stats_rand_gen_iuniform":{"desc":"Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)","params":[{"required":"yes","param":"int $low"},{"required":"yes","param":"int $high"}],"returns":"int"},"strcasecmp":{"desc":"Binary safe case-insensitive string comparison","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"int"},"strcmp":{"desc":"Binary safe string comparison","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"int"},"strcoll":{"desc":"Locale based string comparison","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"int"},"strcspn":{"desc":"Find length of initial segment not matching mask","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"},{"required":"no","param":"int $start = &#039;&#039;"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"stream_copy_to_stream":{"desc":"Copies data from one stream to another","params":[{"required":"yes","param":"resource $source"},{"required":"yes","param":"resource $dest"},{"required":"no","param":"int $maxlength = -1"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"stream_select":{"desc":"Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by tv_sec and tv_usec","params":[{"required":"yes","param":"array $read"},{"required":"yes","param":"array $write"},{"required":"yes","param":"array $except"},{"required":"yes","param":"int $tv_sec"},{"required":"no","param":"int $tv_usec = &#039;&#039;"}],"returns":"int"},"stream_set_read_buffer":{"desc":"Set read file buffering on the given stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"int $buffer"}],"returns":"int"},"stream_set_write_buffer":{"desc":"Sets write file buffering on the given stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"int $buffer"}],"returns":"int"},"stream_socket_sendto":{"desc":"Sends a message to a socket, whether it is connected or not","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"string $data"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"string $address = &#039;&#039;"}],"returns":"int"},"strlen":{"desc":"Get string length","params":[{"required":"yes","param":"string $string"}],"returns":"int"},"strnatcasecmp":{"desc":"Case insensitive string comparisons using a &quot;natural order&quot; algorithm","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"int"},"strnatcmp":{"desc":"String comparisons using a &quot;natural order&quot; algorithm","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"}],"returns":"int"},"strncasecmp":{"desc":"Binary safe case-insensitive string comparison of the first n characters","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"},{"required":"yes","param":"int $len"}],"returns":"int"},"strncmp":{"desc":"Binary safe string comparison of the first n characters","params":[{"required":"yes","param":"string $str1"},{"required":"yes","param":"string $str2"},{"required":"yes","param":"int $len"}],"returns":"int"},"strpos":{"desc":"Find position of first occurrence of a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"mixed $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"strripos":{"desc":"Find position of last occurrence of a case-insensitive string in a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"strrpos":{"desc":"Find the position of the last occurrence of a substring in a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"int"},"strspn":{"desc":"Finds the length of the first segment of a string consisting   entirely of characters contained within a given mask.","params":[{"required":"yes","param":"string $subject"},{"required":"yes","param":"string $mask"},{"required":"no","param":"int $start = &#039;&#039;"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"strtotime":{"desc":"Parse about any English textual datetime description into a Unix timestamp","params":[{"required":"yes","param":"string $time"},{"required":"no","param":"int $now = &#039;&#039;"}],"returns":"int"},"substr_compare":{"desc":"Binary safe comparison of two strings from an offset, up to length characters","params":[{"required":"yes","param":"string $main_str"},{"required":"yes","param":"string $str"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"bool $case_insensitivity = false"}],"returns":"int"},"substr_count":{"desc":"Count the number of substring occurrences","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"int"},"svn_fs_check_path":{"desc":"Determines what kind of item lives at path in a given repository fsroot","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"}],"returns":"int"},"svn_fs_file_length":{"desc":"Returns the length of a file from a given version of the fs","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"}],"returns":"int"},"svn_fs_node_created_rev":{"desc":"Returns the revision in which path under fsroot was created","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"}],"returns":"int"},"svn_fs_youngest_rev":{"desc":"Returns the number of the youngest revision in the filesystem","params":[{"required":"yes","param":"resource $fs"}],"returns":"int"},"svn_repos_fs_commit_txn":{"desc":"Commits a transaction and returns the new revision","params":[{"required":"yes","param":"resource $txn"}],"returns":"int"},"svn_update":{"desc":"Update working copy","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"int $revno = SVN_REVISION_HEAD"},{"required":"no","param":"bool $recurse = true"}],"returns":"int"},"swf_getframe":{"desc":"Get the frame number of the current frame","params":[],"returns":"int"},"swf_nextid":{"desc":"Returns the next free object id","params":[],"returns":"int"},"sybase_affected_rows":{"desc":"Gets number of affected rows in last query","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"int"},"sybase_num_fields":{"desc":"Gets the number of fields in a result set","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"sybase_num_rows":{"desc":"Get number of rows in a result set","params":[{"required":"yes","param":"resource $result"}],"returns":"int"},"tidy_access_count":{"desc":"Returns the Number of Tidy accessibility warnings encountered for specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"tidy_config_count":{"desc":"Returns the Number of Tidy configuration errors encountered for specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"tidy_error_count":{"desc":"Returns the Number of Tidy errors encountered for specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"tidy_get_html_ver":{"desc":"Get the Detected HTML version for the specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"tidy_get_status":{"desc":"Get status of specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"tidy_warning_count":{"desc":"Returns the Number of Tidy warnings encountered for specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"int"},"time":{"desc":"Return current Unix timestamp","params":[],"returns":"int"},"transliterator_get_error_code":{"desc":"Get last error code","params":[],"returns":"int"},"udm_api_version":{"desc":"Get mnoGoSearch API version","params":[],"returns":"int"},"udm_check_stored":{"desc":"Check connection to stored","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"int $link"},{"required":"yes","param":"string $doc_id"}],"returns":"int"},"udm_close_stored":{"desc":"Close connection to stored","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"int $link"}],"returns":"int"},"udm_crc32":{"desc":"Return CRC32 checksum of given string","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $str"}],"returns":"int"},"udm_errno":{"desc":"Get mnoGoSearch error number","params":[{"required":"yes","param":"resource $agent"}],"returns":"int"},"udm_free_agent":{"desc":"Free mnoGoSearch session","params":[{"required":"yes","param":"resource $agent"}],"returns":"int"},"udm_get_doc_count":{"desc":"Get total number of documents in database","params":[{"required":"yes","param":"resource $agent"}],"returns":"int"},"udm_hash32":{"desc":"Return Hash32 checksum of gived string","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $str"}],"returns":"int"},"udm_open_stored":{"desc":"Open connection to stored","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $storedaddr"}],"returns":"int"},"umask":{"desc":"Changes the current umask","params":[{"required":"no","param":"int $mask = &#039;&#039;"}],"returns":"int"},"unixtojd":{"desc":"Convert Unix timestamp to Julian Day","params":[{"required":"no","param":"int $timestamp = time("}],"returns":"int"},"variant_cmp":{"desc":"Compares two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"},{"required":"no","param":"int $lcid = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"int"},"variant_date_to_timestamp":{"desc":"Converts a variant date/time value to Unix timestamp","params":[{"required":"yes","param":"variant $variant"}],"returns":"int"},"variant_get_type":{"desc":"Returns the type of a variant object","params":[{"required":"yes","param":"variant $variant"}],"returns":"int"},"vfprintf":{"desc":"Write a formatted string to a stream","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $format"},{"required":"yes","param":"array $args"}],"returns":"int"},"vprintf":{"desc":"Output a formatted string","params":[{"required":"yes","param":"string $format"},{"required":"yes","param":"array $args"}],"returns":"int"},"win32_continue_service":{"desc":"Resumes a paused service","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"int"},"win32_get_last_control_message":{"desc":"Returns the last control message that was sent to this service","params":[],"returns":"int"},"win32_pause_service":{"desc":"Pauses a service","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"int"},"win32_start_service":{"desc":"Starts a service","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"int"},"win32_stop_service":{"desc":"Stops a service","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"int"},"xdiff_file_bdiff_size":{"desc":"Read a size of file created by applying a binary diff","params":[{"required":"yes","param":"string $file"}],"returns":"int"},"xdiff_string_bdiff_size":{"desc":"Read a size of file created by applying a binary diff","params":[{"required":"yes","param":"string $patch"}],"returns":"int"},"xmlrpc_server_add_introspection_data":{"desc":"Adds introspection documentation","params":[{"required":"yes","param":"resource $server"},{"required":"yes","param":"array $desc"}],"returns":"int"},"xmlrpc_server_destroy":{"desc":"Destroys server resources","params":[{"required":"yes","param":"resource $server"}],"returns":"int"},"xml_get_current_byte_index":{"desc":"Get current byte index for an XML parser","params":[{"required":"yes","param":"resource $parser"}],"returns":"int"},"xml_get_current_column_number":{"desc":"Get current column number for an XML parser","params":[{"required":"yes","param":"resource $parser"}],"returns":"int"},"xml_get_current_line_number":{"desc":"Get current line number for an XML parser","params":[{"required":"yes","param":"resource $parser"}],"returns":"int"},"xml_get_error_code":{"desc":"Get XML parser error code","params":[{"required":"yes","param":"resource $parser"}],"returns":"int"},"xml_parse":{"desc":"Start parsing an XML document","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"string $data"},{"required":"no","param":"bool $is_final = false"}],"returns":"int"},"xml_parse_into_struct":{"desc":"Parse XML data into an array structure","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"string $data"},{"required":"yes","param":"array $values"},{"required":"no","param":"array $index = &#039;&#039;"}],"returns":"int"},"xslt_errno":{"desc":"Returns an error number","params":[{"required":"yes","param":"resource $xh"}],"returns":"int"},"xslt_getopt":{"desc":"Get options on a given xsl processor","params":[{"required":"yes","param":"resource $processor"}],"returns":"int"},"yaz_errno":{"desc":"Returns error number","params":[{"required":"yes","param":"resource $id"}],"returns":"int"},"yaz_hits":{"desc":"Returns number of hits for last search","params":[{"required":"yes","param":"resource $id"},{"required":"no","param":"array $searchresult = &#039;&#039;"}],"returns":"int"},"yp_errno":{"desc":"Returns the error code of the previous operation","params":[],"returns":"int"},"yp_order":{"desc":"Returns the order number for a map","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"}],"returns":"int"},"zend_thread_id":{"desc":"Returns a unique identifier for the current thread","params":[],"returns":"int"},"zip_entry_compressedsize":{"desc":"Retrieve the compressed size of a directory entry","params":[{"required":"yes","param":"resource $zip_entry"}],"returns":"int"},"zip_entry_filesize":{"desc":"Retrieve the actual file size of a directory entry","params":[{"required":"yes","param":"resource $zip_entry"}],"returns":"int"},"apc_compile_file":{"desc":"Stores a file in the bytecode cache, bypassing all filters.","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $atomic = true"}],"returns":"mixed"},"apc_delete":{"desc":"Removes a stored variable from the cache","params":[{"required":"yes","param":"string $key"}],"returns":"mixed"},"apc_delete_file":{"desc":"Deletes files from the opcode cache","params":[{"required":"yes","param":"mixed $keys"}],"returns":"mixed"},"apc_exists":{"desc":"Checks if APC key exists","params":[{"required":"yes","param":"mixed $keys"}],"returns":"mixed"},"apc_fetch":{"desc":"Fetch a stored variable from the cache","params":[{"required":"yes","param":"mixed $key"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"mixed"},"array_rand":{"desc":"Pick one or more random entries out of an array","params":[{"required":"yes","param":"array $input"},{"required":"no","param":"int $num_req = 1"}],"returns":"mixed"},"array_reduce":{"desc":"Iteratively reduce the array to a single value using a callback function","params":[{"required":"yes","param":"array $input"},{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $initial = &#039;&#039;"}],"returns":"mixed"},"array_search":{"desc":"Searches the array for a given value and returns the corresponding key if successful","params":[{"required":"yes","param":"mixed $needle"},{"required":"yes","param":"array $haystack"},{"required":"no","param":"bool $strict = false"}],"returns":"mixed"},"assert_options":{"desc":"Set/get the various assert flags","params":[{"required":"yes","param":"int $what"},{"required":"no","param":"mixed $value = &#039;&#039;"}],"returns":"mixed"},"bzcompress":{"desc":"Compress a string into bzip2 encoded data","params":[{"required":"yes","param":"string $source"},{"required":"no","param":"int $blocksize = 4"},{"required":"no","param":"int $workfactor = &#039;&#039;"}],"returns":"mixed"},"bzdecompress":{"desc":"Decompresses bzip2 encoded data","params":[{"required":"yes","param":"string $source"},{"required":"no","param":"int $small = &#039;&#039;"}],"returns":"mixed"},"call_user_func":{"desc":"Call a user function given by the first parameter","params":[{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $parameter = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"call_user_func_array":{"desc":"Call a user function given with an array of parameters","params":[{"required":"yes","param":"callback $function"},{"required":"yes","param":"array $param_arr"}],"returns":"mixed"},"call_user_method":{"desc":"Call a user method on an specific object [deprecated]","params":[{"required":"yes","param":"string $method_name"},{"required":"yes","param":"object $obj"},{"required":"no","param":"mixed $parameter = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"call_user_method_array":{"desc":"Call a user method given with an array of parameters [deprecated]","params":[{"required":"yes","param":"string $method_name"},{"required":"yes","param":"object $obj"},{"required":"yes","param":"array $params"}],"returns":"mixed"},"constant":{"desc":"Returns the value of a constant","params":[{"required":"yes","param":"string $name"}],"returns":"mixed"},"count_chars":{"desc":"Return information about characters used in a string","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"mixed"},"cubrid_fetch":{"desc":"Fetch the next row from a result set","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $type = CUBRID_BOTH"}],"returns":"mixed"},"cubrid_get":{"desc":"Get a column using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"},{"required":"no","param":"mixed $attr = &#039;&#039;"}],"returns":"mixed"},"curl_exec":{"desc":"Perform a cURL session","params":[{"required":"yes","param":"resource $ch"}],"returns":"mixed"},"curl_getinfo":{"desc":"Get information regarding a specific transfer","params":[{"required":"yes","param":"resource $ch"},{"required":"no","param":"int $opt = &#039;&#039;"}],"returns":"mixed"},"current":{"desc":"Return the current element in an array","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"date_sunrise":{"desc":"Returns time of sunrise for a given day and location","params":[{"required":"yes","param":"int $timestamp"},{"required":"no","param":"int $format = SUNFUNCS_RET_STRING"},{"required":"no","param":"float $latitude = ini_get(&quot;date.default_latitude&quot;)"},{"required":"no","param":"float $longitude = ini_get(&quot;date.default_longitude&quot;)"},{"required":"no","param":"float $zenith = ini_get(&quot;date.sunrise_zenith&quot;)"},{"required":"no","param":"float $gmt_offset = &#039;&#039;"}],"returns":"mixed"},"date_sunset":{"desc":"Returns time of sunset for a given day and location","params":[{"required":"yes","param":"int $timestamp"},{"required":"no","param":"int $format = SUNFUNCS_RET_STRING"},{"required":"no","param":"float $latitude = ini_get(&quot;date.default_latitude&quot;)"},{"required":"no","param":"float $longitude = ini_get(&quot;date.default_longitude&quot;)"},{"required":"no","param":"float $zenith = ini_get(&quot;date.sunset_zenith&quot;)"},{"required":"no","param":"float $gmt_offset = &#039;&#039;"}],"returns":"mixed"},"db2_autocommit":{"desc":"Returns or sets the AUTOCOMMIT state for a database connection","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"bool $value = &#039;&#039;"}],"returns":"mixed"},"db2_result":{"desc":"Returns a single column from a row in the result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"mixed"},"dba_key_split":{"desc":"Splits a key in string representation into array representation","params":[{"required":"yes","param":"mixed $key"}],"returns":"mixed"},"dbplus_close":{"desc":"Close a relation","params":[{"required":"yes","param":"resource $relation"}],"returns":"mixed"},"dbplus_rcrtexact":{"desc":"Creates an exact but empty copy of a relation including indices","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"resource $relation"},{"required":"no","param":"bool $overwrite = &#039;&#039;"}],"returns":"mixed"},"dbplus_rcrtlike":{"desc":"Creates an empty copy of a relation with default indices","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"resource $relation"},{"required":"no","param":"int $overwrite = &#039;&#039;"}],"returns":"mixed"},"dbplus_rkeys":{"desc":"Specify new primary key for a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"mixed $domlist"}],"returns":"mixed"},"dbplus_rsecindex":{"desc":"Create a new secondary index for a relation","params":[{"required":"yes","param":"resource $relation"},{"required":"yes","param":"mixed $domlist"},{"required":"yes","param":"int $type"}],"returns":"mixed"},"dbx_fetch_row":{"desc":"Fetches rows from a query-result that had the   DBX_RESULT_UNBUFFERED flag set","params":[{"required":"yes","param":"object $result_identifier"}],"returns":"mixed"},"dbx_query":{"desc":"Send a query and fetch all results (if any)","params":[{"required":"yes","param":"object $link_identifier"},{"required":"yes","param":"string $sql_statement"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"mixed"},"dio_fcntl":{"desc":"Performs a c library fcntl on fd","params":[{"required":"yes","param":"resource $fd"},{"required":"yes","param":"int $cmd"},{"required":"no","param":"mixed $args = &#039;&#039;"}],"returns":"mixed"},"enchant_broker_list_dicts":{"desc":"Returns a list of available dictionaries","params":[{"required":"yes","param":"resource $broker"}],"returns":"mixed"},"enchant_dict_describe":{"desc":"Describes an individual dictionary","params":[{"required":"yes","param":"resource $dict"}],"returns":"mixed"},"end":{"desc":"Set the internal pointer of an array to its last element","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"eval":{"desc":"Evaluate a string as PHP code","params":[{"required":"yes","param":"string $code_str"}],"returns":"mixed"},"fbsql_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $row = &#039;&#039;"},{"required":"no","param":"mixed $field = &#039;&#039;"}],"returns":"mixed"},"fdf_get_opt":{"desc":"Gets a value from the opt array of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"no","param":"int $element = -1"}],"returns":"mixed"},"fdf_get_value":{"desc":"Get the value of a field","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"yes","param":"string $fieldname"},{"required":"no","param":"int $which = -1"}],"returns":"mixed"},"filter_input":{"desc":"Gets a specific external variable by name and optionally filters it","params":[{"required":"yes","param":"int $type"},{"required":"yes","param":"string $variable_name"},{"required":"no","param":"int $filter = FILTER_DEFAULT"},{"required":"no","param":"mixed $options = &#039;&#039;"}],"returns":"mixed"},"filter_input_array":{"desc":"Gets external variables and optionally filters them","params":[{"required":"yes","param":"int $type"},{"required":"no","param":"mixed $definition = &#039;&#039;"}],"returns":"mixed"},"filter_var":{"desc":"Filters a variable with a specified filter","params":[{"required":"yes","param":"mixed $variable"},{"required":"no","param":"int $filter = FILTER_DEFAULT"},{"required":"no","param":"mixed $options = &#039;&#039;"}],"returns":"mixed"},"filter_var_array":{"desc":"Gets multiple variables and optionally filters them","params":[{"required":"yes","param":"array $data"},{"required":"no","param":"mixed $definition = &#039;&#039;"}],"returns":"mixed"},"forward_static_call":{"desc":"Call a static method","params":[{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $parameter = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"forward_static_call_array":{"desc":"Call a static method and pass the arguments as array","params":[{"required":"yes","param":"callback $function"},{"required":"yes","param":"array $parameters"}],"returns":"mixed"},"fscanf":{"desc":"Parses input from a file according to a format","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"ftp_get_option":{"desc":"Retrieves various runtime behaviours of the current FTP stream","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"int $option"}],"returns":"mixed"},"func_get_arg":{"desc":"Return an item from the argument list","params":[{"required":"yes","param":"int $arg_num"}],"returns":"mixed"},"gettimeofday":{"desc":"Get current time","params":[{"required":"no","param":"bool $return_float = &#039;&#039;"}],"returns":"mixed"},"get_browser":{"desc":"Tells what the user&#039;s browser is capable of","params":[{"required":"no","param":"string $user_agent = &#039;&#039;"},{"required":"no","param":"bool $return_array = false"}],"returns":"mixed"},"gupnp_service_action_get":{"desc":"Retrieves the specified action arguments","params":[{"required":"yes","param":"resource $action"},{"required":"yes","param":"string $name"},{"required":"yes","param":"int $type"}],"returns":"mixed"},"gupnp_service_info_get_introspection":{"desc":"Get resource introspection of service","params":[{"required":"yes","param":"resource $proxy"},{"required":"no","param":"mixed $callback = &#039;&#039;"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"mixed"},"gupnp_service_proxy_action_get":{"desc":"Send action to the service and get value","params":[{"required":"yes","param":"resource $proxy"},{"required":"yes","param":"string $action"},{"required":"yes","param":"string $name"},{"required":"yes","param":"int $type"}],"returns":"mixed"},"highlight_file":{"desc":"Syntax highlighting of a file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $return = false"}],"returns":"mixed"},"highlight_string":{"desc":"Syntax highlighting of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"bool $return = false"}],"returns":"mixed"},"hw_GetObject":{"desc":"Object record","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"mixed $objectID"},{"required":"no","param":"string $query = &#039;&#039;"}],"returns":"mixed"},"hw_getremotechildren":{"desc":"Gets children of remote document","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"string $object_record"}],"returns":"mixed"},"ibase_backup":{"desc":"Initiates a backup task in the service manager and returns immediately","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $source_db"},{"required":"yes","param":"string $dest_file"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"bool $verbose = false"}],"returns":"mixed"},"ibase_blob_close":{"desc":"Close blob","params":[{"required":"yes","param":"resource $blob_handle"}],"returns":"mixed"},"ibase_gen_id":{"desc":"Increments the named generator and returns its new value","params":[{"required":"yes","param":"string $generator"},{"required":"no","param":"int $increment = 1"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"mixed"},"ibase_restore":{"desc":"Initiates a restore task in the service manager and returns immediately","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $source_file"},{"required":"yes","param":"string $dest_db"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"bool $verbose = false"}],"returns":"mixed"},"iconv_get_encoding":{"desc":"Retrieve internal configuration variables of iconv extension","params":[{"required":"no","param":"string $type = &quot;all&quot;"}],"returns":"mixed"},"imap_timeout":{"desc":"Set or fetch imap timeout","params":[{"required":"yes","param":"int $timeout_type"},{"required":"no","param":"int $timeout = -1"}],"returns":"mixed"},"ingres_prepare":{"desc":"Prepare a query for later execution","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"}],"returns":"mixed"},"ingres_query":{"desc":"Send an SQL query to Ingres","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"},{"required":"no","param":"array $params = &#039;&#039;"},{"required":"no","param":"string $types = &#039;&#039;"}],"returns":"mixed"},"ingres_unbuffered_query":{"desc":"Send an unbuffered  SQL query to Ingres","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"},{"required":"no","param":"array $params = &#039;&#039;"},{"required":"no","param":"string $types = &#039;&#039;"}],"returns":"mixed"},"iptcembed":{"desc":"Embeds binary IPTC data into a JPEG image","params":[{"required":"yes","param":"string $iptcdata"},{"required":"yes","param":"string $jpeg_file_name"},{"required":"no","param":"int $spool = &#039;&#039;"}],"returns":"mixed"},"JDDayOfWeek":{"desc":"Returns the day of the week","params":[{"required":"yes","param":"int $julianday"},{"required":"no","param":"int $mode = CAL_DOW_DAYNO"}],"returns":"mixed"},"json_decode":{"desc":"Decodes a JSON string","params":[{"required":"yes","param":"string $json"},{"required":"no","param":"bool $assoc = false"},{"required":"no","param":"int $depth = 512"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"mixed"},"key":{"desc":"Fetch a key from an array","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"ldap_compare":{"desc":"Compare value of attribute found in entry specified with DN","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $dn"},{"required":"yes","param":"string $attribute"},{"required":"yes","param":"string $value"}],"returns":"mixed"},"maxdb_fetch_array":{"desc":"Fetch a result row as an associative, a numeric array, or both","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $resulttype = &#039;&#039;"}],"returns":"mixed"},"maxdb_fetch_field":{"desc":"Returns the next field in the result set","params":[{"required":"yes","param":"resource $result"}],"returns":"mixed"},"maxdb_fetch_fields":{"desc":"Returns an array of resources representing the fields in a result set","params":[{"required":"yes","param":"resource $result"}],"returns":"mixed"},"maxdb_fetch_field_direct":{"desc":"Fetch meta-data for a single field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $fieldnr"}],"returns":"mixed"},"maxdb_fetch_row":{"desc":"Get a result row as an enumerated array","params":[{"required":"yes","param":"resource $result"}],"returns":"mixed"},"maxdb_insert_id":{"desc":"Returns the auto generated id used in the last query","params":[{"required":"yes","param":"resource $link"}],"returns":"mixed"},"maxdb_query":{"desc":"Performs a query on the database","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $query"},{"required":"no","param":"int $resultmode = &#039;&#039;"}],"returns":"mixed"},"maxdb_stmt_prepare":{"desc":"Prepare an SQL statement for execution","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"string $query"}],"returns":"mixed"},"mb_detect_order":{"desc":"Set/Get character encoding detection order","params":[{"required":"no","param":"mixed $encoding_list = &#039;&#039;"}],"returns":"mixed"},"mb_get_info":{"desc":"Get internal settings of mbstring","params":[{"required":"no","param":"string $type = &quot;all&quot;"}],"returns":"mixed"},"mb_http_input":{"desc":"Detect HTTP input character encoding","params":[{"required":"no","param":"string $type = &quot;&quot;"}],"returns":"mixed"},"mb_http_output":{"desc":"Set/Get HTTP output character encoding","params":[{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"mixed"},"mb_internal_encoding":{"desc":"Set/Get internal character encoding","params":[{"required":"no","param":"string $encoding = mb_internal_encoding("}],"returns":"mixed"},"mb_language":{"desc":"Set/Get current language","params":[{"required":"no","param":"string $language = &#039;&#039;"}],"returns":"mixed"},"microtime":{"desc":"Return current Unix timestamp with microseconds","params":[{"required":"no","param":"bool $get_as_float = &#039;&#039;"}],"returns":"mixed"},"mssql_execute":{"desc":"Executes a stored procedure on a MS SQL server database","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"bool $skip_results = false"}],"returns":"mixed"},"mssql_query":{"desc":"Send MS SQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"},{"required":"no","param":"int $batch_size = &#039;&#039;"}],"returns":"mixed"},"mysqli_fetch_all":{"desc":"Fetches all result rows as an associative array, a numeric array, or both","params":[{"required":"no","param":"int $resulttype = MYSQLI_NUM"},{"required":"yes","param":"mysqli_result $result"}],"returns":"mixed"},"mysqli_fetch_array":{"desc":"Fetch a result row as an associative, a numeric array, or both","params":[{"required":"no","param":"int $resulttype = MYSQLI_BOTH"},{"required":"yes","param":"mysqli_result $result"}],"returns":"mixed"},"mysqli_fetch_row":{"desc":"Get a result row as an enumerated array","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"mixed"},"mysqli_insert_id":{"desc":"Returns the auto generated id used in the last query","params":[{"required":"yes","param":"mysqli $link"}],"returns":"mixed"},"mysqli_query":{"desc":"Performs a query on the database","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"int $resultmode = &#039;&#039;"},{"required":"yes","param":"mysqli $link"}],"returns":"mixed"},"mysqli_stmt_insert_id":{"desc":"Get the ID generated from the previous INSERT operation","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"mixed"},"newt_checkbox_tree_get_current":{"desc":"Returns checkbox tree selected item","params":[{"required":"yes","param":"resource $checkboxtree"}],"returns":"mixed"},"newt_listitem_get_data":{"desc":"","params":[{"required":"yes","param":"resource $item"}],"returns":"mixed"},"next":{"desc":"Advance the internal array pointer of an array","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"numfmt_parse":{"desc":"Parse a number","params":[{"required":"yes","param":"string $value"},{"required":"no","param":"int $type = &#039;&#039;"},{"required":"no","param":"int $position = &#039;&#039;"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"mixed"},"oci_field_type":{"desc":"Returns field&#039;s data type","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $field"}],"returns":"mixed"},"oci_result":{"desc":"Returns field&#039;s value from the fetched row","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"mixed $field"}],"returns":"mixed"},"odbc_autocommit":{"desc":"Toggle autocommit behaviour","params":[{"required":"yes","param":"resource $connection_id"},{"required":"no","param":"bool $OnOff = false"}],"returns":"mixed"},"odbc_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"mixed $field"}],"returns":"mixed"},"openal_listener_get":{"desc":"Retrieve a listener property","params":[{"required":"yes","param":"int $property"}],"returns":"mixed"},"openal_source_get":{"desc":"Retrieve an OpenAL source property","params":[{"required":"yes","param":"resource $source"},{"required":"yes","param":"int $property"}],"returns":"mixed"},"openssl_csr_new":{"desc":"Generates a CSR","params":[{"required":"yes","param":"array $dn"},{"required":"yes","param":"resource $privkey"},{"required":"no","param":"array $configargs = &#039;&#039;"},{"required":"no","param":"array $extraattribs = &#039;&#039;"}],"returns":"mixed"},"openssl_pkcs7_verify":{"desc":"Verifies the signature of an S/MIME signed message","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $flags"},{"required":"no","param":"string $outfilename = &#039;&#039;"},{"required":"no","param":"array $cainfo = &#039;&#039;"},{"required":"no","param":"string $extracerts = &#039;&#039;"},{"required":"no","param":"string $content = &#039;&#039;"}],"returns":"mixed"},"parse_url":{"desc":"Parse a URL and return its components","params":[{"required":"yes","param":"string $url"},{"required":"no","param":"int $component = -1"}],"returns":"mixed"},"pathinfo":{"desc":"Returns information about a file path","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME"}],"returns":"mixed"},"pg_delete":{"desc":"Deletes records","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $assoc_array"},{"required":"no","param":"int $options = PGSQL_DML_EXEC"}],"returns":"mixed"},"pg_field_table":{"desc":"Returns the name or oid of the tables field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"},{"required":"no","param":"bool $oid_only = false"}],"returns":"mixed"},"pg_insert":{"desc":"Insert array into table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $assoc_array"},{"required":"no","param":"int $options = PGSQL_DML_EXEC"}],"returns":"mixed"},"pg_result_status":{"desc":"Get status of query result","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $type = &#039;&#039;"}],"returns":"mixed"},"pg_select":{"desc":"Select records","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $assoc_array"},{"required":"no","param":"int $options = PGSQL_DML_EXEC"}],"returns":"mixed"},"pg_update":{"desc":"Update table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"array $data"},{"required":"yes","param":"array $condition"},{"required":"no","param":"int $options = PGSQL_DML_EXEC"}],"returns":"mixed"},"preg_filter":{"desc":"Perform a regular expression search and replace","params":[{"required":"yes","param":"mixed $pattern"},{"required":"yes","param":"mixed $replacement"},{"required":"yes","param":"mixed $subject"},{"required":"no","param":"int $limit = -1"},{"required":"no","param":"int $count = &#039;&#039;"}],"returns":"mixed"},"preg_replace":{"desc":"Perform a regular expression search and replace","params":[{"required":"yes","param":"mixed $pattern"},{"required":"yes","param":"mixed $replacement"},{"required":"yes","param":"mixed $subject"},{"required":"no","param":"int $limit = -1"},{"required":"no","param":"int $count = &#039;&#039;"}],"returns":"mixed"},"preg_replace_callback":{"desc":"Perform a regular expression search and replace using a callback","params":[{"required":"yes","param":"mixed $pattern"},{"required":"yes","param":"callback $callback"},{"required":"yes","param":"mixed $subject"},{"required":"no","param":"int $limit = -1"},{"required":"no","param":"int $count = &#039;&#039;"}],"returns":"mixed"},"prev":{"desc":"Rewind the internal array pointer","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"printer_get_option":{"desc":"Retrieve printer configuration data","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"string $option"}],"returns":"mixed"},"print_r":{"desc":"Prints human-readable information about a variable","params":[{"required":"yes","param":"mixed $expression"},{"required":"no","param":"bool $return = false"}],"returns":"mixed"},"radius_get_attr":{"desc":"Extracts an attribute","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"mixed"},"readline_info":{"desc":"Gets/sets various internal readline variables","params":[{"required":"no","param":"string $varname = &#039;&#039;"},{"required":"no","param":"string $newvalue = &#039;&#039;"}],"returns":"mixed"},"reset":{"desc":"Set the internal pointer of an array to its first element","params":[{"required":"yes","param":"array $array"}],"returns":"mixed"},"resourcebundle_get":{"desc":"Get data from the bundle","params":[{"required":"yes","param":"string|int $index"},{"required":"yes","param":"ResourceBundle $r"}],"returns":"mixed"},"rpm_get_tag":{"desc":"Retrieves a header tag from an RPM file","params":[{"required":"yes","param":"resource $rpmr"},{"required":"yes","param":"int $tagnum"}],"returns":"mixed"},"runkit_sandbox_output_handler":{"desc":"Specify a function to capture and/or process output from a runkit sandbox","params":[{"required":"yes","param":"object $sandbox"},{"required":"no","param":"mixed $callback = &#039;&#039;"}],"returns":"mixed"},"set_error_handler":{"desc":"Sets a user-defined error handler function","params":[{"required":"yes","param":"callback $error_handler"},{"required":"no","param":"int $error_types = E_ALL | E_STRICT"}],"returns":"mixed"},"shm_get_var":{"desc":"Returns a variable from shared memory","params":[{"required":"yes","param":"resource $shm_identifier"},{"required":"yes","param":"int $variable_key"}],"returns":"mixed"},"socket_get_option":{"desc":"Gets socket options for the socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"int $level"},{"required":"yes","param":"int $optname"}],"returns":"mixed"},"sqlite_column":{"desc":"Fetches a column from the current row of a result set","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"mixed $index_or_name"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"mixed"},"sscanf":{"desc":"Parses input from a string according to a format","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"ssh2_auth_none":{"desc":"Authenticate as &quot;none&quot;","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $username"}],"returns":"mixed"},"stream_socket_enable_crypto":{"desc":"Turns encryption on/off on an already connected socket","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"bool $enable"},{"required":"no","param":"int $crypto_type = &#039;&#039;"},{"required":"no","param":"resource $session_stream = &#039;&#039;"}],"returns":"mixed"},"str_ireplace":{"desc":"Case-insensitive version of str_replace.","params":[{"required":"yes","param":"mixed $search"},{"required":"yes","param":"mixed $replace"},{"required":"yes","param":"mixed $subject"},{"required":"no","param":"int $count = &#039;&#039;"}],"returns":"mixed"},"str_replace":{"desc":"Replace all occurrences of the search string with the replacement string","params":[{"required":"yes","param":"mixed $search"},{"required":"yes","param":"mixed $replace"},{"required":"yes","param":"mixed $subject"},{"required":"no","param":"int $count = &#039;&#039;"}],"returns":"mixed"},"str_word_count":{"desc":"Return information about words used in a string","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $format = &#039;&#039;"},{"required":"no","param":"string $charlist = &#039;&#039;"}],"returns":"mixed"},"substr_replace":{"desc":"Replace text within a portion of a string","params":[{"required":"yes","param":"mixed $string"},{"required":"yes","param":"mixed $replacement"},{"required":"yes","param":"mixed $start"},{"required":"no","param":"mixed $length = &#039;&#039;"}],"returns":"mixed"},"sybase_query":{"desc":"Sends a Sybase query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"mixed"},"tidy_getopt":{"desc":"Returns the value of the specified configuration option for the tidy document","params":[{"required":"yes","param":"string $option"},{"required":"yes","param":"tidy $object"}],"returns":"mixed"},"time_nanosleep":{"desc":"Delay for a number of seconds and nanoseconds","params":[{"required":"yes","param":"int $seconds"},{"required":"yes","param":"int $nanoseconds"}],"returns":"mixed"},"unserialize":{"desc":"Creates a PHP value from a stored representation","params":[{"required":"yes","param":"string $str"}],"returns":"mixed"},"variant_abs":{"desc":"Returns the absolute value of a variant","params":[{"required":"yes","param":"mixed $val"}],"returns":"mixed"},"variant_add":{"desc":"&quot;Adds&quot; two variant values together and returns the result","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_and":{"desc":"Performs a bitwise AND operation between two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_cat":{"desc":"concatenates two variant values together and returns the result","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_div":{"desc":"Returns the result from dividing two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_eqv":{"desc":"Performs a bitwise equivalence on two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_fix":{"desc":"Returns the integer portion of a variant","params":[{"required":"yes","param":"mixed $variant"}],"returns":"mixed"},"variant_idiv":{"desc":"Converts variants to integers and then returns the result from dividing them","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_imp":{"desc":"Performs a bitwise implication on two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_int":{"desc":"Returns the integer portion of a variant","params":[{"required":"yes","param":"mixed $variant"}],"returns":"mixed"},"variant_mod":{"desc":"Divides two variants and returns only the remainder","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_mul":{"desc":"Multiplies the values of the two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_neg":{"desc":"Performs logical negation on a variant","params":[{"required":"yes","param":"mixed $variant"}],"returns":"mixed"},"variant_not":{"desc":"Performs bitwise not negation on a variant","params":[{"required":"yes","param":"mixed $variant"}],"returns":"mixed"},"variant_or":{"desc":"Performs a logical disjunction on two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_pow":{"desc":"Returns the result of performing the power function with two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_round":{"desc":"Rounds a variant to the specified number of decimal places","params":[{"required":"yes","param":"mixed $variant"},{"required":"yes","param":"int $decimals"}],"returns":"mixed"},"variant_sub":{"desc":"Subtracts the value of the right variant from the left variant value","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"variant_xor":{"desc":"Performs a logical exclusion on two variants","params":[{"required":"yes","param":"mixed $left"},{"required":"yes","param":"mixed $right"}],"returns":"mixed"},"var_export":{"desc":"Outputs or returns a parsable string representation of a variable","params":[{"required":"yes","param":"mixed $expression"},{"required":"no","param":"bool $return = false"}],"returns":"mixed"},"version_compare":{"desc":"Compares two &quot;PHP-standardized&quot; version number strings","params":[{"required":"yes","param":"string $version1"},{"required":"yes","param":"string $version2"},{"required":"no","param":"string $operator = &#039;&#039;"}],"returns":"mixed"},"w32api_invoke_function":{"desc":"Invokes function funcname with the arguments passed after the function name","params":[{"required":"yes","param":"string $funcname"},{"required":"yes","param":"mixed $argument"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"mixed"},"wddx_deserialize":{"desc":"Unserializes a WDDX packet","params":[{"required":"yes","param":"string $packet"}],"returns":"mixed"},"win32_create_service":{"desc":"Creates a new service entry in the SCM database","params":[{"required":"yes","param":"array $details"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"mixed"},"win32_delete_service":{"desc":"Deletes a service entry from the SCM database","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"mixed"},"win32_query_service_status":{"desc":"Queries the status of a service","params":[{"required":"yes","param":"string $servicename"},{"required":"no","param":"string $machine = &#039;&#039;"}],"returns":"mixed"},"win32_start_service_ctrl_dispatcher":{"desc":"Registers the script with the SCM, so that it can act as the service with the given name","params":[{"required":"yes","param":"string $name"}],"returns":"mixed"},"wincache_ucache_dec":{"desc":"Decrements the value associated with the key","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"int $dec_by = 1"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"mixed"},"wincache_ucache_get":{"desc":"Gets a variable stored in the user cache","params":[{"required":"yes","param":"mixed $key"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"mixed"},"wincache_ucache_inc":{"desc":"Increments the value associated with the key","params":[{"required":"yes","param":"string $key"},{"required":"no","param":"int $inc_by = 1"},{"required":"no","param":"bool $success = &#039;&#039;"}],"returns":"mixed"},"xdiff_file_merge3":{"desc":"Merge 3 files into one","params":[{"required":"yes","param":"string $old_file"},{"required":"yes","param":"string $new_file1"},{"required":"yes","param":"string $new_file2"},{"required":"yes","param":"string $dest"}],"returns":"mixed"},"xdiff_file_patch":{"desc":"Patch a file with an unified diff","params":[{"required":"yes","param":"string $file"},{"required":"yes","param":"string $patch"},{"required":"yes","param":"string $dest"},{"required":"no","param":"int $flags = DIFF_PATCH_NORMAL"}],"returns":"mixed"},"xdiff_string_merge3":{"desc":"Merge 3 strings into one","params":[{"required":"yes","param":"string $old_data"},{"required":"yes","param":"string $new_data1"},{"required":"yes","param":"string $new_data2"},{"required":"no","param":"string $error = &#039;&#039;"}],"returns":"mixed"},"xmlrpc_decode":{"desc":"Decodes XML into native PHP types","params":[{"required":"yes","param":"string $xml"},{"required":"no","param":"string $encoding = &quot;iso-8859-1&quot;"}],"returns":"mixed"},"xmlrpc_decode_request":{"desc":"Decodes XML into native PHP types","params":[{"required":"yes","param":"string $xml"},{"required":"yes","param":"string $method"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"mixed"},"xml_parser_get_option":{"desc":"Get options from an XML parser","params":[{"required":"yes","param":"resource $parser"},{"required":"yes","param":"int $option"}],"returns":"mixed"},"xslt_process":{"desc":"Perform an XSLT transformation","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"string $xmlcontainer"},{"required":"yes","param":"string $xslcontainer"},{"required":"no","param":"string $resultcontainer = &#039;&#039;"},{"required":"no","param":"array $arguments = &#039;&#039;"},{"required":"no","param":"array $parameters = &#039;&#039;"}],"returns":"mixed"},"xslt_setopt":{"desc":"Set options on a given xsl processor","params":[{"required":"yes","param":"resource $processor"},{"required":"yes","param":"int $newmask"}],"returns":"mixed"},"yaml_parse":{"desc":"Parse a YAML stream","params":[{"required":"yes","param":"string $input"},{"required":"no","param":"int $pos = &#039;&#039;"},{"required":"no","param":"int $ndocs = &#039;&#039;"},{"required":"no","param":"array $callbacks = &#039;&#039;"}],"returns":"mixed"},"yaml_parse_file":{"desc":"Parse a YAML stream from a file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $pos = &#039;&#039;"},{"required":"no","param":"int $ndocs = &#039;&#039;"},{"required":"no","param":"array $callbacks = &#039;&#039;"}],"returns":"mixed"},"yaml_parse_url":{"desc":"Parse a Yaml stream from a URL","params":[{"required":"yes","param":"string $url"},{"required":"no","param":"int $pos = &#039;&#039;"},{"required":"no","param":"int $ndocs = &#039;&#039;"},{"required":"no","param":"array $callbacks = &#039;&#039;"}],"returns":"mixed"},"yaz_connect":{"desc":"Prepares for a connection to a Z39.50 server","params":[{"required":"yes","param":"string $zurl"},{"required":"no","param":"mixed $options = &#039;&#039;"}],"returns":"mixed"},"yaz_wait":{"desc":"Wait for Z39.50 requests to complete","params":[{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"mixed"},"zip_open":{"desc":"Open a ZIP file archive","params":[{"required":"yes","param":"string $filename"}],"returns":"mixed"},"zip_read":{"desc":"Read next entry in a ZIP file archive","params":[{"required":"yes","param":"resource $zip"}],"returns":"mixed"},"apache_lookup_uri":{"desc":"Perform a partial request for the specified URI and return all info about it","params":[{"required":"yes","param":"string $filename"}],"returns":"object"},"cairo_matrix_create_scale":{"desc":"Creates a new scaling matrix","params":[{"required":"yes","param":"float $sx"},{"required":"yes","param":"float $sy"}],"returns":"object"},"cairo_matrix_init":{"desc":"Creates a new CairoMatrix object","params":[{"required":"no","param":"float $xx = 1.0"},{"required":"no","param":"float $yx = 0.0"},{"required":"no","param":"float $xy = 0.0"},{"required":"no","param":"float $yy = 1.0"},{"required":"no","param":"float $x0 = 0.0"},{"required":"no","param":"float $y0 = 0.0"}],"returns":"object"},"cairo_matrix_init_identity":{"desc":"Creates a new identity matrix","params":[],"returns":"object"},"cairo_matrix_init_rotate":{"desc":"Creates a new rotated matrix","params":[{"required":"yes","param":"float $radians"}],"returns":"object"},"cairo_matrix_init_scale":{"desc":"Creates a new scaling matrix","params":[{"required":"yes","param":"float $sx"},{"required":"yes","param":"float $sy"}],"returns":"object"},"cairo_matrix_init_translate":{"desc":"Creates a new translation matrix","params":[{"required":"yes","param":"float $tx"},{"required":"yes","param":"float $ty"}],"returns":"object"},"cubrid_fetch_field":{"desc":"Get column information from a result and return as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"object"},"cubrid_fetch_object":{"desc":"Fetche the next row and returns it as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"}],"returns":"object"},"db2_client_info":{"desc":"Returns an object with properties that describe the DB2 database client","params":[{"required":"yes","param":"resource $connection"}],"returns":"object"},"db2_fetch_object":{"desc":"Returns an object with properties representing columns in the fetched row","params":[{"required":"yes","param":"resource $stmt"},{"required":"no","param":"int $row_number = -1"}],"returns":"object"},"db2_server_info":{"desc":"Returns an object with properties that describe the DB2 database server","params":[{"required":"yes","param":"resource $connection"}],"returns":"object"},"dbx_connect":{"desc":"Open a connection/database","params":[{"required":"yes","param":"mixed $module"},{"required":"yes","param":"string $host"},{"required":"yes","param":"string $database"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"int $persistent = &#039;&#039;"}],"returns":"object"},"fbsql_fetch_field":{"desc":"Get column information from a result and return as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"object"},"fbsql_fetch_object":{"desc":"Fetch a result row as an object","params":[{"required":"yes","param":"resource $result"}],"returns":"object"},"http_parse_cookie":{"desc":"Parse HTTP cookie","params":[{"required":"yes","param":"string $cookie"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"array $allowed_extras = &#039;&#039;"}],"returns":"object"},"http_parse_message":{"desc":"Parse HTTP messages","params":[{"required":"yes","param":"string $message"}],"returns":"object"},"http_parse_params":{"desc":"Parse parameter list","params":[{"required":"yes","param":"string $param"},{"required":"no","param":"int $flags = HTTP_PARAMS_DEFAULT"}],"returns":"object"},"http_persistent_handles_count":{"desc":"Stat persistent handles","params":[],"returns":"object"},"ibase_fetch_object":{"desc":"Get an object from a InterBase database","params":[{"required":"yes","param":"resource $result_id"},{"required":"no","param":"int $fetch_flag = &#039;&#039;"}],"returns":"object"},"imap_bodystruct":{"desc":"Read the structure of a specified body section of a specific message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"yes","param":"string $section"}],"returns":"object"},"imap_check":{"desc":"Check current mailbox","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"object"},"imap_fetchstructure":{"desc":"Read the structure of a particular message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"object"},"imap_headerinfo":{"desc":"Read the header of the message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $fromlength = &#039;&#039;"},{"required":"no","param":"int $subjectlength = &#039;&#039;"},{"required":"no","param":"string $defaulthost = &#039;&#039;"}],"returns":"object"},"imap_mailboxmsginfo":{"desc":"Get information about the current mailbox","params":[{"required":"yes","param":"resource $imap_stream"}],"returns":"object"},"imap_rfc822_parse_headers":{"desc":"Parse mail headers from a string","params":[{"required":"yes","param":"string $headers"},{"required":"no","param":"string $defaulthost = &quot;UNKNOWN&quot;"}],"returns":"object"},"imap_status":{"desc":"Returns status information on a mailbox","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"int $options"}],"returns":"object"},"ingres_fetch_object":{"desc":"Fetch a row of result into an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $result_type = &#039;&#039;"}],"returns":"object"},"java_last_exception_get":{"desc":"Get last Java exception","params":[],"returns":"object"},"maxdb_fetch_object":{"desc":"Returns the current row of a result set as an object","params":[{"required":"yes","param":"object $result"}],"returns":"object"},"maxdb_stmt_init":{"desc":"Initializes a statement and returns an resource for use with maxdb_stmt_prepare","params":[{"required":"yes","param":"resource $link"}],"returns":"object"},"maxdb_stmt_store_result":{"desc":"Transfers a result set from a prepared statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"object"},"maxdb_store_result":{"desc":"Transfers a result set from the last query","params":[{"required":"yes","param":"resource $link"}],"returns":"object"},"msql_fetch_field":{"desc":"Get field information","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"object"},"msql_fetch_object":{"desc":"Fetch row as object","params":[{"required":"yes","param":"resource $result"}],"returns":"object"},"mssql_fetch_field":{"desc":"Get field information","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = -1"}],"returns":"object"},"mssql_fetch_object":{"desc":"Fetch row as object","params":[{"required":"yes","param":"resource $result"}],"returns":"object"},"mysqli_fetch_field":{"desc":"Returns the next field in the result set","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"object"},"mysqli_fetch_field_direct":{"desc":"Fetch meta-data for a single field","params":[{"required":"yes","param":"int $fieldnr"},{"required":"yes","param":"mysqli_result $result"}],"returns":"object"},"mysqli_fetch_object":{"desc":"Returns the current row of a result set as an object","params":[{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"},{"required":"yes","param":"mysqli_result $result"}],"returns":"object"},"mysqli_get_charset":{"desc":"Returns a character set object","params":[{"required":"yes","param":"mysqli $link"}],"returns":"object"},"mysqli_stmt_get_warnings":{"desc":"Get result of SHOW WARNINGS","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"object"},"mysql_fetch_field":{"desc":"Get column information from a result and return as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"object"},"mysql_fetch_object":{"desc":"Fetch a result row as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"}],"returns":"object"},"notes_header_info":{"desc":"Open the message msg_number in the specified mailbox on the specified server (leave serv","params":[{"required":"yes","param":"string $server"},{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"int $msg_number"}],"returns":"object"},"oci_fetch_object":{"desc":"Returns the next row from a query as an object","params":[{"required":"yes","param":"resource $statement"}],"returns":"object"},"odbc_fetch_object":{"desc":"Fetch a result row as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $rownumber = &#039;&#039;"}],"returns":"object"},"pg_fetch_object":{"desc":"Fetch a row as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $row = &#039;&#039;"},{"required":"no","param":"int $result_type = PGSQL_ASSOC"},{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"}],"returns":"object"},"simplexml_load_file":{"desc":"Interprets an XML file into an object","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"string $class_name = &quot;SimpleXMLElement&quot;"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"string $ns = &#039;&#039;"},{"required":"no","param":"bool $is_prefix = false"}],"returns":"object"},"simplexml_load_string":{"desc":"Interprets a string of XML into an object","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"string $class_name = &quot;SimpleXMLElement&quot;"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"string $ns = &#039;&#039;"},{"required":"no","param":"bool $is_prefix = false"}],"returns":"object"},"sqlite_fetch_object":{"desc":"Fetches the next row from a result set as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"string $class_name = &#039;&#039;"},{"required":"no","param":"array $ctor_params = &#039;&#039;"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"object"},"stream_bucket_make_writeable":{"desc":"Return a bucket object from the brigade for operating on","params":[{"required":"yes","param":"resource $brigade"}],"returns":"object"},"stream_bucket_new":{"desc":"Create a new bucket for use on the current stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"string $buffer"}],"returns":"object"},"sybase_fetch_field":{"desc":"Get field information from a result","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = -1"}],"returns":"object"},"sybase_fetch_object":{"desc":"Fetch a row as an object","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"mixed $object = &#039;&#039;"}],"returns":"object"},"bbcode_create":{"desc":"Create a BBCode Resource","params":[{"required":"no","param":"array $bbcode_initial_tags = &#039;&#039;"}],"returns":"resource"},"bzopen":{"desc":"Opens a bzip2 compressed file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $mode"}],"returns":"resource"},"crack_opendict":{"desc":"Opens a new CrackLib dictionary","params":[{"required":"yes","param":"string $dictionary"}],"returns":"resource"},"cubrid_connect":{"desc":"Open a connection to a CUBRID Server","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"},{"required":"yes","param":"string $dbname"},{"required":"no","param":"string $userid = &#039;&#039;"},{"required":"no","param":"string $passwd = &#039;&#039;"}],"returns":"resource"},"cubrid_connect_with_url":{"desc":"Establish the environment for connecting to CUBRID server","params":[{"required":"yes","param":"string $conn_url"},{"required":"no","param":"string $userid = &#039;&#039;"},{"required":"no","param":"string $passwd = &#039;&#039;"}],"returns":"resource"},"cubrid_prepare":{"desc":"Prepare an SQL statement for execution","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $prepare_stmt"},{"required":"no","param":"int $option = &#039;&#039;"}],"returns":"resource"},"cubrid_query":{"desc":"Send a CUBRID query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"resource"},"cubrid_unbuffered_query":{"desc":"Perform a query without fetching the results into memory","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"resource"},"curl_copy_handle":{"desc":"Copy a cURL handle along with all of its preferences","params":[{"required":"yes","param":"resource $ch"}],"returns":"resource"},"curl_init":{"desc":"Initialize a cURL session","params":[{"required":"no","param":"string $url = &#039;&#039;"}],"returns":"resource"},"curl_multi_init":{"desc":"Returns a new cURL multi handle","params":[],"returns":"resource"},"cyrus_connect":{"desc":"Connect to a Cyrus IMAP server","params":[{"required":"no","param":"string $host = &#039;&#039;"},{"required":"no","param":"string $port = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"db2_columns":{"desc":"Returns a result set listing the columns and associated metadata for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $schema = &#039;&#039;"},{"required":"no","param":"string $table-name = &#039;&#039;"},{"required":"no","param":"string $column-name = &#039;&#039;"}],"returns":"resource"},"db2_column_privileges":{"desc":"Returns a result set listing the columns and associated privileges for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $schema = &#039;&#039;"},{"required":"no","param":"string $table-name = &#039;&#039;"},{"required":"no","param":"string $column-name = &#039;&#039;"}],"returns":"resource"},"db2_connect":{"desc":"Returns a connection to a database","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"db2_exec":{"desc":"Executes an SQL statement directly","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $statement"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"db2_foreign_keys":{"desc":"Returns a result set listing the foreign keys for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $table-name"}],"returns":"resource"},"db2_next_result":{"desc":"Requests the next result set from a stored procedure","params":[{"required":"yes","param":"resource $stmt"}],"returns":"resource"},"db2_pconnect":{"desc":"Returns a persistent connection to a database","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"db2_prepare":{"desc":"Prepares an SQL statement to be executed","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $statement"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"db2_primary_keys":{"desc":"Returns a result set listing primary keys for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $table-name"}],"returns":"resource"},"db2_procedures":{"desc":"Returns a result set listing the stored procedures registered in a database","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $procedure"}],"returns":"resource"},"db2_procedure_columns":{"desc":"Returns a result set listing stored procedure parameters","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $procedure"},{"required":"yes","param":"string $parameter"}],"returns":"resource"},"db2_special_columns":{"desc":"Returns a result set listing the unique row identifier columns for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"int $scope"}],"returns":"resource"},"db2_statistics":{"desc":"Returns a result set listing the index and statistics for a table","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $schema"},{"required":"yes","param":"string $table-name"},{"required":"yes","param":"bool $unique"}],"returns":"resource"},"db2_tables":{"desc":"Returns a result set listing the tables and associated metadata in a database","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $schema = &#039;&#039;"},{"required":"no","param":"string $table-name = &#039;&#039;"},{"required":"no","param":"string $table-type = &#039;&#039;"}],"returns":"resource"},"db2_table_privileges":{"desc":"Returns a result set listing the tables and associated privileges in a database","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $schema = &#039;&#039;"},{"required":"no","param":"string $table_name = &#039;&#039;"}],"returns":"resource"},"dba_open":{"desc":"Open database","params":[{"required":"yes","param":"string $path"},{"required":"yes","param":"string $mode"},{"required":"no","param":"string $handler = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"resource"},"dba_popen":{"desc":"Open database persistently","params":[{"required":"yes","param":"string $path"},{"required":"yes","param":"string $mode"},{"required":"no","param":"string $handler = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"resource"},"dbplus_aql":{"desc":"Perform AQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"string $server = &#039;&#039;"},{"required":"no","param":"string $dbpath = &#039;&#039;"}],"returns":"resource"},"dbplus_open":{"desc":"Open relation file","params":[{"required":"yes","param":"string $name"}],"returns":"resource"},"dbplus_rcreate":{"desc":"Creates a new DB++ relation","params":[{"required":"yes","param":"string $name"},{"required":"yes","param":"mixed $domlist"},{"required":"no","param":"bool $overwrite = &#039;&#039;"}],"returns":"resource"},"dbplus_ropen":{"desc":"Open relation file local","params":[{"required":"yes","param":"string $name"}],"returns":"resource"},"dbplus_rquery":{"desc":"Perform local (raw) AQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"string $dbpath = &#039;&#039;"}],"returns":"resource"},"dbplus_sql":{"desc":"Perform SQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"string $server = &#039;&#039;"},{"required":"no","param":"string $dbpath = &#039;&#039;"}],"returns":"resource"},"dio_open":{"desc":"Opens a file (creating it if necessary) at a lower level than the   C library input/ouput stream functions allow.","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $flags"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"resource"},"enchant_broker_init":{"desc":"create a new broker object capable of requesting","params":[],"returns":"resource"},"enchant_broker_request_dict":{"desc":"create a new dictionary using a tag","params":[{"required":"yes","param":"resource $broker"},{"required":"yes","param":"string $tag"}],"returns":"resource"},"enchant_broker_request_pwl_dict":{"desc":"creates a dictionary using a PWL file","params":[{"required":"yes","param":"resource $broker"},{"required":"yes","param":"string $filename"}],"returns":"resource"},"event_base_new":{"desc":"Create and initialize new event base","params":[],"returns":"resource"},"event_buffer_new":{"desc":"Create new buffered event","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"mixed $readcb"},{"required":"yes","param":"mixed $writecb"},{"required":"yes","param":"mixed $errorcb"},{"required":"no","param":"mixed $arg = &#039;&#039;"}],"returns":"resource"},"event_new":{"desc":"Create new event","params":[],"returns":"resource"},"expect_popen":{"desc":"Execute command via Bourne shell, and open the PTY stream to  the process","params":[{"required":"yes","param":"string $command"}],"returns":"resource"},"fam_monitor_collection":{"desc":"Monitor a collection of files in a directory for changes","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"string $dirname"},{"required":"yes","param":"int $depth"},{"required":"yes","param":"string $mask"}],"returns":"resource"},"fam_monitor_directory":{"desc":"Monitor a directory for changes","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"string $dirname"}],"returns":"resource"},"fam_monitor_file":{"desc":"Monitor a regular file for changes","params":[{"required":"yes","param":"resource $fam"},{"required":"yes","param":"string $filename"}],"returns":"resource"},"fam_open":{"desc":"Open connection to FAM daemon","params":[{"required":"no","param":"string $appname = &#039;&#039;"}],"returns":"resource"},"fbsql_connect":{"desc":"Open a connection to a FrontBase Server","params":[{"required":"no","param":"string $hostname = ini_get(&quot;fbsql.default_host&quot;)"},{"required":"no","param":"string $username = ini_get(&quot;fbsql.default_user&quot;)"},{"required":"no","param":"string $password = ini_get(&quot;fbsql.default_password&quot;"}],"returns":"resource"},"fbsql_db_query":{"desc":"Send a FrontBase query","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"fbsql_list_dbs":{"desc":"List databases available on a FrontBase server","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"fbsql_list_fields":{"desc":"List FrontBase result fields","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $table_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"fbsql_list_tables":{"desc":"List tables in a FrontBase database","params":[{"required":"yes","param":"string $database"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"fbsql_pconnect":{"desc":"Open a persistent connection to a FrontBase Server","params":[{"required":"no","param":"string $hostname = ini_get(&quot;fbsql.default_host&quot;)"},{"required":"no","param":"string $username = ini_get(&quot;fbsql.default_user&quot;)"},{"required":"no","param":"string $password = ini_get(&quot;fbsql.default_password&quot;"}],"returns":"resource"},"fbsql_query":{"desc":"Send a FrontBase query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"},{"required":"no","param":"int $batch_size = &#039;&#039;"}],"returns":"resource"},"fdf_create":{"desc":"Create a new FDF document","params":[],"returns":"resource"},"fdf_open":{"desc":"Open a FDF document","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"fdf_open_string":{"desc":"Read a FDF document from a string","params":[{"required":"yes","param":"string $fdf_data"}],"returns":"resource"},"finfo_open":{"desc":"Create a new fileinfo resource","params":[{"required":"no","param":"int $options = FILEINFO_NONE"},{"required":"no","param":"string $magic_file = &#039;&#039;"}],"returns":"resource"},"fopen":{"desc":"Opens file or URL","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $mode"},{"required":"no","param":"bool $use_include_path = false"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"resource"},"fsockopen":{"desc":"Open Internet or Unix domain socket connection","params":[{"required":"yes","param":"string $hostname"},{"required":"no","param":"int $port = -1"},{"required":"no","param":"int $errno = &#039;&#039;"},{"required":"no","param":"string $errstr = &#039;&#039;"},{"required":"no","param":"float $timeout = ini_get(&quot;default_socket_timeout&quot;"}],"returns":"resource"},"ftp_close":{"desc":"Closes an FTP connection","params":[{"required":"yes","param":"resource $ftp_stream"}],"returns":"resource"},"ftp_connect":{"desc":"Opens an FTP connection","params":[{"required":"yes","param":"string $host"},{"required":"no","param":"int $port = 21"},{"required":"no","param":"int $timeout = 90"}],"returns":"resource"},"ftp_ssl_connect":{"desc":"Opens an Secure SSL-FTP connection","params":[{"required":"yes","param":"string $host"},{"required":"no","param":"int $port = 21"},{"required":"no","param":"int $timeout = 90"}],"returns":"resource"},"gmp_abs":{"desc":"Absolute value","params":[{"required":"yes","param":"resource $a"}],"returns":"resource"},"gmp_add":{"desc":"Add numbers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_and":{"desc":"Bitwise AND","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_com":{"desc":"Calculates one&#039;s complement","params":[{"required":"yes","param":"resource $a"}],"returns":"resource"},"gmp_divexact":{"desc":"Exact division of numbers","params":[{"required":"yes","param":"resource $n"},{"required":"yes","param":"resource $d"}],"returns":"resource"},"gmp_div_q":{"desc":"Divide numbers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"},{"required":"no","param":"int $round = GMP_ROUND_ZERO"}],"returns":"resource"},"gmp_div_r":{"desc":"Remainder of the division of numbers","params":[{"required":"yes","param":"resource $n"},{"required":"yes","param":"resource $d"},{"required":"no","param":"int $round = GMP_ROUND_ZERO"}],"returns":"resource"},"gmp_fact":{"desc":"Factorial","params":[{"required":"yes","param":"mixed $a"}],"returns":"resource"},"gmp_gcd":{"desc":"Calculate GCD","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_init":{"desc":"Create GMP number","params":[{"required":"yes","param":"mixed $number"},{"required":"no","param":"int $base = &#039;&#039;"}],"returns":"resource"},"gmp_invert":{"desc":"Inverse by modulo","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_mod":{"desc":"Modulo operation","params":[{"required":"yes","param":"resource $n"},{"required":"yes","param":"resource $d"}],"returns":"resource"},"gmp_mul":{"desc":"Multiply numbers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_neg":{"desc":"Negate number","params":[{"required":"yes","param":"resource $a"}],"returns":"resource"},"gmp_nextprime":{"desc":"Find next prime number","params":[{"required":"yes","param":"int $a"}],"returns":"resource"},"gmp_or":{"desc":"Bitwise OR","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_pow":{"desc":"Raise number into power","params":[{"required":"yes","param":"resource $base"},{"required":"yes","param":"int $exp"}],"returns":"resource"},"gmp_powm":{"desc":"Raise number into power with modulo","params":[{"required":"yes","param":"resource $base"},{"required":"yes","param":"resource $exp"},{"required":"yes","param":"resource $mod"}],"returns":"resource"},"gmp_random":{"desc":"Random number","params":[{"required":"no","param":"int $limiter = 20"}],"returns":"resource"},"gmp_sqrt":{"desc":"Calculate square root","params":[{"required":"yes","param":"resource $a"}],"returns":"resource"},"gmp_sub":{"desc":"Subtract numbers","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gmp_xor":{"desc":"Bitwise XOR","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"resource $b"}],"returns":"resource"},"gnupg_init":{"desc":"Initialize a connection","params":[],"returns":"resource"},"gupnp_context_new":{"desc":"Create a new context","params":[{"required":"no","param":"string $host_ip = &#039;&#039;"},{"required":"no","param":"int $port = &#039;&#039;"}],"returns":"resource"},"gupnp_control_point_new":{"desc":"Create a new control point","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"string $target"}],"returns":"resource"},"gupnp_device_info_get_service":{"desc":"Get the service with type","params":[{"required":"yes","param":"resource $root_device"},{"required":"yes","param":"string $type"}],"returns":"resource"},"gupnp_root_device_new":{"desc":"Create a new root device","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"string $location"},{"required":"yes","param":"string $description_dir"}],"returns":"resource"},"gzopen":{"desc":"Open gz-file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $mode"},{"required":"no","param":"int $use_include_path = &#039;&#039;"}],"returns":"resource"},"hash_copy":{"desc":"Copy hashing context","params":[{"required":"yes","param":"resource $context"}],"returns":"resource"},"hash_init":{"desc":"Initialize an incremental hashing context","params":[{"required":"yes","param":"string $algo"},{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"string $key = &#039;&#039;"}],"returns":"resource"},"http_get_request_body_stream":{"desc":"Get request body as stream","params":[],"returns":"resource"},"ibase_blob_create":{"desc":"Create a new blob for adding data","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"ibase_blob_open":{"desc":"Open blob for retrieving data parts","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $blob_id"}],"returns":"resource"},"ibase_connect":{"desc":"Open a connection to an InterBase database","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"int $buffers = &#039;&#039;"},{"required":"no","param":"int $dialect = &#039;&#039;"},{"required":"no","param":"string $role = &#039;&#039;"},{"required":"no","param":"int $sync = &#039;&#039;"}],"returns":"resource"},"ibase_execute":{"desc":"Execute a previously prepared query","params":[{"required":"yes","param":"resource $query"},{"required":"no","param":"mixed $bind_arg = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"resource"},"ibase_pconnect":{"desc":"Open a persistent connection to an InterBase database","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"int $buffers = &#039;&#039;"},{"required":"no","param":"int $dialect = &#039;&#039;"},{"required":"no","param":"string $role = &#039;&#039;"},{"required":"no","param":"int $sync = &#039;&#039;"}],"returns":"resource"},"ibase_prepare":{"desc":"Prepare a query for later binding of parameter placeholders and execution","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $trans"}],"returns":"resource"},"ibase_query":{"desc":"Execute a query on an InterBase database","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"},{"required":"yes","param":"string $query"},{"required":"no","param":"int $bind_args = &#039;&#039;"}],"returns":"resource"},"ibase_service_attach":{"desc":"Connect to the service manager","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $dba_username"},{"required":"yes","param":"string $dba_password"}],"returns":"resource"},"ibase_set_event_handler":{"desc":"Register a callback function to be called when events are posted","params":[{"required":"yes","param":"callback $event_handler"},{"required":"yes","param":"string $event_name1"},{"required":"no","param":"string $event_name2 = &#039;&#039;"},{"required":"no","param":"string $... = &#039;&#039;"},{"required":"yes","param":"resource $connection"}],"returns":"resource"},"ibase_trans":{"desc":"Begin a transaction","params":[{"required":"no","param":"int $trans_args = &#039;&#039;"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"ifx_connect":{"desc":"Open Informix server connection","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $userid = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"}],"returns":"resource"},"ifx_pconnect":{"desc":"Open persistent Informix connection","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $userid = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"}],"returns":"resource"},"ifx_prepare":{"desc":"Prepare an SQL-statement for execution","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"int $cursor_def = &#039;&#039;"},{"required":"yes","param":"mixed $blobidarray"}],"returns":"resource"},"ifx_query":{"desc":"Send Informix query","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"int $cursor_type = &#039;&#039;"},{"required":"no","param":"mixed $blobidarray = &#039;&#039;"}],"returns":"resource"},"imagecreate":{"desc":"Create a new palette based image","params":[{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"}],"returns":"resource"},"imagecreatefromgd":{"desc":"Create a new image from GD file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromgd2":{"desc":"Create a new image from GD2 file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromgd2part":{"desc":"Create a new image from a given part of GD2 file or URL","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"int $srcX"},{"required":"yes","param":"int $srcY"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"}],"returns":"resource"},"imagecreatefromgif":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromjpeg":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefrompng":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromstring":{"desc":"Create a new image from the image stream in the string","params":[{"required":"yes","param":"string $data"}],"returns":"resource"},"imagecreatefromwbmp":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromxbm":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatefromxpm":{"desc":"Create a new image from file or URL","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagecreatetruecolor":{"desc":"Create a new true color image","params":[{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"}],"returns":"resource"},"imagegrabscreen":{"desc":"Captures the whole screen","params":[],"returns":"resource"},"imagegrabwindow":{"desc":"Captures a window","params":[{"required":"yes","param":"int $window_handle"},{"required":"no","param":"int $client_area = &#039;&#039;"}],"returns":"resource"},"imagepsloadfont":{"desc":"Load a PostScript Type 1 font from file","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"imagerotate":{"desc":"Rotate an image with a given angle","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"float $angle"},{"required":"yes","param":"int $bgd_color"},{"required":"no","param":"int $ignore_transparent = &#039;&#039;"}],"returns":"resource"},"imap_open":{"desc":"Open an IMAP stream to a mailbox","params":[{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"int $options = NIL"},{"required":"no","param":"int $n_retries = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"}],"returns":"resource"},"ingres_connect":{"desc":"Open a connection to an Ingres database","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"ingres_pconnect":{"desc":"Open a persistent connection to an Ingres database","params":[{"required":"no","param":"string $database = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"inotify_init":{"desc":"Initialize an inotify instance","params":[],"returns":"resource"},"is_scalar":{"desc":"Finds whether a variable is a scalar","params":[{"required":"yes","param":"mixed $var"}],"returns":"resource"},"kadm5_init_with_password":{"desc":"Opens a connection to the KADM5 library","params":[{"required":"yes","param":"string $admin_server"},{"required":"yes","param":"string $realm"},{"required":"yes","param":"string $principal"},{"required":"yes","param":"string $password"}],"returns":"resource"},"ldap_connect":{"desc":"Connect to an LDAP server","params":[{"required":"no","param":"string $hostname = &#039;&#039;"},{"required":"no","param":"int $port = 389"}],"returns":"resource"},"ldap_first_entry":{"desc":"Return first result id","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_identifier"}],"returns":"resource"},"ldap_first_reference":{"desc":"Return first reference","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"resource $result"}],"returns":"resource"},"ldap_list":{"desc":"Single-level search","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $base_dn"},{"required":"yes","param":"string $filter"},{"required":"no","param":"array $attributes = &#039;&#039;"},{"required":"no","param":"int $attrsonly = &#039;&#039;"},{"required":"no","param":"int $sizelimit = &#039;&#039;"},{"required":"no","param":"int $timelimit = &#039;&#039;"},{"required":"no","param":"int $deref = &#039;&#039;"}],"returns":"resource"},"ldap_next_entry":{"desc":"Get next result entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"}],"returns":"resource"},"ldap_next_reference":{"desc":"Get next reference","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"resource $entry"}],"returns":"resource"},"ldap_read":{"desc":"Read an entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $base_dn"},{"required":"yes","param":"string $filter"},{"required":"no","param":"array $attributes = &#039;&#039;"},{"required":"no","param":"int $attrsonly = &#039;&#039;"},{"required":"no","param":"int $sizelimit = &#039;&#039;"},{"required":"no","param":"int $timelimit = &#039;&#039;"},{"required":"no","param":"int $deref = &#039;&#039;"}],"returns":"resource"},"ldap_search":{"desc":"Search LDAP tree","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"string $base_dn"},{"required":"yes","param":"string $filter"},{"required":"no","param":"array $attributes = &#039;&#039;"},{"required":"no","param":"int $attrsonly = &#039;&#039;"},{"required":"no","param":"int $sizelimit = &#039;&#039;"},{"required":"no","param":"int $timelimit = &#039;&#039;"},{"required":"no","param":"int $deref = &#039;&#039;"}],"returns":"resource"},"mailparse_msg_create":{"desc":"Create a mime mail resource","params":[],"returns":"resource"},"mailparse_msg_get_part":{"desc":"Returns a handle on a given section in a mimemessage","params":[{"required":"yes","param":"resource $mimemail"},{"required":"yes","param":"string $mimesection"}],"returns":"resource"},"mailparse_msg_parse_file":{"desc":"Parses a file","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"maxdb_connect":{"desc":"Open a new connection to the MaxDB server","params":[{"required":"no","param":"string $host = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $passwd = &#039;&#039;"},{"required":"no","param":"string $dbname = &#039;&#039;"},{"required":"no","param":"int $port = &#039;&#039;"},{"required":"no","param":"string $socket = &#039;&#039;"}],"returns":"resource"},"maxdb_embedded_connect":{"desc":"Open a connection to an embedded MaxDB server","params":[{"required":"no","param":"string $dbname = &#039;&#039;"}],"returns":"resource"},"maxdb_init":{"desc":"Initializes MaxDB and returns an resource for use with maxdb_real_connect","params":[],"returns":"resource"},"maxdb_stmt_result_metadata":{"desc":"Returns result set metadata from a prepared statement","params":[{"required":"yes","param":"resource $stmt"}],"returns":"resource"},"maxdb_use_result":{"desc":"Initiate a result set retrieval","params":[{"required":"yes","param":"resource $link"}],"returns":"resource"},"mcrypt_module_open":{"desc":"Opens the module of the algorithm and the mode to be used","params":[{"required":"yes","param":"string $algorithm"},{"required":"yes","param":"string $algorithm_directory"},{"required":"yes","param":"string $mode"},{"required":"yes","param":"string $mode_directory"}],"returns":"resource"},"msg_get_queue":{"desc":"Create or attach to a message queue","params":[{"required":"yes","param":"int $key"},{"required":"no","param":"int $perms = &#039;&#039;"}],"returns":"resource"},"msql_connect":{"desc":"Open mSQL connection","params":[{"required":"no","param":"string $hostname = &#039;&#039;"}],"returns":"resource"},"msql_db_query":{"desc":"Send mSQL query","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"msql_list_dbs":{"desc":"List mSQL databases on server","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"msql_list_fields":{"desc":"List result fields","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $tablename"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"msql_list_tables":{"desc":"List tables in an mSQL database","params":[{"required":"yes","param":"string $database"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"msql_pconnect":{"desc":"Open persistent mSQL connection","params":[{"required":"no","param":"string $hostname = &#039;&#039;"}],"returns":"resource"},"msql_query":{"desc":"Send mSQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mssql_connect":{"desc":"Open MS SQL server connection","params":[{"required":"no","param":"string $servername = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"bool $new_link = false"}],"returns":"resource"},"mssql_init":{"desc":"Initializes a stored procedure or a remote stored procedure","params":[{"required":"yes","param":"string $sp_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mssql_pconnect":{"desc":"Open persistent MS SQL connection","params":[{"required":"no","param":"string $servername = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"bool $new_link = false"}],"returns":"resource"},"mysql_connect":{"desc":"Open a connection to a MySQL Server","params":[{"required":"no","param":"string $server = ini_get(&quot;mysql.default_host&quot;)"},{"required":"no","param":"string $username = ini_get(&quot;mysql.default_user&quot;)"},{"required":"no","param":"string $password = ini_get(&quot;mysql.default_password&quot;)"},{"required":"no","param":"bool $new_link = false"},{"required":"no","param":"int $client_flags = &#039;&#039;"}],"returns":"resource"},"mysql_db_query":{"desc":"Send a MySQL query","params":[{"required":"yes","param":"string $database"},{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_list_dbs":{"desc":"List databases available on a MySQL server","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_list_fields":{"desc":"List MySQL table fields","params":[{"required":"yes","param":"string $database_name"},{"required":"yes","param":"string $table_name"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_list_processes":{"desc":"List MySQL processes","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_list_tables":{"desc":"List tables in a MySQL database","params":[{"required":"yes","param":"string $database"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_pconnect":{"desc":"Open a persistent connection to a MySQL server","params":[{"required":"no","param":"string $server = ini_get(&quot;mysql.default_host&quot;)"},{"required":"no","param":"string $username = ini_get(&quot;mysql.default_user&quot;)"},{"required":"no","param":"string $password = ini_get(&quot;mysql.default_password&quot;)"},{"required":"no","param":"int $client_flags = &#039;&#039;"}],"returns":"resource"},"mysql_query":{"desc":"Send a MySQL query","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"mysql_unbuffered_query":{"desc":"Send an SQL query to MySQL without fetching and buffering the result rows.","params":[{"required":"yes","param":"string $query"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"resource"},"m_initconn":{"desc":"Create and initialize an MCVE_CONN structure","params":[],"returns":"resource"},"ncurses_newpad":{"desc":"Creates a new pad (window)","params":[{"required":"yes","param":"int $rows"},{"required":"yes","param":"int $cols"}],"returns":"resource"},"ncurses_newwin":{"desc":"Create a new window","params":[{"required":"yes","param":"int $rows"},{"required":"yes","param":"int $cols"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"resource"},"ncurses_new_panel":{"desc":"Create a new panel and associate it with window","params":[{"required":"yes","param":"resource $window"}],"returns":"resource"},"ncurses_panel_above":{"desc":"Returns the panel above panel","params":[{"required":"yes","param":"resource $panel"}],"returns":"resource"},"ncurses_panel_below":{"desc":"Returns the panel below panel","params":[{"required":"yes","param":"resource $panel"}],"returns":"resource"},"ncurses_panel_window":{"desc":"Returns the window associated with panel","params":[{"required":"yes","param":"resource $panel"}],"returns":"resource"},"newt_button":{"desc":"Create a new button","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"}],"returns":"resource"},"newt_button_bar":{"desc":"This function returns a grid containing the buttons created.","params":[{"required":"yes","param":"array $buttons"}],"returns":"resource"},"newt_checkbox":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"},{"required":"yes","param":"string $def_value"},{"required":"no","param":"string $seq = &#039;&#039;"}],"returns":"resource"},"newt_checkbox_tree":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $height"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_checkbox_tree_multi":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $height"},{"required":"yes","param":"string $seq"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_compact_button":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"}],"returns":"resource"},"newt_create_grid":{"desc":"","params":[{"required":"yes","param":"int $cols"},{"required":"yes","param":"int $rows"}],"returns":"resource"},"newt_entry":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $width"},{"required":"no","param":"string $init_value = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_form":{"desc":"Create a form","params":[{"required":"no","param":"resource $vert_bar = &#039;&#039;"},{"required":"no","param":"string $help = &#039;&#039;"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_form_get_current":{"desc":"","params":[{"required":"yes","param":"resource $form"}],"returns":"resource"},"newt_grid_basic_window":{"desc":"","params":[{"required":"yes","param":"resource $text"},{"required":"yes","param":"resource $middle"},{"required":"yes","param":"resource $buttons"}],"returns":"resource"},"newt_grid_h_close_stacked":{"desc":"","params":[{"required":"yes","param":"int $element1_type"},{"required":"yes","param":"resource $element1"},{"required":"no","param":"resource $... = &#039;&#039;"}],"returns":"resource"},"newt_grid_h_stacked":{"desc":"","params":[{"required":"yes","param":"int $element1_type"},{"required":"yes","param":"resource $element1"},{"required":"no","param":"resource $... = &#039;&#039;"}],"returns":"resource"},"newt_grid_simple_window":{"desc":"","params":[{"required":"yes","param":"resource $text"},{"required":"yes","param":"resource $middle"},{"required":"yes","param":"resource $buttons"}],"returns":"resource"},"newt_grid_v_close_stacked":{"desc":"","params":[{"required":"yes","param":"int $element1_type"},{"required":"yes","param":"resource $element1"},{"required":"no","param":"resource $... = &#039;&#039;"}],"returns":"resource"},"newt_grid_v_stacked":{"desc":"","params":[{"required":"yes","param":"int $element1_type"},{"required":"yes","param":"resource $element1"},{"required":"no","param":"resource $... = &#039;&#039;"}],"returns":"resource"},"newt_label":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"}],"returns":"resource"},"newt_listbox":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $height"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_listitem":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"},{"required":"yes","param":"bool $is_default"},{"required":"yes","param":"resouce $prev_item"},{"required":"yes","param":"mixed $data"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_radiobutton":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"},{"required":"yes","param":"bool $is_default"},{"required":"no","param":"resource $prev_button = &#039;&#039;"}],"returns":"resource"},"newt_radio_get_current":{"desc":"","params":[{"required":"yes","param":"resource $set_member"}],"returns":"resource"},"newt_run_form":{"desc":"Runs a form","params":[{"required":"yes","param":"resource $form"}],"returns":"resource"},"newt_scale":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $full_value"}],"returns":"resource"},"newt_textbox":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_textbox_reflowed":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"char $*text"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $flex_down"},{"required":"yes","param":"int $flex_up"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"newt_vertical_scrollbar":{"desc":"","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"int $height"},{"required":"no","param":"int $normal_colorset = &#039;&#039;"},{"required":"no","param":"int $thumb_colorset = &#039;&#039;"}],"returns":"resource"},"oci_connect":{"desc":"Connect to an Oracle database","params":[{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $connection_string = &#039;&#039;"},{"required":"no","param":"string $character_set = &#039;&#039;"},{"required":"no","param":"int $session_mode = &#039;&#039;"}],"returns":"resource"},"oci_new_connect":{"desc":"Connect to the Oracle server using a unique connection","params":[{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $connection_string = &#039;&#039;"},{"required":"no","param":"string $character_set = &#039;&#039;"},{"required":"no","param":"int $session_mode = &#039;&#039;"}],"returns":"resource"},"oci_new_cursor":{"desc":"Allocates and returns a new cursor (statement handle)","params":[{"required":"yes","param":"resource $connection"}],"returns":"resource"},"oci_parse":{"desc":"Prepares an Oracle statement for execution","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $sql_text"}],"returns":"resource"},"oci_password_change":{"desc":"Changes password of Oracle&#039;s user","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $old_password"},{"required":"yes","param":"string $new_password"},{"required":"yes","param":"string $dbname"}],"returns":"resource"},"oci_pconnect":{"desc":"Connect to an Oracle database using a persistent connection","params":[{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"},{"required":"no","param":"string $connection_string = &#039;&#039;"},{"required":"no","param":"string $character_set = &#039;&#039;"},{"required":"no","param":"int $session_mode = &#039;&#039;"}],"returns":"resource"},"odbc_columnprivileges":{"desc":"Lists columns and associated privileges for the given table","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"string $column_name"}],"returns":"resource"},"odbc_columns":{"desc":"Lists the column names in specified tables","params":[{"required":"yes","param":"resource $connection_id"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $schema = &#039;&#039;"},{"required":"no","param":"string $table_name = &#039;&#039;"},{"required":"no","param":"string $column_name = &#039;&#039;"}],"returns":"resource"},"odbc_connect":{"desc":"Connect to a datasource","params":[{"required":"yes","param":"string $dsn"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"no","param":"int $cursor_type = &#039;&#039;"}],"returns":"resource"},"odbc_exec":{"desc":"Prepare and execute an SQL statement","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $query_string"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"resource"},"odbc_foreignkeys":{"desc":"Retrieves a list of foreign keys","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $pk_qualifier"},{"required":"yes","param":"string $pk_owner"},{"required":"yes","param":"string $pk_table"},{"required":"yes","param":"string $fk_qualifier"},{"required":"yes","param":"string $fk_owner"},{"required":"yes","param":"string $fk_table"}],"returns":"resource"},"odbc_gettypeinfo":{"desc":"Retrieves information about data types supported by the data source","params":[{"required":"yes","param":"resource $connection_id"},{"required":"no","param":"int $data_type = &#039;&#039;"}],"returns":"resource"},"odbc_pconnect":{"desc":"Open a persistent database connection","params":[{"required":"yes","param":"string $dsn"},{"required":"yes","param":"string $user"},{"required":"yes","param":"string $password"},{"required":"no","param":"int $cursor_type = &#039;&#039;"}],"returns":"resource"},"odbc_prepare":{"desc":"Prepares a statement for execution","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $query_string"}],"returns":"resource"},"odbc_primarykeys":{"desc":"Gets the primary keys for a table","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $table"}],"returns":"resource"},"odbc_procedurecolumns":{"desc":"Retrieve information about parameters to procedures","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $proc"},{"required":"yes","param":"string $column"}],"returns":"resource"},"odbc_procedures":{"desc":"Get the list of procedures stored in a specific data source","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $name"}],"returns":"resource"},"odbc_specialcolumns":{"desc":"Retrieves special columns","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"int $type"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $table"},{"required":"yes","param":"int $scope"},{"required":"yes","param":"int $nullable"}],"returns":"resource"},"odbc_statistics":{"desc":"Retrieve statistics about a table","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $table_name"},{"required":"yes","param":"int $unique"},{"required":"yes","param":"int $accuracy"}],"returns":"resource"},"odbc_tableprivileges":{"desc":"Lists tables and the privileges associated with each table","params":[{"required":"yes","param":"resource $connection_id"},{"required":"yes","param":"string $qualifier"},{"required":"yes","param":"string $owner"},{"required":"yes","param":"string $name"}],"returns":"resource"},"odbc_tables":{"desc":"Get the list of table names stored in a specific data source","params":[{"required":"yes","param":"resource $connection_id"},{"required":"no","param":"string $qualifier = &#039;&#039;"},{"required":"no","param":"string $owner = &#039;&#039;"},{"required":"no","param":"string $name = &#039;&#039;"},{"required":"no","param":"string $types = &#039;&#039;"}],"returns":"resource"},"openal_buffer_create":{"desc":"Generate OpenAL buffer","params":[],"returns":"resource"},"openal_context_create":{"desc":"Create an audio processing context","params":[{"required":"yes","param":"resource $device"}],"returns":"resource"},"openal_device_open":{"desc":"Initialize the OpenAL audio layer","params":[{"required":"no","param":"string $device_desc = &#039;&#039;"}],"returns":"resource"},"openal_source_create":{"desc":"Generate a source resource","params":[],"returns":"resource"},"openal_stream":{"desc":"Begin streaming on a source","params":[{"required":"yes","param":"resource $source"},{"required":"yes","param":"int $format"},{"required":"yes","param":"int $rate"}],"returns":"resource"},"opendir":{"desc":"Open directory handle","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"resource"},"openssl_csr_get_public_key":{"desc":"Returns the public key of a CERT","params":[{"required":"yes","param":"mixed $csr"},{"required":"no","param":"bool $use_shortnames = true"}],"returns":"resource"},"openssl_csr_sign":{"desc":"Sign a CSR with another certificate (or itself) and generate a certificate","params":[{"required":"yes","param":"mixed $csr"},{"required":"yes","param":"mixed $cacert"},{"required":"yes","param":"mixed $priv_key"},{"required":"yes","param":"int $days"},{"required":"no","param":"array $configargs = &#039;&#039;"},{"required":"no","param":"int $serial = &#039;&#039;"}],"returns":"resource"},"openssl_pkey_get_private":{"desc":"Get a private key","params":[{"required":"yes","param":"mixed $key"},{"required":"no","param":"string $passphrase = &quot;&quot;"}],"returns":"resource"},"openssl_pkey_get_public":{"desc":"Extract public key from certificate and prepare it for use","params":[{"required":"yes","param":"mixed $certificate"}],"returns":"resource"},"openssl_pkey_new":{"desc":"Generates a new private key","params":[{"required":"no","param":"array $configargs = &#039;&#039;"}],"returns":"resource"},"openssl_x509_read":{"desc":"Parse an X.509 certificate and return a resource identifier for  it","params":[{"required":"yes","param":"mixed $x509certdata"}],"returns":"resource"},"PDF_new":{"desc":"Create PDFlib object","params":[],"returns":"resource"},"pfsockopen":{"desc":"Open persistent Internet or Unix domain socket connection","params":[{"required":"yes","param":"string $hostname"},{"required":"no","param":"int $port = -1"},{"required":"no","param":"int $errno = &#039;&#039;"},{"required":"no","param":"string $errstr = &#039;&#039;"},{"required":"no","param":"float $timeout = ini_get(&quot;default_socket_timeout&quot;"}],"returns":"resource"},"pg_connect":{"desc":"Open a PostgreSQL connection","params":[{"required":"yes","param":"string $connection_string"},{"required":"no","param":"int $connect_type = &#039;&#039;"}],"returns":"resource"},"pg_execute":{"desc":"Sends a request to execute a prepared statement with given parameters, and waits for the result.","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $stmtname"},{"required":"yes","param":"array $params"}],"returns":"resource"},"pg_free_result":{"desc":"Free result memory","params":[{"required":"yes","param":"resource $result"}],"returns":"resource"},"pg_get_result":{"desc":"Get asynchronous query result","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"resource"},"pg_lo_open":{"desc":"Open a large object","params":[{"required":"yes","param":"resource $connection"},{"required":"yes","param":"int $oid"},{"required":"yes","param":"string $mode"}],"returns":"resource"},"pg_pconnect":{"desc":"Open a persistent PostgreSQL connection","params":[{"required":"yes","param":"string $connection_string"},{"required":"no","param":"int $connect_type = &#039;&#039;"}],"returns":"resource"},"pg_prepare":{"desc":"Submits a request to create a prepared statement with the   given parameters, and waits for completion.","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $stmtname"},{"required":"yes","param":"string $query"}],"returns":"resource"},"pg_query":{"desc":"Execute a query","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $query"}],"returns":"resource"},"pg_query_params":{"desc":"Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $query"},{"required":"yes","param":"array $params"}],"returns":"resource"},"popen":{"desc":"Opens process file pointer","params":[{"required":"yes","param":"string $command"},{"required":"yes","param":"string $mode"}],"returns":"resource"},"printer_create_brush":{"desc":"Create a new brush","params":[{"required":"yes","param":"int $style"},{"required":"yes","param":"string $color"}],"returns":"resource"},"printer_create_font":{"desc":"Create a new font","params":[{"required":"yes","param":"string $face"},{"required":"yes","param":"int $height"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $font_weight"},{"required":"yes","param":"bool $italic"},{"required":"yes","param":"bool $underline"},{"required":"yes","param":"bool $strikeout"},{"required":"yes","param":"int $orientation"}],"returns":"resource"},"printer_create_pen":{"desc":"Create a new pen","params":[{"required":"yes","param":"int $style"},{"required":"yes","param":"int $width"},{"required":"yes","param":"string $color"}],"returns":"resource"},"printer_open":{"desc":"Opens a connection to a printer","params":[{"required":"no","param":"string $printername = &#039;&#039;"}],"returns":"resource"},"proc_open":{"desc":"Execute a command and open file pointers for input/output","params":[{"required":"yes","param":"string $cmd"},{"required":"yes","param":"array $descriptorspec"},{"required":"yes","param":"array $pipes"},{"required":"no","param":"string $cwd = &#039;&#039;"},{"required":"no","param":"array $env = &#039;&#039;"},{"required":"no","param":"array $other_options = &#039;&#039;"}],"returns":"resource"},"ps_new":{"desc":"Creates a new PostScript document object","params":[],"returns":"resource"},"px_new":{"desc":"Create a new paradox object","params":[],"returns":"resource"},"radius_acct_open":{"desc":"Creates a Radius handle for accounting","params":[],"returns":"resource"},"radius_auth_open":{"desc":"Creates a Radius handle for authentication","params":[],"returns":"resource"},"rpm_open":{"desc":"Opens an RPM file","params":[{"required":"yes","param":"string $filename"}],"returns":"resource"},"sem_get":{"desc":"Get a semaphore id","params":[{"required":"yes","param":"int $key"},{"required":"no","param":"int $max_acquire = 1"},{"required":"no","param":"int $perm = 0666"},{"required":"no","param":"int $auto_release = 1"}],"returns":"resource"},"shm_attach":{"desc":"Creates or open a shared memory segment","params":[{"required":"yes","param":"int $key"},{"required":"no","param":"int $memsize = &#039;&#039;"},{"required":"no","param":"int $perm = &#039;&#039;"}],"returns":"resource"},"socket_accept":{"desc":"Accepts a connection on a socket","params":[{"required":"yes","param":"resource $socket"}],"returns":"resource"},"socket_create":{"desc":"Create a socket (endpoint for communication)","params":[{"required":"yes","param":"int $domain"},{"required":"yes","param":"int $type"},{"required":"yes","param":"int $protocol"}],"returns":"resource"},"socket_create_listen":{"desc":"Opens a socket on port to accept connections","params":[{"required":"yes","param":"int $port"},{"required":"no","param":"int $backlog = 128"}],"returns":"resource"},"sqlite_open":{"desc":"Opens an SQLite database and create the database if it does not exist","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $mode = 0666"},{"required":"no","param":"string $error_message = &#039;&#039;"}],"returns":"resource"},"sqlite_popen":{"desc":"Opens a persistent handle to an SQLite database and create the database if it does not exist","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $mode = 0666"},{"required":"no","param":"string $error_message = &#039;&#039;"}],"returns":"resource"},"ssh2_connect":{"desc":"Connect to an SSH server","params":[{"required":"yes","param":"string $host"},{"required":"no","param":"int $port = 22"},{"required":"no","param":"array $methods = &#039;&#039;"},{"required":"no","param":"array $callbacks = &#039;&#039;"}],"returns":"resource"},"ssh2_exec":{"desc":"Execute a command on a remote server","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $command"},{"required":"no","param":"string $pty = &#039;&#039;"},{"required":"no","param":"array $env = &#039;&#039;"},{"required":"no","param":"int $width = 80"},{"required":"no","param":"int $height = 25"},{"required":"no","param":"int $width_height_type = SSH2_TERM_UNIT_CHARS"}],"returns":"resource"},"ssh2_fetch_stream":{"desc":"Fetch an extended data stream","params":[{"required":"yes","param":"resource $channel"},{"required":"yes","param":"int $streamid"}],"returns":"resource"},"ssh2_publickey_init":{"desc":"Initialize Publickey subsystem","params":[{"required":"yes","param":"resource $session"}],"returns":"resource"},"ssh2_sftp":{"desc":"Initialize SFTP subsystem","params":[{"required":"yes","param":"resource $session"}],"returns":"resource"},"ssh2_shell":{"desc":"Request an interactive shell","params":[{"required":"yes","param":"resource $session"},{"required":"no","param":"string $term_type = &quot;vanilla&quot;"},{"required":"no","param":"array $env = &#039;&#039;"},{"required":"no","param":"int $width = 80"},{"required":"no","param":"int $height = 25"},{"required":"no","param":"int $width_height_type = SSH2_TERM_UNIT_CHARS"}],"returns":"resource"},"ssh2_tunnel":{"desc":"Open a tunnel through a remote server","params":[{"required":"yes","param":"resource $session"},{"required":"yes","param":"string $host"},{"required":"yes","param":"int $port"}],"returns":"resource"},"stomp_connect":{"desc":"Opens a connection","params":[{"required":"no","param":"string $broker = ini_get(&quot;stomp.default_broker_uri&quot;)"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"array $headers = &#039;&#039;"}],"returns":"resource"},"stream_context_create":{"desc":"Create a streams context","params":[{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $params = &#039;&#039;"}],"returns":"resource"},"stream_context_get_default":{"desc":"Retreive the default streams context","params":[{"required":"no","param":"array $options = &#039;&#039;"}],"returns":"resource"},"stream_context_set_default":{"desc":"Set the default streams context","params":[{"required":"yes","param":"array $options"}],"returns":"resource"},"stream_filter_append":{"desc":"Attach a filter to a stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"string $filtername"},{"required":"no","param":"int $read_write = &#039;&#039;"},{"required":"no","param":"mixed $params = &#039;&#039;"}],"returns":"resource"},"stream_filter_prepend":{"desc":"Attach a filter to a stream","params":[{"required":"yes","param":"resource $stream"},{"required":"yes","param":"string $filtername"},{"required":"no","param":"int $read_write = &#039;&#039;"},{"required":"no","param":"mixed $params = &#039;&#039;"}],"returns":"resource"},"stream_socket_accept":{"desc":"Accept a connection on a socket created by stream_socket_server","params":[{"required":"yes","param":"resource $server_socket"},{"required":"no","param":"float $timeout = ini_get(&quot;default_socket_timeout&quot;)"},{"required":"no","param":"string $peername = &#039;&#039;"}],"returns":"resource"},"stream_socket_client":{"desc":"Open Internet or Unix domain socket connection","params":[{"required":"yes","param":"string $remote_socket"},{"required":"no","param":"int $errno = &#039;&#039;"},{"required":"no","param":"string $errstr = &#039;&#039;"},{"required":"no","param":"float $timeout = ini_get(&quot;default_socket_timeout&quot;)"},{"required":"no","param":"int $flags = STREAM_CLIENT_CONNECT"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"resource"},"stream_socket_server":{"desc":"Create an Internet or Unix domain server socket","params":[{"required":"yes","param":"string $local_socket"},{"required":"no","param":"int $errno = &#039;&#039;"},{"required":"no","param":"string $errstr = &#039;&#039;"},{"required":"no","param":"int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"resource"},"svn_fs_apply_text":{"desc":"Creates and returns a stream that will be used to replace","params":[{"required":"yes","param":"resource $root"},{"required":"yes","param":"string $path"}],"returns":"resource"},"svn_fs_begin_txn2":{"desc":"Create a new transaction","params":[{"required":"yes","param":"resource $repos"},{"required":"yes","param":"int $rev"}],"returns":"resource"},"svn_fs_file_contents":{"desc":"Returns a stream to access the contents of a file from a given version of the fs","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"}],"returns":"resource"},"svn_fs_revision_root":{"desc":"Get a handle on a specific version of the repository root","params":[{"required":"yes","param":"resource $fs"},{"required":"yes","param":"int $revnum"}],"returns":"resource"},"svn_fs_txn_root":{"desc":"Creates and returns a transaction root","params":[{"required":"yes","param":"resource $txn"}],"returns":"resource"},"svn_repos_create":{"desc":"Create a new subversion repository at path","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"array $config = &#039;&#039;"},{"required":"no","param":"array $fsconfig = &#039;&#039;"}],"returns":"resource"},"svn_repos_fs":{"desc":"Gets a handle on the filesystem for a repository","params":[{"required":"yes","param":"resource $repos"}],"returns":"resource"},"svn_repos_fs_begin_txn_for_commit":{"desc":"Create a new transaction","params":[{"required":"yes","param":"resource $repos"},{"required":"yes","param":"int $rev"},{"required":"yes","param":"string $author"},{"required":"yes","param":"string $log_msg"}],"returns":"resource"},"svn_repos_open":{"desc":"Open a shared lock on a repository.","params":[{"required":"yes","param":"string $path"}],"returns":"resource"},"sybase_connect":{"desc":"Opens a Sybase server connection","params":[{"required":"no","param":"string $servername = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"string $appname = &#039;&#039;"},{"required":"no","param":"bool $new = false"}],"returns":"resource"},"sybase_pconnect":{"desc":"Open persistent Sybase connection","params":[{"required":"no","param":"string $servername = &#039;&#039;"},{"required":"no","param":"string $username = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"string $appname = &#039;&#039;"}],"returns":"resource"},"sybase_unbuffered_query":{"desc":"Send a Sybase query and do not block","params":[{"required":"yes","param":"string $query"},{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"bool $store_result = &#039;&#039;"}],"returns":"resource"},"tmpfile":{"desc":"Creates a temporary file","params":[],"returns":"resource"},"udm_alloc_agent":{"desc":"Allocate mnoGoSearch session","params":[{"required":"yes","param":"string $dbaddr"},{"required":"no","param":"string $dbmode = &#039;&#039;"}],"returns":"resource"},"udm_alloc_agent_array":{"desc":"Allocate mnoGoSearch session","params":[{"required":"yes","param":"array $databases"}],"returns":"resource"},"udm_find":{"desc":"Perform search","params":[{"required":"yes","param":"resource $agent"},{"required":"yes","param":"string $query"}],"returns":"resource"},"w32api_init_dtype":{"desc":"Creates an instance of the data type typename and fills it with the values passed","params":[{"required":"yes","param":"string $typename"},{"required":"yes","param":"mixed $value"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"resource"},"wddx_packet_start":{"desc":"Starts a new WDDX packet with structure inside it","params":[{"required":"no","param":"string $comment = &#039;&#039;"}],"returns":"resource"},"xmlrpc_server_create":{"desc":"Creates an xmlrpc server","params":[],"returns":"resource"},"xml_parser_create":{"desc":"Create an XML parser","params":[{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"resource"},"xml_parser_create_ns":{"desc":"Create an XML parser with namespace support","params":[{"required":"no","param":"string $encoding = &#039;&#039;"},{"required":"no","param":"string $separator = &#039;:&#039;"}],"returns":"resource"},"xslt_create":{"desc":"Create a new XSLT processor","params":[],"returns":"resource"},"addcslashes":{"desc":"Quote string with slashes in a C style","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $charlist"}],"returns":"string"},"addslashes":{"desc":"Quote string with slashes","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"apache_getenv":{"desc":"Get an Apache subprocess_env variable","params":[{"required":"yes","param":"string $variable"},{"required":"no","param":"bool $walk_to_top = &#039;&#039;"}],"returns":"string"},"apache_get_version":{"desc":"Fetch Apache version","params":[],"returns":"string"},"apache_note":{"desc":"Get and set apache request notes","params":[{"required":"yes","param":"string $note_name"},{"required":"no","param":"string $note_value = &#039;&#039;"}],"returns":"string"},"apc_bin_dump":{"desc":"Get a binary dump of the given files and user variables","params":[{"required":"no","param":"array $files = &#039;&#039;"},{"required":"no","param":"array $user_vars = &#039;&#039;"}],"returns":"string"},"apd_set_pprof_trace":{"desc":"Starts the session debugging","params":[{"required":"no","param":"string $dump_directory = &#039;&#039;"},{"required":"no","param":"string $fragment = &quot;pprof&quot;"}],"returns":"string"},"array_flip":{"desc":"Exchanges all keys with their associated values in an array","params":[{"required":"yes","param":"array $trans"}],"returns":"string"},"array_multisort":{"desc":"Sort multiple or multi-dimensional arrays","params":[{"required":"yes","param":"array $arr"},{"required":"no","param":"mixed $arg = SORT_REGULAR"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"string"},"base64_decode":{"desc":"Decodes data encoded with MIME base64","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"bool $strict = false"}],"returns":"string"},"base64_encode":{"desc":"Encodes data with MIME base64","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"basename":{"desc":"Returns trailing name component of path","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"string $suffix = &#039;&#039;"}],"returns":"string"},"base_convert":{"desc":"Convert a number between arbitrary bases","params":[{"required":"yes","param":"string $number"},{"required":"yes","param":"int $frombase"},{"required":"yes","param":"int $tobase"}],"returns":"string"},"bbcode_parse":{"desc":"Parse a string following a given rule set","params":[{"required":"yes","param":"resource $bbcode_container"},{"required":"yes","param":"string $to_parse"}],"returns":"string"},"bcadd":{"desc":"Add two arbitrary precision numbers","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcdiv":{"desc":"Divide two arbitrary precision numbers","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcmod":{"desc":"Get modulus of an arbitrary precision number","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $modulus"}],"returns":"string"},"bcmul":{"desc":"Multiply two arbitrary precision number","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcpow":{"desc":"Raise an arbitrary precision number to another","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcpowmod":{"desc":"Raise an arbitrary precision number to another, reduced by a specified modulus","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"yes","param":"string $modulus"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcsqrt":{"desc":"Get the square root of an arbitrary precision number","params":[{"required":"yes","param":"string $operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bcsub":{"desc":"Subtract one arbitrary precision number from another","params":[{"required":"yes","param":"string $left_operand"},{"required":"yes","param":"string $right_operand"},{"required":"no","param":"int $scale = &#039;&#039;"}],"returns":"string"},"bin2hex":{"desc":"Convert binary data into hexadecimal representation","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"bindtextdomain":{"desc":"Sets the path for a domain","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $directory"}],"returns":"string"},"bind_textdomain_codeset":{"desc":"Specify the character encoding in which the messages from the DOMAIN message catalog will be returned","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $codeset"}],"returns":"string"},"bson_encode":{"desc":"Serializes a PHP variable into a BSON string","params":[{"required":"yes","param":"mixed $anything"}],"returns":"string"},"bzerrstr":{"desc":"Returns a bzip2 error string","params":[{"required":"yes","param":"resource $bz"}],"returns":"string"},"bzread":{"desc":"Binary safe bzip2 file read","params":[{"required":"yes","param":"resource $bz"},{"required":"no","param":"int $length = 1024"}],"returns":"string"},"cairo_image_surface_get_data":{"desc":"Description","params":[{"required":"yes","param":"CairoImageSurface $surface"}],"returns":"string"},"cairo_ps_level_to_string":{"desc":"Description","params":[{"required":"yes","param":"int $level"}],"returns":"string"},"cairo_status_to_string":{"desc":"Retrieves the current status as string","params":[{"required":"yes","param":"int $status"}],"returns":"string"},"cairo_svg_version_to_string":{"desc":"Description","params":[{"required":"yes","param":"int $version"}],"returns":"string"},"cairo_version_string":{"desc":"Retrieves cairo version as string","params":[],"returns":"string"},"calculhmac":{"desc":"Obtain a hmac key (needs 2 arguments)","params":[{"required":"yes","param":"string $clent"},{"required":"yes","param":"string $data"}],"returns":"string"},"calcul_hmac":{"desc":"Obtain a hmac key (needs 8 arguments)","params":[{"required":"yes","param":"string $clent"},{"required":"yes","param":"string $siretcode"},{"required":"yes","param":"string $price"},{"required":"yes","param":"string $reference"},{"required":"yes","param":"string $validity"},{"required":"yes","param":"string $taxation"},{"required":"yes","param":"string $devise"},{"required":"yes","param":"string $language"}],"returns":"string"},"chr":{"desc":"Return a specific character","params":[{"required":"yes","param":"int $ascii"}],"returns":"string"},"chunk_split":{"desc":"Split a string into smaller chunks","params":[{"required":"yes","param":"string $body"},{"required":"no","param":"int $chunklen = 76"},{"required":"no","param":"string $end = &quot;rn&quot;"}],"returns":"string"},"collator_get_error_message":{"desc":"Get text for collator&#039;s last error code","params":[{"required":"yes","param":"Collator $coll"}],"returns":"string"},"collator_get_locale":{"desc":"Get the locale name of the collator","params":[{"required":"yes","param":"int $type"},{"required":"yes","param":"Collator $coll"}],"returns":"string"},"collator_get_sort_key":{"desc":"Get sorting key for a string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"Collator $coll"}],"returns":"string"},"com_create_guid":{"desc":"Generate a globally unique identifier (GUID)","params":[],"returns":"string"},"convert_cyr_string":{"desc":"Convert from one Cyrillic character set to another","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $from"},{"required":"yes","param":"string $to"}],"returns":"string"},"convert_uudecode":{"desc":"Decode a uuencoded string","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"convert_uuencode":{"desc":"Uuencode a string","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"crack_getlastmessage":{"desc":"Returns the message from the last obscure check","params":[],"returns":"string"},"create_function":{"desc":"Create an anonymous (lambda-style) function","params":[{"required":"yes","param":"string $args"},{"required":"yes","param":"string $code"}],"returns":"string"},"crypt":{"desc":"One-way string hashing","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $salt = &#039;&#039;"}],"returns":"string"},"ctype_alnum":{"desc":"Check for alphanumeric character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_alpha":{"desc":"Check for alphabetic character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_cntrl":{"desc":"Check for control character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_digit":{"desc":"Check for numeric character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_graph":{"desc":"Check for any printable character(s) except space","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_lower":{"desc":"Check for lowercase character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_print":{"desc":"Check for printable character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_punct":{"desc":"Check for any printable character which is not whitespace or an   alphanumeric character","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_space":{"desc":"Check for whitespace character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_upper":{"desc":"Check for uppercase character(s)","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"ctype_xdigit":{"desc":"Check for character(s) representing a hexadecimal digit","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"cubrid_client_encoding":{"desc":"Return the current CUBRID connection charset","params":[{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"string"},"cubrid_current_oid":{"desc":"Get OID of the current cursor location","params":[{"required":"yes","param":"resource $req_identifier"}],"returns":"string"},"cubrid_db_name":{"desc":"Get db name from results of cubrid_list_dbs","params":[{"required":"yes","param":"array $result"},{"required":"yes","param":"int $index"}],"returns":"string"},"cubrid_error":{"desc":"Get the error message","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"cubrid_error_msg":{"desc":"Get last error message for the most recent function call","params":[],"returns":"string"},"cubrid_field_flags":{"desc":"Return a string with the flags of the given field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"cubrid_field_name":{"desc":"Return the name of the specified field index","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"cubrid_field_table":{"desc":"Return the name of the table of the specified field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"cubrid_field_type":{"desc":"Return the type of the column corresponding to the given field offset","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"cubrid_get_charset":{"desc":"Return the current CUBRID connection charset","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"string"},"cubrid_get_class_name":{"desc":"Get the class name using OID","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $oid"}],"returns":"string"},"cubrid_get_client_info":{"desc":"Return the client library version","params":[],"returns":"string"},"cubrid_get_server_info":{"desc":"Return the CUBRID server version","params":[{"required":"yes","param":"resource $conn_identifier"}],"returns":"string"},"cubrid_insert_id":{"desc":"Return the ID generated for the lastest updated AUTO_INCREMENT column","params":[{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"string"},"cubrid_lob_size":{"desc":"Get BLOB/CLOB data size","params":[{"required":"yes","param":"resource $lob_identifier"}],"returns":"string"},"cubrid_new_glo":{"desc":"Create a glo instance","params":[{"required":"yes","param":"resource $conn_identifier"},{"required":"yes","param":"string $class_name"},{"required":"yes","param":"string $file_name"}],"returns":"string"},"cubrid_real_escape_string":{"desc":"Escape special characters in a string for use in an SQL statement","params":[{"required":"yes","param":"string $unescaped_string"},{"required":"no","param":"resource $conn_identifier = &#039;&#039;"}],"returns":"string"},"cubrid_result":{"desc":"Return the value of a specific field in a specific row","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"no","param":"mixed $field = &#039;&#039;"}],"returns":"string"},"cubrid_version":{"desc":"Get the CUBRID PHP module&#039;s version","params":[],"returns":"string"},"curl_error":{"desc":"Return a string containing the last error for the current session","params":[{"required":"yes","param":"resource $ch"}],"returns":"string"},"curl_multi_getcontent":{"desc":"Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set","params":[{"required":"yes","param":"resource $ch"}],"returns":"string"},"date":{"desc":"Format a local time/date","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $timestamp = &#039;&#039;"}],"returns":"string"},"datefmt_format":{"desc":"Format the date/time value as a string","params":[{"required":"yes","param":"mixed $value"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"string"},"datefmt_get_error_message":{"desc":"Get the error text from the last operation.","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"string"},"datefmt_get_locale":{"desc":"Get the locale used by formatter","params":[{"required":"no","param":"int $which = &#039;&#039;"},{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"string"},"datefmt_get_pattern":{"desc":"Get the pattern used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"string"},"datefmt_get_timezone_id":{"desc":"Get the timezone-id used for the IntlDateFormatter","params":[{"required":"yes","param":"IntlDateFormatter $fmt"}],"returns":"string"},"date_default_timezone_get":{"desc":"Gets the default timezone used by all date/time functions in a script","params":[],"returns":"string"},"db2_conn_error":{"desc":"Returns a string containing the SQLSTATE returned by the last connection attempt","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"db2_conn_errormsg":{"desc":"Returns the last connection error message and SQLCODE value","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"db2_escape_string":{"desc":"Used to escape certain characters","params":[{"required":"yes","param":"string $string_literal"}],"returns":"string"},"db2_field_name":{"desc":"Returns the name of the column in the result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"string"},"db2_field_type":{"desc":"Returns the data type of the indicated column in a result set","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"mixed $column"}],"returns":"string"},"db2_get_option":{"desc":"Retrieves an option value for a statement resource or a connection resource","params":[{"required":"yes","param":"resource $resource"},{"required":"yes","param":"string $option"}],"returns":"string"},"db2_last_insert_id":{"desc":"Returns the auto generated ID of the last insert query that successfully   executed on this connection","params":[{"required":"yes","param":"resource $resource"}],"returns":"string"},"db2_lob_read":{"desc":"Gets a user defined size of LOB files with each invocation","params":[{"required":"yes","param":"resource $stmt"},{"required":"yes","param":"int $colnum"},{"required":"yes","param":"int $length"}],"returns":"string"},"db2_stmt_error":{"desc":"Returns a string containing the SQLSTATE returned by an SQL statement","params":[{"required":"no","param":"resource $stmt = &#039;&#039;"}],"returns":"string"},"db2_stmt_errormsg":{"desc":"Returns a string containing the last SQL statement error message","params":[{"required":"no","param":"resource $stmt = &#039;&#039;"}],"returns":"string"},"dba_fetch":{"desc":"Fetch data specified by key","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $skip"}],"returns":"string"},"dba_firstkey":{"desc":"Fetch first key","params":[{"required":"yes","param":"resource $handle"}],"returns":"string"},"dba_nextkey":{"desc":"Fetch next key","params":[{"required":"yes","param":"resource $handle"}],"returns":"string"},"dbplus_chdir":{"desc":"Get/Set database virtual current directory","params":[{"required":"no","param":"string $newdir = &#039;&#039;"}],"returns":"string"},"dbplus_errcode":{"desc":"Get error string for given errorcode or last error","params":[{"required":"no","param":"int $errno = &#039;&#039;"}],"returns":"string"},"dbplus_tcl":{"desc":"Execute TCL code on server side","params":[{"required":"yes","param":"int $sid"},{"required":"yes","param":"string $script"}],"returns":"string"},"dbx_error":{"desc":"Report the error message of the latest function call in the module","params":[{"required":"yes","param":"object $link_identifier"}],"returns":"string"},"dbx_escape_string":{"desc":"Escape a string so it can safely be used in an sql-statement","params":[{"required":"yes","param":"object $link_identifier"},{"required":"yes","param":"string $text"}],"returns":"string"},"dcgettext":{"desc":"Overrides the domain for a single lookup","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $message"},{"required":"yes","param":"int $category"}],"returns":"string"},"dcngettext":{"desc":"Plural version of dcgettext","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $msgid1"},{"required":"yes","param":"string $msgid2"},{"required":"yes","param":"int $n"},{"required":"yes","param":"int $category"}],"returns":"string"},"decbin":{"desc":"Decimal to binary","params":[{"required":"yes","param":"int $number"}],"returns":"string"},"dechex":{"desc":"Decimal to hexadecimal","params":[{"required":"yes","param":"int $number"}],"returns":"string"},"decoct":{"desc":"Decimal to octal","params":[{"required":"yes","param":"int $number"}],"returns":"string"},"dgettext":{"desc":"Override the current domain","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $message"}],"returns":"string"},"dio_read":{"desc":"Reads bytes from a file descriptor","params":[{"required":"yes","param":"resource $fd"},{"required":"no","param":"int $len = 1024"}],"returns":"string"},"dirname":{"desc":"Returns parent directory&#039;s path","params":[{"required":"yes","param":"string $path"}],"returns":"string"},"dngettext":{"desc":"Plural version of dgettext","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $msgid1"},{"required":"yes","param":"string $msgid2"},{"required":"yes","param":"int $n"}],"returns":"string"},"domxml_version":{"desc":"Gets the XML library version","params":[],"returns":"string"},"enchant_broker_get_error":{"desc":"Returns the last error of the broker","params":[{"required":"yes","param":"resource $broker"}],"returns":"string"},"enchant_dict_get_error":{"desc":"Returns the last error of the current spelling-session","params":[{"required":"yes","param":"resource $dict"}],"returns":"string"},"eregi_replace":{"desc":"Replace regular expression case insensitive","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $replacement"},{"required":"yes","param":"string $string"}],"returns":"string"},"ereg_replace":{"desc":"Replace regular expression","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $replacement"},{"required":"yes","param":"string $string"}],"returns":"string"},"escapeshellarg":{"desc":"Escape a string to be used as a shell argument","params":[{"required":"yes","param":"string $arg"}],"returns":"string"},"escapeshellcmd":{"desc":"Escape shell metacharacters","params":[{"required":"yes","param":"string $command"}],"returns":"string"},"event_buffer_read":{"desc":"Read data from a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $data_size"}],"returns":"string"},"exec":{"desc":"Execute an external program","params":[{"required":"yes","param":"string $command"},{"required":"no","param":"array $output = &#039;&#039;"},{"required":"no","param":"int $return_var = &#039;&#039;"}],"returns":"string"},"exif_tagname":{"desc":"Get the header name for an index","params":[{"required":"yes","param":"int $index"}],"returns":"string"},"exif_thumbnail":{"desc":"Retrieve the embedded thumbnail of a TIFF or JPEG image","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"int $width = &#039;&#039;"},{"required":"no","param":"int $height = &#039;&#039;"},{"required":"no","param":"int $imagetype = &#039;&#039;"}],"returns":"string"},"fbsql_create_blob":{"desc":"Create a BLOB","params":[{"required":"yes","param":"string $blob_data"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"fbsql_create_clob":{"desc":"Create a CLOB","params":[{"required":"yes","param":"string $clob_data"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"fbsql_database":{"desc":"Get or set the database name used with a connection","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $database = &#039;&#039;"}],"returns":"string"},"fbsql_database_password":{"desc":"Sets or retrieves the password for a FrontBase database","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $database_password = &#039;&#039;"}],"returns":"string"},"fbsql_error":{"desc":"Returns the error message from previous operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"fbsql_field_flags":{"desc":"Get the flags associated with the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"string"},"fbsql_field_name":{"desc":"Get the name of the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_index = &#039;&#039;"}],"returns":"string"},"fbsql_field_table":{"desc":"Get name of the table the specified field is in","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"string"},"fbsql_field_type":{"desc":"Get the type of the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $field_offset = &#039;&#039;"}],"returns":"string"},"fbsql_hostname":{"desc":"Get or set the host name used with a connection","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $host_name = &#039;&#039;"}],"returns":"string"},"fbsql_password":{"desc":"Get or set the user password used with a connection","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $password = &#039;&#039;"}],"returns":"string"},"fbsql_read_blob":{"desc":"Read a BLOB from the database","params":[{"required":"yes","param":"string $blob_handle"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"fbsql_read_clob":{"desc":"Read a CLOB from the database","params":[{"required":"yes","param":"string $clob_handle"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"fbsql_table_name":{"desc":"Get table name of field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"string"},"fbsql_username":{"desc":"Get or set the username for the connection","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"no","param":"string $username = &#039;&#039;"}],"returns":"string"},"fdf_error":{"desc":"Return error description for FDF error code","params":[{"required":"no","param":"int $error_code = -1"}],"returns":"string"},"fdf_get_encoding":{"desc":"Get the value of the /Encoding key","params":[{"required":"yes","param":"resource $fdf_document"}],"returns":"string"},"fdf_get_file":{"desc":"Get the value of the /F key","params":[{"required":"yes","param":"resource $fdf_document"}],"returns":"string"},"fdf_get_status":{"desc":"Get the value of the /STATUS key","params":[{"required":"yes","param":"resource $fdf_document"}],"returns":"string"},"fdf_get_version":{"desc":"Gets version number for FDF API or file","params":[{"required":"no","param":"resource $fdf_document = &#039;&#039;"}],"returns":"string"},"fdf_next_field_name":{"desc":"Get the next field name","params":[{"required":"yes","param":"resource $fdf_document"},{"required":"no","param":"string $fieldname = &#039;&#039;"}],"returns":"string"},"fdf_save_string":{"desc":"Returns the FDF document as a string","params":[{"required":"yes","param":"resource $fdf_document"}],"returns":"string"},"fgetc":{"desc":"Gets character from file pointer","params":[{"required":"yes","param":"resource $handle"}],"returns":"string"},"fgets":{"desc":"Gets line from file pointer","params":[{"required":"yes","param":"resource $handle"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"fgetss":{"desc":"Gets line from file pointer and strip HTML tags","params":[{"required":"yes","param":"resource $handle"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"string $allowable_tags = &#039;&#039;"}],"returns":"string"},"filepro_fieldname":{"desc":"Gets the name of a field","params":[{"required":"yes","param":"int $field_number"}],"returns":"string"},"filepro_fieldtype":{"desc":"Gets the type of a field","params":[{"required":"yes","param":"int $field_number"}],"returns":"string"},"filepro_retrieve":{"desc":"Retrieves data from a filePro database","params":[{"required":"yes","param":"int $row_number"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"filetype":{"desc":"Gets file type","params":[{"required":"yes","param":"string $filename"}],"returns":"string"},"file_get_contents":{"desc":"Reads entire file into a string","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $use_include_path = false"},{"required":"no","param":"resource $context = &#039;&#039;"},{"required":"no","param":"int $offset = -1"},{"required":"no","param":"int $maxlen = &#039;&#039;"}],"returns":"string"},"finfo_buffer":{"desc":"Return information about a string buffer","params":[{"required":"yes","param":"resource $finfo"},{"required":"yes","param":"string $string"},{"required":"no","param":"int $options = FILEINFO_NONE"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"string"},"finfo_file":{"desc":"Return information about a file","params":[{"required":"yes","param":"resource $finfo"},{"required":"yes","param":"string $file_name"},{"required":"no","param":"int $options = FILEINFO_NONE"},{"required":"no","param":"resource $context = &#039;&#039;"}],"returns":"string"},"fread":{"desc":"Binary-safe file read","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $length"}],"returns":"string"},"fribidi_log2vis":{"desc":"Convert a logical string to a visual one","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $direction"},{"required":"yes","param":"int $charset"}],"returns":"string"},"ftp_mkdir":{"desc":"Creates a directory","params":[{"required":"yes","param":"resource $ftp_stream"},{"required":"yes","param":"string $directory"}],"returns":"string"},"ftp_pwd":{"desc":"Returns the current directory name","params":[{"required":"yes","param":"resource $ftp_stream"}],"returns":"string"},"ftp_systype":{"desc":"Returns the system type identifier of the remote FTP server","params":[{"required":"yes","param":"resource $ftp_stream"}],"returns":"string"},"gearman_job_handle":{"desc":"Get the job handle","params":[],"returns":"string"},"geoip_continent_code_by_name":{"desc":"Get the two letter continent code","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_country_code3_by_name":{"desc":"Get the three letter country code","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_country_code_by_name":{"desc":"Get the two letter country code","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_country_name_by_name":{"desc":"Get the full country name","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_database_info":{"desc":"Get GeoIP Database information","params":[{"required":"no","param":"int $database = GEOIP_COUNTRY_EDITION"}],"returns":"string"},"geoip_db_filename":{"desc":"Returns the filename of the corresponding GeoIP Database","params":[{"required":"yes","param":"int $database"}],"returns":"string"},"geoip_isp_by_name":{"desc":"Get the Internet Service Provider (ISP) name","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_org_by_name":{"desc":"Get the organization name","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"geoip_region_name_by_code":{"desc":"Returns the region name for some country and region code combo","params":[{"required":"yes","param":"string $country_code"},{"required":"yes","param":"string $region_code"}],"returns":"string"},"geoip_time_zone_by_country_and_region":{"desc":"Returns the time zone for some country and region code combo","params":[{"required":"yes","param":"string $country_code"},{"required":"no","param":"string $region_code = &#039;&#039;"}],"returns":"string"},"getcwd":{"desc":"Gets the current working directory","params":[],"returns":"string"},"getenv":{"desc":"Gets the value of an environment variable","params":[{"required":"yes","param":"string $varname"}],"returns":"string"},"gethostbyaddr":{"desc":"Get the Internet host name corresponding to a given IP address","params":[{"required":"yes","param":"string $ip_address"}],"returns":"string"},"gethostbyname":{"desc":"Get the IPv4 address corresponding to a given Internet host name","params":[{"required":"yes","param":"string $hostname"}],"returns":"string"},"gethostname":{"desc":"Gets the host name","params":[],"returns":"string"},"getprotobynumber":{"desc":"Get protocol name associated with protocol number","params":[{"required":"yes","param":"int $number"}],"returns":"string"},"getservbyport":{"desc":"Get Internet service which corresponds to port and protocol","params":[{"required":"yes","param":"int $port"},{"required":"yes","param":"string $protocol"}],"returns":"string"},"gettext":{"desc":"Lookup a message in the current domain","params":[{"required":"yes","param":"string $message"}],"returns":"string"},"gettype":{"desc":"Get the type of a variable","params":[{"required":"yes","param":"mixed $var"}],"returns":"string"},"get_called_class":{"desc":"the &quot;Late Static Binding&quot; class name","params":[],"returns":"string"},"get_cfg_var":{"desc":"Gets the value of a PHP configuration option","params":[{"required":"yes","param":"string $option"}],"returns":"string"},"get_class":{"desc":"Returns the name of the class of an object","params":[{"required":"no","param":"object $object = &#039;&#039;"}],"returns":"string"},"get_current_user":{"desc":"Gets the name of the owner of the current PHP script","params":[],"returns":"string"},"get_include_path":{"desc":"Gets the current include_path configuration option","params":[],"returns":"string"},"get_parent_class":{"desc":"Retrieves the parent class name for object or class","params":[{"required":"no","param":"mixed $object = &#039;&#039;"}],"returns":"string"},"get_resource_type":{"desc":"Returns the resource type","params":[{"required":"yes","param":"resource $handle"}],"returns":"string"},"gmdate":{"desc":"Format a GMT/UTC date/time","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $timestamp = &#039;&#039;"}],"returns":"string"},"gmp_strval":{"desc":"Convert GMP number to string","params":[{"required":"yes","param":"resource $gmpnumber"},{"required":"no","param":"int $base = &#039;&#039;"}],"returns":"string"},"gmstrftime":{"desc":"Format a GMT/UTC time/date according to locale settings","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $timestamp = time("}],"returns":"string"},"gnupg_decrypt":{"desc":"Decrypts a given text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $text"}],"returns":"string"},"gnupg_encrypt":{"desc":"Encrypts a given text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $plaintext"}],"returns":"string"},"gnupg_encryptsign":{"desc":"Encrypts and signs a given text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $plaintext"}],"returns":"string"},"gnupg_export":{"desc":"Exports a key","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $fingerprint"}],"returns":"string"},"gnupg_geterror":{"desc":"Returns the errortext, if a function fails","params":[{"required":"yes","param":"resource $identifier"}],"returns":"string"},"gnupg_sign":{"desc":"Signs a given text","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"string $plaintext"}],"returns":"string"},"grapheme_extract":{"desc":"Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"int $size"},{"required":"no","param":"int $extract_type = &#039;&#039;"},{"required":"no","param":"int $start = &#039;&#039;"},{"required":"no","param":"int $next = &#039;&#039;"}],"returns":"string"},"grapheme_stristr":{"desc":"Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $before_needle = false"}],"returns":"string"},"grapheme_strstr":{"desc":"Returns part of haystack string from the first occurrence of needle to the end of haystack.","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $before_needle = false"}],"returns":"string"},"gupnp_context_get_host_ip":{"desc":"Get the IP address","params":[{"required":"yes","param":"resource $context"}],"returns":"string"},"gupnp_root_device_get_relative_location":{"desc":"Get the relative location of root device.","params":[{"required":"yes","param":"resource $root_device"}],"returns":"string"},"gzcompress":{"desc":"Compress a string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $level = -1"}],"returns":"string"},"gzdecode":{"desc":"Decodes a gzip compressed string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"gzdeflate":{"desc":"Deflate a string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $level = -1"}],"returns":"string"},"gzencode":{"desc":"Create a gzip compressed string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $level = -1"},{"required":"no","param":"int $encoding_mode = FORCE_GZIP"}],"returns":"string"},"gzgetc":{"desc":"Get character from gz-file pointer","params":[{"required":"yes","param":"resource $zp"}],"returns":"string"},"gzgets":{"desc":"Get line from file pointer","params":[{"required":"yes","param":"resource $zp"},{"required":"yes","param":"int $length"}],"returns":"string"},"gzgetss":{"desc":"Get line from gz-file pointer and strip HTML tags","params":[{"required":"yes","param":"resource $zp"},{"required":"yes","param":"int $length"},{"required":"no","param":"string $allowable_tags = &#039;&#039;"}],"returns":"string"},"gzinflate":{"desc":"Inflate a deflated string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"gzread":{"desc":"Binary-safe gz-file read","params":[{"required":"yes","param":"resource $zp"},{"required":"yes","param":"int $length"}],"returns":"string"},"gzuncompress":{"desc":"Uncompress a compressed string","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"hash":{"desc":"Generate a hash value (message digest)","params":[{"required":"yes","param":"string $algo"},{"required":"yes","param":"string $data"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"hash_file":{"desc":"Generate a hash value using the contents of a given file","params":[{"required":"yes","param":"string $algo"},{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"hash_final":{"desc":"Finalize an incremental hash and return resulting digest","params":[{"required":"yes","param":"resource $context"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"hash_hmac":{"desc":"Generate a keyed hash value using the HMAC method","params":[{"required":"yes","param":"string $algo"},{"required":"yes","param":"string $data"},{"required":"yes","param":"string $key"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"hash_hmac_file":{"desc":"Generate a keyed hash value using the HMAC method and the contents of a given file","params":[{"required":"yes","param":"string $algo"},{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $key"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"hebrev":{"desc":"Convert logical Hebrew text to visual text","params":[{"required":"yes","param":"string $hebrew_text"},{"required":"no","param":"int $max_chars_per_line = &#039;&#039;"}],"returns":"string"},"hebrevc":{"desc":"Convert logical Hebrew text to visual text with newline conversion","params":[{"required":"yes","param":"string $hebrew_text"},{"required":"no","param":"int $max_chars_per_line = &#039;&#039;"}],"returns":"string"},"htmlentities":{"desc":"Convert all applicable characters to HTML entities","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $flags = ENT_COMPAT"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"bool $double_encode = true"}],"returns":"string"},"htmlspecialchars":{"desc":"Convert special characters to HTML entities","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $flags = ENT_COMPAT"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"bool $double_encode = true"}],"returns":"string"},"htmlspecialchars_decode":{"desc":"Convert special HTML entities back to characters","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $quote_style = ENT_COMPAT"}],"returns":"string"},"html_entity_decode":{"desc":"Convert all HTML entities to their applicable characters","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"int $quote_style = ENT_COMPAT"},{"required":"no","param":"string $charset = &#039;UTF-8&#039;"}],"returns":"string"},"http_build_cookie":{"desc":"Build cookie string","params":[{"required":"yes","param":"array $cookie"}],"returns":"string"},"http_build_query":{"desc":"Generate URL-encoded query string","params":[{"required":"yes","param":"mixed $query_data"},{"required":"no","param":"string $numeric_prefix = &#039;&#039;"},{"required":"no","param":"string $arg_separator = &#039;&#039;"},{"required":"no","param":"int $enc_type = &#039;&#039;"}],"returns":"string"},"http_build_str":{"desc":"Build query string","params":[{"required":"yes","param":"array $query"},{"required":"no","param":"string $prefix = &#039;&#039;"},{"required":"no","param":"string $arg_separator = ini_get(&quot;arg_separator.output&quot;"}],"returns":"string"},"http_build_url":{"desc":"Build a URL","params":[{"required":"no","param":"mixed $url = &#039;&#039;"},{"required":"no","param":"mixed $parts = &#039;&#039;"},{"required":"no","param":"int $flags = HTTP_URL_REPLACE"},{"required":"no","param":"array $new_url = &#039;&#039;"}],"returns":"string"},"http_chunked_decode":{"desc":"Decode chunked-encoded data","params":[{"required":"yes","param":"string $encoded"}],"returns":"string"},"http_date":{"desc":"Compose HTTP RFC compliant date","params":[{"required":"no","param":"int $timestamp = &#039;&#039;"}],"returns":"string"},"http_deflate":{"desc":"Deflate data","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"string"},"http_get":{"desc":"Perform GET request","params":[{"required":"yes","param":"string $url"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_get_request_body":{"desc":"Get request body as string","params":[],"returns":"string"},"http_head":{"desc":"Perform HEAD request","params":[{"required":"yes","param":"string $url"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_inflate":{"desc":"Inflate data","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"http_negotiate_charset":{"desc":"Negotiate clients preferred character set","params":[{"required":"yes","param":"array $supported"},{"required":"no","param":"array $result = &#039;&#039;"}],"returns":"string"},"http_negotiate_content_type":{"desc":"Negotiate clients preferred content type","params":[{"required":"yes","param":"array $supported"},{"required":"no","param":"array $result = &#039;&#039;"}],"returns":"string"},"http_negotiate_language":{"desc":"Negotiate clients preferred language","params":[{"required":"yes","param":"array $supported"},{"required":"no","param":"array $result = &#039;&#039;"}],"returns":"string"},"http_persistent_handles_clean":{"desc":"Clean up persistent handles","params":[{"required":"no","param":"string $ident = &#039;&#039;"}],"returns":"string"},"http_persistent_handles_ident":{"desc":"Get/set ident of persistent handles","params":[{"required":"no","param":"string $ident = &#039;&#039;"}],"returns":"string"},"http_post_data":{"desc":"Perform POST request with pre-encoded data","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"string $data"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_post_fields":{"desc":"Perform POST request with data to be encoded","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"array $data"},{"required":"no","param":"array $files = &#039;&#039;"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_put_data":{"desc":"Perform PUT request with data","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"string $data"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_put_file":{"desc":"Perform PUT request with file","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"string $file"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_put_stream":{"desc":"Perform PUT request with stream","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"resource $stream"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_request":{"desc":"Perform custom request","params":[{"required":"yes","param":"int $method"},{"required":"yes","param":"string $url"},{"required":"no","param":"string $body = &#039;&#039;"},{"required":"no","param":"array $options = &#039;&#039;"},{"required":"no","param":"array $info = &#039;&#039;"}],"returns":"string"},"http_request_body_encode":{"desc":"Encode request body","params":[{"required":"yes","param":"array $fields"},{"required":"yes","param":"array $files"}],"returns":"string"},"http_request_method_name":{"desc":"Get request method name","params":[{"required":"yes","param":"int $method"}],"returns":"string"},"hw_Array2Objrec":{"desc":"Convert attributes from object array to object record","params":[{"required":"yes","param":"array $object_array"}],"returns":"string"},"hw_DocByAnchorObj":{"desc":"Object record object belonging to anchor","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $anchorID"}],"returns":"string"},"hw_Document_Attributes":{"desc":"Object record of hw_document","params":[{"required":"yes","param":"int $hw_document"}],"returns":"string"},"hw_Document_BodyTag":{"desc":"Body tag of hw_document","params":[{"required":"yes","param":"int $hw_document"},{"required":"no","param":"string $prefix = &#039;&#039;"}],"returns":"string"},"hw_Document_Content":{"desc":"Returns content of hw_document","params":[{"required":"yes","param":"int $hw_document"}],"returns":"string"},"hw_dummy":{"desc":"Hyperwave dummy function","params":[{"required":"yes","param":"int $link"},{"required":"yes","param":"int $id"},{"required":"yes","param":"int $msgid"}],"returns":"string"},"hw_ErrorMsg":{"desc":"Returns error message","params":[{"required":"yes","param":"int $connection"}],"returns":"string"},"hw_GetAndLock":{"desc":"Return object record and lock object","params":[{"required":"yes","param":"int $connection"},{"required":"yes","param":"int $objectID"}],"returns":"string"},"hw_getrellink":{"desc":"Get link from source to dest relative to rootid","params":[{"required":"yes","param":"int $link"},{"required":"yes","param":"int $rootid"},{"required":"yes","param":"int $sourceid"},{"required":"yes","param":"int $destid"}],"returns":"string"},"hw_getusername":{"desc":"Name of currently logged in user","params":[{"required":"yes","param":"int $connection"}],"returns":"string"},"hw_Identify":{"desc":"Identifies as user","params":[{"required":"yes","param":"int $link"},{"required":"yes","param":"string $username"},{"required":"yes","param":"string $password"}],"returns":"string"},"hw_Info":{"desc":"Info about connection","params":[{"required":"yes","param":"int $connection"}],"returns":"string"},"hw_stat":{"desc":"Returns status string","params":[{"required":"yes","param":"int $link"}],"returns":"string"},"ibase_blob_get":{"desc":"Get len bytes data from open blob","params":[{"required":"yes","param":"resource $blob_handle"},{"required":"yes","param":"int $len"}],"returns":"string"},"ibase_blob_import":{"desc":"Create blob, copy file in it, and close it","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $file_handle"}],"returns":"string"},"ibase_db_info":{"desc":"Request statistics about a database","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"string $db"},{"required":"yes","param":"int $action"},{"required":"no","param":"int $argument = &#039;&#039;"}],"returns":"string"},"ibase_errmsg":{"desc":"Return error messages","params":[],"returns":"string"},"ibase_server_info":{"desc":"Request information about a database server","params":[{"required":"yes","param":"resource $service_handle"},{"required":"yes","param":"int $action"}],"returns":"string"},"ibase_wait_event":{"desc":"Wait for an event to be posted by the database","params":[{"required":"yes","param":"string $event_name1"},{"required":"no","param":"string $event_name2 = &#039;&#039;"},{"required":"no","param":"string $... = &#039;&#039;"},{"required":"yes","param":"resource $connection"}],"returns":"string"},"iconv":{"desc":"Convert string to requested character encoding","params":[{"required":"yes","param":"string $in_charset"},{"required":"yes","param":"string $out_charset"},{"required":"yes","param":"string $str"}],"returns":"string"},"iconv_mime_decode":{"desc":"Decodes a MIME header field","params":[{"required":"yes","param":"string $encoded_header"},{"required":"no","param":"int $mode = &#039;&#039;"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"string"},"iconv_mime_encode":{"desc":"Composes a MIME header field","params":[{"required":"yes","param":"string $field_name"},{"required":"yes","param":"string $field_value"},{"required":"no","param":"array $preferences = &#039;&#039;"}],"returns":"string"},"iconv_substr":{"desc":"Cut out part of a string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"int $offset"},{"required":"no","param":"int $length = iconv_strlen($str"},{"required":"yes","param":"$charset)"},{"required":"no","param":"string $charset = ini_get(&quot;iconv.internal_encoding&quot;"}],"returns":"string"},"id3_get_frame_long_name":{"desc":"Get the long name of an ID3v2 frame","params":[{"required":"yes","param":"string $frameId"}],"returns":"string"},"id3_get_frame_short_name":{"desc":"Get the short name of an ID3v2 frame","params":[{"required":"yes","param":"string $frameId"}],"returns":"string"},"id3_get_genre_name":{"desc":"Get the name for a genre id","params":[{"required":"yes","param":"int $genre_id"}],"returns":"string"},"idn_to_ascii":{"desc":"Convert domain name to IDNA ASCII form.","params":[{"required":"yes","param":"string $domain"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"idn_to_utf8":{"desc":"Convert domain name from IDNA ASCII to Unicode.","params":[{"required":"yes","param":"string $domain"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"ifxus_read_slob":{"desc":"Reads nbytes of the slob object","params":[{"required":"yes","param":"int $bid"},{"required":"yes","param":"int $nbytes"}],"returns":"string"},"ifx_error":{"desc":"Returns error code of last Informix call","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"ifx_errormsg":{"desc":"Returns error message of last Informix call","params":[{"required":"no","param":"int $errorcode = &#039;&#039;"}],"returns":"string"},"ifx_get_blob":{"desc":"Return the content of a blob object","params":[{"required":"yes","param":"int $bid"}],"returns":"string"},"ifx_get_char":{"desc":"Return the content of the char object","params":[{"required":"yes","param":"int $bid"}],"returns":"string"},"iis_get_script_map":{"desc":"Gets script mapping on a virtual directory for a specific extension","params":[{"required":"yes","param":"int $server_instance"},{"required":"yes","param":"string $virtual_path"},{"required":"yes","param":"string $script_extension"}],"returns":"string"},"image_type_to_extension":{"desc":"Get file extension for image type","params":[{"required":"yes","param":"int $imagetype"},{"required":"no","param":"bool $include_dot = &#039;&#039;"}],"returns":"string"},"image_type_to_mime_type":{"desc":"Get Mime-Type for image-type returned by getimagesize,   exif_read_data, exif_thumbnail, exif_imagetype","params":[{"required":"yes","param":"int $imagetype"}],"returns":"string"},"imap_8bit":{"desc":"Convert an 8bit string to a quoted-printable string","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"imap_base64":{"desc":"Decode BASE64 encoded text","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"imap_binary":{"desc":"Convert an 8bit string to a base64 string","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"imap_body":{"desc":"Read the message body","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"imap_fetchbody":{"desc":"Fetch a particular section of the body of the message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"yes","param":"string $section"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"imap_fetchheader":{"desc":"Returns header for a message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"imap_fetchmime":{"desc":"Fetch MIME headers for a particular section of the message","params":[{"required":"yes","param":"resource $imap_stream"},{"required":"yes","param":"int $msg_number"},{"required":"yes","param":"string $section"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"imap_last_error":{"desc":"Gets the last IMAP error that occurred during this page request","params":[],"returns":"string"},"imap_mail_compose":{"desc":"Create a MIME message based on given envelope and body sections","params":[{"required":"yes","param":"array $envelope"},{"required":"yes","param":"array $body"}],"returns":"string"},"imap_qprint":{"desc":"Convert a quoted-printable string to an 8 bit string","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"imap_rfc822_write_address":{"desc":"Returns a properly formatted email address given the mailbox, host, and personal info","params":[{"required":"yes","param":"string $mailbox"},{"required":"yes","param":"string $host"},{"required":"yes","param":"string $personal"}],"returns":"string"},"imap_utf7_decode":{"desc":"Decodes a modified UTF-7 encoded string","params":[{"required":"yes","param":"string $text"}],"returns":"string"},"imap_utf7_encode":{"desc":"Converts ISO-8859-1 string to modified UTF-7 text","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"imap_utf8":{"desc":"Converts MIME-encoded text to UTF-8","params":[{"required":"yes","param":"string $mime_encoded_text"}],"returns":"string"},"implode":{"desc":"Join array elements with a string","params":[{"required":"yes","param":"string $glue"},{"required":"yes","param":"array $pieces"}],"returns":"string"},"inet_ntop":{"desc":"Converts a packed internet address to a human readable representation","params":[{"required":"yes","param":"string $in_addr"}],"returns":"string"},"inet_pton":{"desc":"Converts a human readable IP address to its packed in_addr representation","params":[{"required":"yes","param":"string $address"}],"returns":"string"},"ingres_charset":{"desc":"Returns the installation character set","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"ingres_cursor":{"desc":"Get a cursor name for a given result resource","params":[{"required":"yes","param":"resource $result"}],"returns":"string"},"ingres_error":{"desc":"Get a meaningful error message for the last error generated","params":[{"required":"no","param":"resource $link = &#039;&#039;"}],"returns":"string"},"ingres_errsqlstate":{"desc":"Get the last SQLSTATE error code generated","params":[{"required":"no","param":"resource $link = &#039;&#039;"}],"returns":"string"},"ingres_escape_string":{"desc":"Escape special characters for use in a query","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $source_string"}],"returns":"string"},"ingres_field_name":{"desc":"Get the name of a field in a query result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"string"},"ingres_field_type":{"desc":"Get the type of a field in a query result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $index"}],"returns":"string"},"ini_get":{"desc":"Gets the value of a configuration option","params":[{"required":"yes","param":"string $varname"}],"returns":"string"},"ini_set":{"desc":"Sets the value of a configuration option","params":[{"required":"yes","param":"string $varname"},{"required":"yes","param":"string $newvalue"}],"returns":"string"},"intl_error_name":{"desc":"Get symbolic name for a given error code","params":[{"required":"yes","param":"int $error_code"}],"returns":"string"},"intl_get_error_message":{"desc":"Get description of the last error","params":[],"returns":"string"},"JDMonthName":{"desc":"Returns a month name","params":[{"required":"yes","param":"int $julianday"},{"required":"yes","param":"int $mode"}],"returns":"string"},"JDToFrench":{"desc":"Converts a Julian Day Count to the French Republican Calendar","params":[{"required":"yes","param":"int $juliandaycount"}],"returns":"string"},"JDToGregorian":{"desc":"Converts Julian Day Count to Gregorian date","params":[{"required":"yes","param":"int $julianday"}],"returns":"string"},"jdtojewish":{"desc":"Converts a Julian day count to a Jewish calendar date","params":[{"required":"yes","param":"int $juliandaycount"},{"required":"no","param":"bool $hebrew = false"},{"required":"no","param":"int $fl = &#039;&#039;"}],"returns":"string"},"JDToJulian":{"desc":"Converts a Julian Day Count to a Julian Calendar Date","params":[{"required":"yes","param":"int $julianday"}],"returns":"string"},"json_encode":{"desc":"Returns the JSON representation of a value","params":[{"required":"yes","param":"mixed $value"},{"required":"no","param":"int $options = &#039;&#039;"}],"returns":"string"},"judy_version":{"desc":"Return or print the current PHP Judy version","params":[],"returns":"string"},"lcfirst":{"desc":"Make a string&#039;s first character lowercase","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"ldap_8859_to_t61":{"desc":"Translate 8859 characters to t61 characters","params":[{"required":"yes","param":"string $value"}],"returns":"string"},"ldap_dn2ufn":{"desc":"Convert DN to User Friendly Naming format","params":[{"required":"yes","param":"string $dn"}],"returns":"string"},"ldap_err2str":{"desc":"Convert LDAP error number into string error message","params":[{"required":"yes","param":"int $errno"}],"returns":"string"},"ldap_error":{"desc":"Return the LDAP error message of the last LDAP command","params":[{"required":"yes","param":"resource $link_identifier"}],"returns":"string"},"ldap_first_attribute":{"desc":"Return first attribute","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"}],"returns":"string"},"ldap_get_dn":{"desc":"Get the DN of a result entry","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"}],"returns":"string"},"ldap_next_attribute":{"desc":"Get the next attribute in result","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"resource $result_entry_identifier"}],"returns":"string"},"ldap_t61_to_8859":{"desc":"Translate t61 characters to 8859 characters","params":[{"required":"yes","param":"string $value"}],"returns":"string"},"locale_accept_from_http":{"desc":"Tries to find out best available locale based on HTTP &quot;Accept-Language&quot; header","params":[{"required":"yes","param":"string $header"}],"returns":"string"},"locale_compose":{"desc":"Returns a correctly ordered and delimited locale ID","params":[{"required":"yes","param":"array $subtags"}],"returns":"string"},"locale_get_default":{"desc":"Gets the default locale value from the INTL global &#039;default_locale&#039;","params":[],"returns":"string"},"locale_get_display_language":{"desc":"Returns an appropriately localized display name for language of the inputlocale","params":[{"required":"yes","param":"string $locale"},{"required":"no","param":"string $in_locale = &#039;&#039;"}],"returns":"string"},"locale_get_display_name":{"desc":"Returns an appropriately localized display name for the input locale","params":[{"required":"yes","param":"string $locale"},{"required":"no","param":"string $in_locale = &#039;&#039;"}],"returns":"string"},"locale_get_display_region":{"desc":"Returns an appropriately localized display name for region of the input locale","params":[{"required":"yes","param":"string $locale"},{"required":"no","param":"string $in_locale = &#039;&#039;"}],"returns":"string"},"locale_get_display_script":{"desc":"Returns an appropriately localized display name for script of the input locale","params":[{"required":"yes","param":"string $locale"},{"required":"no","param":"string $in_locale = &#039;&#039;"}],"returns":"string"},"locale_get_display_variant":{"desc":"Returns an appropriately localized display name for variants of the input locale","params":[{"required":"yes","param":"string $locale"},{"required":"no","param":"string $in_locale = &#039;&#039;"}],"returns":"string"},"locale_get_primary_language":{"desc":"Gets the primary language for the input locale","params":[{"required":"yes","param":"string $locale"}],"returns":"string"},"locale_get_region":{"desc":"Gets the region for the input locale","params":[{"required":"yes","param":"string $locale"}],"returns":"string"},"locale_get_script":{"desc":"Gets the script for the input locale","params":[{"required":"yes","param":"string $locale"}],"returns":"string"},"locale_lookup":{"desc":"Searches the language tag list for the best match to the language","params":[{"required":"yes","param":"array $langtag"},{"required":"yes","param":"string $locale"},{"required":"no","param":"bool $canonicalize = false"},{"required":"no","param":"string $default = &#039;&#039;"}],"returns":"string"},"long2ip":{"desc":"Converts an (IPv4) Internet network address into a string in Internet standard dotted format","params":[{"required":"yes","param":"string $proper_address"}],"returns":"string"},"ltrim":{"desc":"Strip whitespace (or other characters) from the beginning of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $charlist = &#039;&#039;"}],"returns":"string"},"lzf_compress":{"desc":"LZF compression","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"lzf_decompress":{"desc":"LZF decompression","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"mailparse_determine_best_xfer_encoding":{"desc":"Gets the best way of encoding","params":[{"required":"yes","param":"resource $fp"}],"returns":"string"},"mailparse_msg_extract_part_file":{"desc":"Extracts/decodes a message section","params":[{"required":"yes","param":"resource $mimemail"},{"required":"yes","param":"mixed $filename"},{"required":"no","param":"callback $callbackfunc = &#039;&#039;"}],"returns":"string"},"mailparse_msg_extract_whole_part_file":{"desc":"Extracts a message section including headers without decoding the transfer encoding","params":[{"required":"yes","param":"resource $mimemail"},{"required":"yes","param":"string $filename"},{"required":"no","param":"callback $callbackfunc = &#039;&#039;"}],"returns":"string"},"maxdb_character_set_name":{"desc":"Returns the default character set for the database connection","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_connect_error":{"desc":"Returns a string description of the last connect error","params":[],"returns":"string"},"maxdb_error":{"desc":"Returns a string description of the last error","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_get_client_info":{"desc":"Returns the MaxDB client version as a string","params":[],"returns":"string"},"maxdb_get_host_info":{"desc":"Returns a string representing the type of connection used","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_get_proto_info":{"desc":"Returns the version of the MaxDB protocol used","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_get_server_info":{"desc":"Returns the version of the MaxDB server","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_info":{"desc":"Retrieves information about the most recently executed query","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","params":[{"required":"yes","param":"resource $link"},{"required":"yes","param":"string $escapestr"}],"returns":"string"},"maxdb_sqlstate":{"desc":"Returns the SQLSTATE error from previous MaxDB operation","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_stat":{"desc":"Gets the current system status","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"maxdb_stmt_error":{"desc":"Returns a string description for last statement error","params":[{"required":"yes","param":"resource $stmt"}],"returns":"string"},"maxdb_stmt_sqlstate":{"desc":"Returns SQLSTATE error from previous statement operation","params":[{"required":"yes","param":"resource $stmt"}],"returns":"string"},"mb_convert_case":{"desc":"Perform case folding on a string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"int $mode"},{"required":"no","param":"string $encoding = mb_internal_encoding("}],"returns":"string"},"mb_convert_encoding":{"desc":"Convert character encoding","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $to_encoding"},{"required":"no","param":"mixed $from_encoding = &#039;&#039;"}],"returns":"string"},"mb_convert_kana":{"desc":"Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $option = &quot;KV&quot;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_convert_variables":{"desc":"Convert character code in variable(s)","params":[{"required":"yes","param":"string $to_encoding"},{"required":"yes","param":"mixed $from_encoding"},{"required":"yes","param":"mixed $vars"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"string"},"mb_decode_mimeheader":{"desc":"Decode string in MIME header field","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"mb_decode_numericentity":{"desc":"Decode HTML numeric string reference to character","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"array $convmap"},{"required":"yes","param":"string $encoding"}],"returns":"string"},"mb_detect_encoding":{"desc":"Detect character encoding","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"mixed $encoding_list = mb_detect_order()"},{"required":"no","param":"bool $strict = false"}],"returns":"string"},"mb_encode_mimeheader":{"desc":"Encode string for MIME header","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $charset = &#039;&#039;"},{"required":"no","param":"string $transfer_encoding = &#039;&#039;"},{"required":"no","param":"string $linefeed = &#039;&#039;"},{"required":"no","param":"int $indent = &#039;&#039;"}],"returns":"string"},"mb_encode_numericentity":{"desc":"Encode character to HTML numeric string reference","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"array $convmap"},{"required":"yes","param":"string $encoding"}],"returns":"string"},"mb_eregi_replace":{"desc":"Replace regular expression with multibyte support ignoring case","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $replace"},{"required":"yes","param":"string $string"},{"required":"no","param":"string $option = &quot;msri&quot;"}],"returns":"string"},"mb_ereg_replace":{"desc":"Replace regular expression with multibyte support","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $replacement"},{"required":"yes","param":"string $string"},{"required":"no","param":"string $option = &quot;msr&quot;"}],"returns":"string"},"mb_output_handler":{"desc":"Callback function converts character encoding in output buffer","params":[{"required":"yes","param":"string $contents"},{"required":"yes","param":"int $status"}],"returns":"string"},"mb_preferred_mime_name":{"desc":"Get MIME charset string","params":[{"required":"yes","param":"string $encoding"}],"returns":"string"},"mb_regex_encoding":{"desc":"Returns current encoding for multibyte regex as string","params":[{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_regex_set_options":{"desc":"Set/Get the default options for mbregex functions","params":[{"required":"no","param":"string $options = &quot;msr&quot;"}],"returns":"string"},"mb_strcut":{"desc":"Get part of string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"int $start"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strimwidth":{"desc":"Get truncated string with specified width","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"int $start"},{"required":"yes","param":"int $width"},{"required":"no","param":"string $trimmarker = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_stristr":{"desc":"Finds first occurrence of a string within another, case insensitive","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $part = false"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strlen":{"desc":"Get string length","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strpos":{"desc":"Find position of first occurrence of string in a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strrchr":{"desc":"Finds the last occurrence of a character in a string within another","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $part = false"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strrichr":{"desc":"Finds the last occurrence of a character in a string within another, case insensitive","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $part = false"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strstr":{"desc":"Finds first occurrence of a string within another","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"bool $part = false"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_strtolower":{"desc":"Make a string lowercase","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $encoding = mb_internal_encoding("}],"returns":"string"},"mb_strtoupper":{"desc":"Make a string uppercase","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $encoding = mb_internal_encoding("}],"returns":"string"},"mb_strwidth":{"desc":"Return width of string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_substr":{"desc":"Get part of string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"int $start"},{"required":"no","param":"int $length = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mb_substr_count":{"desc":"Count the number of substring occurrences","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"mcrypt_cbc":{"desc":"Encrypts/decrypts data in CBC mode","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"mcrypt_cfb":{"desc":"Encrypts/decrypts data in CFB mode","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"mcrypt_create_iv":{"desc":"Creates an initialization vector (IV) from a random source","params":[{"required":"yes","param":"int $size"},{"required":"no","param":"int $source = MCRYPT_DEV_RANDOM"}],"returns":"string"},"mcrypt_decrypt":{"desc":"Decrypts crypttext with given parameters","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"string $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"mcrypt_ecb":{"desc":"Deprecated: Encrypts/decrypts data in ECB mode","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"mcrypt_encrypt":{"desc":"Encrypts plaintext with given parameters","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"string $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"mcrypt_enc_get_algorithms_name":{"desc":"Returns the name of the opened algorithm","params":[{"required":"yes","param":"resource $td"}],"returns":"string"},"mcrypt_enc_get_modes_name":{"desc":"Returns the name of the opened mode","params":[{"required":"yes","param":"resource $td"}],"returns":"string"},"mcrypt_generic":{"desc":"This function encrypts data","params":[{"required":"yes","param":"resource $td"},{"required":"yes","param":"string $data"}],"returns":"string"},"mcrypt_get_cipher_name":{"desc":"Gets the name of the specified cipher","params":[{"required":"yes","param":"string $cipher"}],"returns":"string"},"mcrypt_ofb":{"desc":"Encrypts/decrypts data in OFB mode","params":[{"required":"yes","param":"string $cipher"},{"required":"yes","param":"string $key"},{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"},{"required":"no","param":"string $iv = &#039;&#039;"}],"returns":"string"},"md5":{"desc":"Calculate the md5 hash of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"md5_file":{"desc":"Calculates the md5 hash of a given file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"mdecrypt_generic":{"desc":"Decrypts data","params":[{"required":"yes","param":"resource $td"},{"required":"yes","param":"string $data"}],"returns":"string"},"metaphone":{"desc":"Calculate the metaphone key of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"int $phonemes = &#039;&#039;"}],"returns":"string"},"mhash":{"desc":"Computes hash","params":[{"required":"yes","param":"int $hash"},{"required":"yes","param":"string $data"},{"required":"no","param":"string $key = &#039;&#039;"}],"returns":"string"},"mhash_get_hash_name":{"desc":"Gets the name of the specified hash","params":[{"required":"yes","param":"int $hash"}],"returns":"string"},"mhash_keygen_s2k":{"desc":"Generates a key","params":[{"required":"yes","param":"int $hash"},{"required":"yes","param":"string $password"},{"required":"yes","param":"string $salt"},{"required":"yes","param":"int $bytes"}],"returns":"string"},"mime_content_type":{"desc":"Detect MIME Content-type for a file (deprecated)","params":[{"required":"yes","param":"string $filename"}],"returns":"string"},"money_format":{"desc":"Formats a number as a currency string","params":[{"required":"yes","param":"string $format"},{"required":"yes","param":"float $number"}],"returns":"string"},"mqseries_strerror":{"desc":"Returns the error message corresponding to a result code (MQRC).","params":[{"required":"yes","param":"int $reason"}],"returns":"string"},"msession_get":{"desc":"Get value from session","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"}],"returns":"string"},"msession_get_data":{"desc":"Get data session unstructured data","params":[{"required":"yes","param":"string $session"}],"returns":"string"},"msession_inc":{"desc":"Increment value in session","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"string $name"}],"returns":"string"},"msession_plugin":{"desc":"Call an escape function within the msession personality plugin","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"string $val"},{"required":"no","param":"string $param = &#039;&#039;"}],"returns":"string"},"msession_randstr":{"desc":"Get random string","params":[{"required":"yes","param":"int $param"}],"returns":"string"},"msession_uniq":{"desc":"Get unique id","params":[{"required":"yes","param":"int $param"},{"required":"no","param":"string $classname = &#039;&#039;"},{"required":"no","param":"string $data = &#039;&#039;"}],"returns":"string"},"msgfmt_format":{"desc":"Format the message","params":[{"required":"yes","param":"array $args"},{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"string"},"msgfmt_format_message":{"desc":"Quick format message","params":[{"required":"yes","param":"string $locale"},{"required":"yes","param":"string $pattern"},{"required":"yes","param":"array $args"}],"returns":"string"},"msgfmt_get_error_message":{"desc":"Get the error text from the last operation","params":[{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"string"},"msgfmt_get_locale":{"desc":"Get the locale for which the formatter was created.","params":[{"required":"yes","param":"NumberFormatter $formatter"}],"returns":"string"},"msgfmt_get_pattern":{"desc":"Get the pattern used by the formatter","params":[{"required":"yes","param":"MessageFormatter $fmt"}],"returns":"string"},"msql_error":{"desc":"Returns error message of last msql call","params":[],"returns":"string"},"msql_field_flags":{"desc":"Get field flags","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"msql_field_name":{"desc":"Get the name of the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"msql_field_type":{"desc":"Get field type","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"msql_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"no","param":"mixed $field = &#039;&#039;"}],"returns":"string"},"mssql_field_name":{"desc":"Get the name of a field","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $offset = -1"}],"returns":"string"},"mssql_field_type":{"desc":"Gets the type of a field","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"int $offset = -1"}],"returns":"string"},"mssql_get_last_message":{"desc":"Returns the last message from the server","params":[],"returns":"string"},"mssql_guid_string":{"desc":"Converts a 16 byte binary GUID to a string","params":[{"required":"yes","param":"string $binary"},{"required":"no","param":"bool $short_format = false"}],"returns":"string"},"mssql_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"yes","param":"mixed $field"}],"returns":"string"},"mysqli_character_set_name":{"desc":"Returns the default character set for the database connection","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_connect_error":{"desc":"Returns a string description of the last connect error","params":[],"returns":"string"},"mysqli_error":{"desc":"Returns a string description of the last error","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_get_client_info":{"desc":"Returns the MySQL client version as a string","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_get_host_info":{"desc":"Returns a string representing the type of connection used","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_get_server_info":{"desc":"Returns the version of the MySQL server","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_info":{"desc":"Retrieves information about the most recently executed query","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection","params":[{"required":"yes","param":"string $escapestr"},{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_sqlstate":{"desc":"Returns the SQLSTATE error from previous MySQL operation","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_stat":{"desc":"Gets the current system status","params":[{"required":"yes","param":"mysqli $link"}],"returns":"string"},"mysqli_stmt_error":{"desc":"Returns a string description for last statement error","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"string"},"mysqli_stmt_sqlstate":{"desc":"Returns SQLSTATE error from previous statement operation","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"string"},"mysql_client_encoding":{"desc":"Returns the name of the character set","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_db_name":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"no","param":"mixed $field = &#039;&#039;"}],"returns":"string"},"mysql_error":{"desc":"Returns the text of the error message from previous MySQL operation","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_escape_string":{"desc":"Escapes a string for use in a mysql_query","params":[{"required":"yes","param":"string $unescaped_string"}],"returns":"string"},"mysql_field_flags":{"desc":"Get the flags associated with the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"mysql_field_name":{"desc":"Get the name of the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"mysql_field_table":{"desc":"Get name of the table the specified field is in","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"mysql_field_type":{"desc":"Get the type of the specified field in a result","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_offset"}],"returns":"string"},"mysql_get_client_info":{"desc":"Get MySQL client info","params":[],"returns":"string"},"mysql_get_host_info":{"desc":"Get MySQL host info","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_get_server_info":{"desc":"Get MySQL server info","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_info":{"desc":"Get information about the most recent query","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_real_escape_string":{"desc":"Escapes special characters in a string for use in an SQL statement","params":[{"required":"yes","param":"string $unescaped_string"},{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"no","param":"mixed $field = &#039;&#039;"}],"returns":"string"},"mysql_stat":{"desc":"Get current system status","params":[{"required":"no","param":"resource $link_identifier = &#039;&#039;"}],"returns":"string"},"mysql_tablename":{"desc":"Get table name of field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $i"}],"returns":"string"},"m_connectionerror":{"desc":"Get a textual representation of why a connection failed","params":[{"required":"yes","param":"resource $conn"}],"returns":"string"},"m_getcell":{"desc":"Get a specific cell from a comma delimited response by column name","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"},{"required":"yes","param":"string $column"},{"required":"yes","param":"int $row"}],"returns":"string"},"m_getcellbynum":{"desc":"Get a specific cell from a comma delimited response by column number","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"},{"required":"yes","param":"int $column"},{"required":"yes","param":"int $row"}],"returns":"string"},"m_getcommadelimited":{"desc":"Get the RAW comma delimited data returned from MCVE","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"}],"returns":"string"},"m_getheader":{"desc":"Get the name of the column in a comma-delimited response","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"},{"required":"yes","param":"int $column_num"}],"returns":"string"},"m_responseparam":{"desc":"Get a custom response parameter","params":[{"required":"yes","param":"resource $conn"},{"required":"yes","param":"int $identifier"},{"required":"yes","param":"string $key"}],"returns":"string"},"m_sslcert_gen_hash":{"desc":"Generate hash for SSL client certificate verification","params":[{"required":"yes","param":"string $filename"}],"returns":"string"},"ncurses_erasechar":{"desc":"Returns current erase character","params":[],"returns":"string"},"ncurses_inch":{"desc":"Get character and attribute at current position","params":[],"returns":"string"},"ncurses_killchar":{"desc":"Returns current line kill character","params":[],"returns":"string"},"ncurses_longname":{"desc":"Returns terminals description","params":[],"returns":"string"},"ncurses_termname":{"desc":"Returns terminals (short)-name","params":[],"returns":"string"},"newt_checkbox_get_value":{"desc":"Retreives value of checkox resource","params":[{"required":"yes","param":"resource $checkbox"}],"returns":"string"},"newt_checkbox_tree_get_entry_value":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"mixed $data"}],"returns":"string"},"newt_entry_get_value":{"desc":"","params":[{"required":"yes","param":"resource $entry"}],"returns":"string"},"newt_listbox_get_current":{"desc":"","params":[{"required":"yes","param":"resource $listbox"}],"returns":"string"},"newt_reflow_text":{"desc":"","params":[{"required":"yes","param":"string $text"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $flex_down"},{"required":"yes","param":"int $flex_up"},{"required":"yes","param":"int $actual_width"},{"required":"yes","param":"int $actual_height"}],"returns":"string"},"ngettext":{"desc":"Plural version of gettext","params":[{"required":"yes","param":"string $msgid1"},{"required":"yes","param":"string $msgid2"},{"required":"yes","param":"int $n"}],"returns":"string"},"nl2br":{"desc":"Inserts HTML line breaks before all newlines in a string","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"bool $is_xhtml = true"}],"returns":"string"},"nl_langinfo":{"desc":"Query language and locale information","params":[{"required":"yes","param":"int $item"}],"returns":"string"},"normalizer_normalize":{"desc":"Normalizes the input provided and returns the normalized string","params":[{"required":"yes","param":"string $input"},{"required":"no","param":"string $form = Normalizer::FORM_C"}],"returns":"string"},"nthmac":{"desc":"Obtain a nthmac key (needs 2 arguments)","params":[{"required":"yes","param":"string $clent"},{"required":"yes","param":"string $data"}],"returns":"string"},"number_format":{"desc":"Format a number with grouped thousands","params":[{"required":"yes","param":"float $number"},{"required":"yes","param":"int $decimals"},{"required":"yes","param":"string $dec_point"},{"required":"yes","param":"string $thousands_sep"}],"returns":"string"},"numfmt_format":{"desc":"Format a number","params":[{"required":"yes","param":"number $value"},{"required":"no","param":"int $type = &#039;&#039;"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_format_currency":{"desc":"Format a currency value","params":[{"required":"yes","param":"float $value"},{"required":"yes","param":"string $currency"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_get_error_message":{"desc":"Get formatter&#039;s last error message.","params":[{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_get_locale":{"desc":"Get formatter locale","params":[{"required":"no","param":"int $type = &#039;&#039;"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_get_pattern":{"desc":"Get formatter pattern","params":[{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_get_symbol":{"desc":"Get a symbol value","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"numfmt_get_text_attribute":{"desc":"Get a text attribute","params":[{"required":"yes","param":"int $attr"},{"required":"yes","param":"NumberFormatter $fmt"}],"returns":"string"},"oauth_get_sbs":{"desc":"Generate a Signature Base String","params":[{"required":"yes","param":"string $http_method"},{"required":"yes","param":"string $uri"},{"required":"no","param":"array $request_parameters = &#039;&#039;"}],"returns":"string"},"oauth_urlencode":{"desc":"Encode a URI to RFC 3986","params":[{"required":"yes","param":"string $uri"}],"returns":"string"},"ob_deflatehandler":{"desc":"Deflate output handler","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"}],"returns":"string"},"ob_etaghandler":{"desc":"ETag output handler","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"}],"returns":"string"},"ob_get_clean":{"desc":"Get current buffer contents and delete current output buffer","params":[],"returns":"string"},"ob_get_contents":{"desc":"Return the contents of the output buffer","params":[],"returns":"string"},"ob_get_flush":{"desc":"Flush the output buffer, return it as a string and turn off output buffering","params":[],"returns":"string"},"ob_gzhandler":{"desc":"ob_start callback function to gzip output buffer","params":[{"required":"yes","param":"string $buffer"},{"required":"yes","param":"int $mode"}],"returns":"string"},"ob_iconv_handler":{"desc":"Convert character encoding as output buffer handler","params":[{"required":"yes","param":"string $contents"},{"required":"yes","param":"int $status"}],"returns":"string"},"ob_inflatehandler":{"desc":"Inflate output handler","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"int $mode"}],"returns":"string"},"ob_tidyhandler":{"desc":"ob_start callback function to repair the buffer","params":[{"required":"yes","param":"string $input"},{"required":"no","param":"int $mode = &#039;&#039;"}],"returns":"string"},"oci_field_name":{"desc":"Returns the name of a field from the statement","params":[{"required":"yes","param":"resource $statement"},{"required":"yes","param":"int $field"}],"returns":"string"},"oci_server_version":{"desc":"Returns server version","params":[{"required":"yes","param":"resource $connection"}],"returns":"string"},"oci_statement_type":{"desc":"Returns the type of a statement","params":[{"required":"yes","param":"resource $statement"}],"returns":"string"},"odbc_cursor":{"desc":"Get cursorname","params":[{"required":"yes","param":"resource $result_id"}],"returns":"string"},"odbc_error":{"desc":"Get the last error code","params":[{"required":"no","param":"resource $connection_id = &#039;&#039;"}],"returns":"string"},"odbc_errormsg":{"desc":"Get the last error message","params":[{"required":"no","param":"resource $connection_id = &#039;&#039;"}],"returns":"string"},"odbc_field_name":{"desc":"Get the columnname","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"odbc_field_type":{"desc":"Datatype of a field","params":[{"required":"yes","param":"resource $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"openssl_decrypt":{"desc":"Decrypts data","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $method"},{"required":"yes","param":"string $password"},{"required":"no","param":"bool $raw_input = false"},{"required":"no","param":"string $iv = &quot;&quot;"}],"returns":"string"},"openssl_dh_compute_key":{"desc":"Computes shared secret for public value of remote DH key and local DH key","params":[{"required":"yes","param":"string $pub_key"},{"required":"yes","param":"resource $dh_key"}],"returns":"string"},"openssl_digest":{"desc":"Computes a digest","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $method"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"openssl_encrypt":{"desc":"Encrypts data","params":[{"required":"yes","param":"string $data"},{"required":"yes","param":"string $method"},{"required":"yes","param":"string $password"},{"required":"no","param":"bool $raw_output = false"},{"required":"no","param":"string $iv = &quot;&quot;"}],"returns":"string"},"openssl_error_string":{"desc":"Return openSSL error message","params":[],"returns":"string"},"openssl_random_pseudo_bytes":{"desc":"Generate a pseudo-random string of bytes","params":[{"required":"yes","param":"int $length"},{"required":"no","param":"bool $crypto_strong = &#039;&#039;"}],"returns":"string"},"ovrimos_cursor":{"desc":"Returns the name of the cursor","params":[{"required":"yes","param":"int $result_id"}],"returns":"string"},"ovrimos_field_name":{"desc":"Returns the output column name","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"ovrimos_result":{"desc":"Retrieves the output column","params":[{"required":"yes","param":"int $result_id"},{"required":"yes","param":"mixed $field"}],"returns":"string"},"pack":{"desc":"Pack data into binary string","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"string"},"PDF_fit_table":{"desc":"Place table on page","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $table"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $optlist"}],"returns":"string"},"PDF_fit_textflow":{"desc":"Format textflow in rectangular area","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"int $textflow"},{"required":"yes","param":"float $llx"},{"required":"yes","param":"float $lly"},{"required":"yes","param":"float $urx"},{"required":"yes","param":"float $ury"},{"required":"yes","param":"string $optlist"}],"returns":"string"},"PDF_get_apiname":{"desc":"Get name of unsuccessfull API function","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"string"},"PDF_get_buffer":{"desc":"Get PDF output buffer","params":[{"required":"yes","param":"resource $p"}],"returns":"string"},"PDF_get_errmsg":{"desc":"Get error text","params":[{"required":"yes","param":"resource $pdfdoc"}],"returns":"string"},"PDF_get_parameter":{"desc":"Get string parameter","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"float $modifier"}],"returns":"string"},"PDF_get_pdi_parameter":{"desc":"Get PDI string parameter [deprecated]","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"string $key"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"int $page"},{"required":"yes","param":"int $reserved"}],"returns":"string"},"PDF_pcos_get_stream":{"desc":"Get contents of pCOS path with type stream, fstream, or string","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"string $optlist"},{"required":"yes","param":"string $path"}],"returns":"string"},"PDF_pcos_get_string":{"desc":"Get value of pCOS path with type name, string, or boolean","params":[{"required":"yes","param":"resource $p"},{"required":"yes","param":"int $doc"},{"required":"yes","param":"string $path"}],"returns":"string"},"PDF_utf8_to_utf16":{"desc":"Convert string from UTF-8 to UTF-16","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $utf8string"},{"required":"yes","param":"string $ordering"}],"returns":"string"},"PDF_utf16_to_utf8":{"desc":"Convert string from UTF-16 to UTF-8","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $utf16string"}],"returns":"string"},"PDF_utf32_to_utf16":{"desc":"Convert string from UTF-32 to UTF-16","params":[{"required":"yes","param":"resource $pdfdoc"},{"required":"yes","param":"string $utf32string"},{"required":"yes","param":"string $ordering"}],"returns":"string"},"pg_client_encoding":{"desc":"Gets the client encoding","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_dbname":{"desc":"Get the database name","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_escape_bytea":{"desc":"Escape a string for insertion into a bytea field","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $data"}],"returns":"string"},"pg_escape_string":{"desc":"Escape a string for insertion into a text field","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $data"}],"returns":"string"},"pg_fetch_result":{"desc":"Returns values from a result resource","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"yes","param":"mixed $field"}],"returns":"string"},"pg_field_name":{"desc":"Returns the name of a field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"pg_field_type":{"desc":"Returns the type name for the corresponding field number","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_number"}],"returns":"string"},"pg_host":{"desc":"Returns the host name associated with the connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_last_error":{"desc":"Get the last error message string of a connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_last_notice":{"desc":"Returns the last notice message from PostgreSQL server","params":[{"required":"yes","param":"resource $connection"}],"returns":"string"},"pg_last_oid":{"desc":"Returns the last row&#039;s OID","params":[{"required":"yes","param":"resource $result"}],"returns":"string"},"pg_lo_read":{"desc":"Read a large object","params":[{"required":"yes","param":"resource $large_object"},{"required":"no","param":"int $len = 8192"}],"returns":"string"},"pg_options":{"desc":"Get the options associated with the connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_parameter_status":{"desc":"Looks up a current parameter setting of the server.","params":[{"required":"no","param":"resource $connection = &#039;&#039;"},{"required":"yes","param":"string $param_name"}],"returns":"string"},"pg_result_error":{"desc":"Get error message associated with result","params":[{"required":"yes","param":"resource $result"}],"returns":"string"},"pg_result_error_field":{"desc":"Returns an individual field of an error report.","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $fieldcode"}],"returns":"string"},"pg_tty":{"desc":"Return the TTY name associated with the connection","params":[{"required":"no","param":"resource $connection = &#039;&#039;"}],"returns":"string"},"pg_unescape_bytea":{"desc":"Unescape binary for bytea type","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"phpversion":{"desc":"Gets the current PHP version","params":[{"required":"no","param":"string $extension = &#039;&#039;"}],"returns":"string"},"php_ini_loaded_file":{"desc":"Retrieve a path to the loaded php.ini file","params":[],"returns":"string"},"php_ini_scanned_files":{"desc":"Return a list of .ini files parsed from the additional ini dir","params":[],"returns":"string"},"php_logo_guid":{"desc":"Gets the logo guid","params":[],"returns":"string"},"php_sapi_name":{"desc":"Returns the type of interface between web server and PHP","params":[],"returns":"string"},"php_strip_whitespace":{"desc":"Return source with stripped comments and whitespace","params":[{"required":"yes","param":"string $filename"}],"returns":"string"},"php_uname":{"desc":"Returns information about the operating system PHP is running on","params":[{"required":"no","param":"string $mode = &quot;a&quot;"}],"returns":"string"},"posix_ctermid":{"desc":"Get path name of controlling terminal","params":[],"returns":"string"},"posix_getcwd":{"desc":"Pathname of current directory","params":[],"returns":"string"},"posix_getlogin":{"desc":"Return login name","params":[],"returns":"string"},"posix_strerror":{"desc":"Retrieve the system error message associated with the given errno","params":[{"required":"yes","param":"int $errno"}],"returns":"string"},"posix_ttyname":{"desc":"Determine terminal device name","params":[{"required":"yes","param":"int $fd"}],"returns":"string"},"preg_quote":{"desc":"Quote regular expression characters","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $delimiter = &#039;&#039;"}],"returns":"string"},"ps_get_buffer":{"desc":"Fetches the full buffer containig the generated PS data","params":[{"required":"yes","param":"resource $psdoc"}],"returns":"string"},"ps_get_parameter":{"desc":"Gets certain parameters","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"string $name"},{"required":"no","param":"float $modifier = &#039;&#039;"}],"returns":"string"},"ps_symbol_name":{"desc":"Gets name of a glyph","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $ord"},{"required":"no","param":"int $fontid = &#039;&#039;"}],"returns":"string"},"px_date2string":{"desc":"Converts a date into a string.","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"int $value"},{"required":"yes","param":"string $format"}],"returns":"string"},"px_get_parameter":{"desc":"Gets a parameter","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $name"}],"returns":"string"},"px_timestamp2string":{"desc":"Converts the timestamp into a string.","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"float $value"},{"required":"yes","param":"string $format"}],"returns":"string"},"qdom_error":{"desc":"Returns the error string from the last QDOM operation or FALSE if no errors occurred","params":[],"returns":"string"},"quoted_printable_decode":{"desc":"Convert a quoted-printable string to an 8 bit string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"quoted_printable_encode":{"desc":"Convert a 8 bit string to a quoted-printable string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"quotemeta":{"desc":"Quote meta characters","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"radius_cvt_addr":{"desc":"Converts raw data to IP-Address","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"radius_cvt_string":{"desc":"Converts raw data to string","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"radius_demangle":{"desc":"Demangles data","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"string $mangled"}],"returns":"string"},"radius_demangle_mppe_key":{"desc":"Derives mppe-keys from mangled data","params":[{"required":"yes","param":"resource $radius_handle"},{"required":"yes","param":"string $mangled"}],"returns":"string"},"radius_request_authenticator":{"desc":"Returns the request authenticator","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"string"},"radius_server_secret":{"desc":"Returns the shared secret","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"string"},"radius_strerror":{"desc":"Returns an error message","params":[{"required":"yes","param":"resource $radius_handle"}],"returns":"string"},"rar_comment_get":{"desc":"Get comment text from the RAR archive","params":[{"required":"yes","param":"RarArchive $rarfile"}],"returns":"string"},"rar_wrapper_cache_stats":{"desc":"Cache hits and misses for the URL wrapper","params":[],"returns":"string"},"rawurldecode":{"desc":"Decode URL-encoded strings","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"rawurlencode":{"desc":"URL-encode according to RFC 3986","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"readdir":{"desc":"Read entry from directory handle","params":[{"required":"no","param":"resource $dir_handle = &#039;&#039;"}],"returns":"string"},"readline":{"desc":"Reads a line","params":[{"required":"no","param":"string $prompt = &#039;&#039;"}],"returns":"string"},"readlink":{"desc":"Returns the target of a symbolic link","params":[{"required":"yes","param":"string $path"}],"returns":"string"},"realpath":{"desc":"Returns canonicalized absolute pathname","params":[{"required":"yes","param":"string $path"}],"returns":"string"},"recode_string":{"desc":"Recode a string according to a recode request","params":[{"required":"yes","param":"string $request"},{"required":"yes","param":"string $string"}],"returns":"string"},"resourcebundle_get_error_message":{"desc":"Get bundle&#039;s last error message.","params":[{"required":"yes","param":"ResourceBundle $r"}],"returns":"string"},"rpm_version":{"desc":"Returns a string representing the current version of the   rpmreader extension","params":[],"returns":"string"},"rrd_error":{"desc":"Gets latest error message.","params":[],"returns":"string"},"rtrim":{"desc":"Strip whitespace (or other characters) from the end of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $charlist = &#039;&#039;"}],"returns":"string"},"serialize":{"desc":"Generates a storable representation of a value","params":[{"required":"yes","param":"mixed $value"}],"returns":"string"},"session_cache_limiter":{"desc":"Get and/or set the current cache limiter","params":[{"required":"no","param":"string $cache_limiter = &#039;&#039;"}],"returns":"string"},"session_encode":{"desc":"Encodes the current session data as a string","params":[],"returns":"string"},"session_id":{"desc":"Get and/or set the current session id","params":[{"required":"no","param":"string $id = &#039;&#039;"}],"returns":"string"},"session_module_name":{"desc":"Get and/or set the current session module","params":[{"required":"no","param":"string $module = &#039;&#039;"}],"returns":"string"},"session_name":{"desc":"Get and/or set the current session name","params":[{"required":"no","param":"string $name = &#039;&#039;"}],"returns":"string"},"session_pgsql_get_field":{"desc":"Get custom field value","params":[],"returns":"string"},"session_save_path":{"desc":"Get and/or set the current session save path","params":[{"required":"no","param":"string $path = &#039;&#039;"}],"returns":"string"},"setlocale":{"desc":"Set locale information","params":[{"required":"yes","param":"int $category"},{"required":"yes","param":"array $locale"},{"required":"no","param":"string $... = &#039;&#039;"}],"returns":"string"},"set_include_path":{"desc":"Sets the include_path configuration option","params":[{"required":"yes","param":"string $new_include_path"}],"returns":"string"},"sha1":{"desc":"Calculate the sha1 hash of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"sha1_file":{"desc":"Calculate the sha1 hash of a file","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"bool $raw_output = false"}],"returns":"string"},"shell_exec":{"desc":"Execute command via shell and return the complete output as a string","params":[{"required":"yes","param":"string $cmd"}],"returns":"string"},"shmop_read":{"desc":"Read data from shared memory block","params":[{"required":"yes","param":"int $shmid"},{"required":"yes","param":"int $start"},{"required":"yes","param":"int $count"}],"returns":"string"},"signeurlpaiement":{"desc":"Obtain the payment url (needs 2 arguments)","params":[{"required":"yes","param":"string $clent"},{"required":"yes","param":"string $data"}],"returns":"string"},"snmp2_get":{"desc":"Fetch an SNMP object","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"string"},"snmp2_getnext":{"desc":"Fetch the SNMP object which follows the given object id","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"string"},"snmp3_get":{"desc":"Fetch an SNMP object","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $sec_name"},{"required":"yes","param":"string $sec_level"},{"required":"yes","param":"string $auth_protocol"},{"required":"yes","param":"string $auth_passphrase"},{"required":"yes","param":"string $priv_protocol"},{"required":"yes","param":"string $priv_passphrase"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"string"},"snmp3_getnext":{"desc":"Fetch the SNMP object which follows the given object id","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $sec_name"},{"required":"yes","param":"string $sec_level"},{"required":"yes","param":"string $auth_protocol"},{"required":"yes","param":"string $auth_passphrase"},{"required":"yes","param":"string $priv_protocol"},{"required":"yes","param":"string $priv_passphrase"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"string $timeout = 1000000"},{"required":"no","param":"string $retries = 5"}],"returns":"string"},"snmpget":{"desc":"Fetch an SNMP object","params":[{"required":"yes","param":"string $hostname"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"string"},"snmpgetnext":{"desc":"Fetch the SNMP object which follows the given object id","params":[{"required":"yes","param":"string $host"},{"required":"yes","param":"string $community"},{"required":"yes","param":"string $object_id"},{"required":"no","param":"int $timeout = 1000000"},{"required":"no","param":"int $retries = 5"}],"returns":"string"},"socket_read":{"desc":"Reads a maximum of length bytes from a socket","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"int $length"},{"required":"no","param":"int $type = PHP_BINARY_READ"}],"returns":"string"},"socket_strerror":{"desc":"Return a string describing a socket error","params":[{"required":"yes","param":"int $errno"}],"returns":"string"},"solr_get_version":{"desc":"Returns the current version of the Apache Solr extension","params":[],"returns":"string"},"soundex":{"desc":"Calculate the soundex key of a string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"spl_autoload_extensions":{"desc":"Register and return default file extensions for spl_autoload","params":[{"required":"no","param":"string $file_extensions = &#039;&#039;"}],"returns":"string"},"spl_object_hash":{"desc":"Return hash id for given object","params":[{"required":"yes","param":"object $obj"}],"returns":"string"},"sprintf":{"desc":"Return a formatted string","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"string"},"sqlite_error_string":{"desc":"Returns the textual description of an error code","params":[{"required":"yes","param":"int $error_code"}],"returns":"string"},"sqlite_escape_string":{"desc":"Escapes a string for use as a query parameter","params":[{"required":"yes","param":"string $item"}],"returns":"string"},"sqlite_fetch_single":{"desc":"Fetches the first column of a result set as a string","params":[{"required":"yes","param":"resource $result"},{"required":"no","param":"bool $decode_binary = true"}],"returns":"string"},"sqlite_field_name":{"desc":"Returns the name of a particular field","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $field_index"}],"returns":"string"},"sqlite_libencoding":{"desc":"Returns the encoding of the linked SQLite library","params":[],"returns":"string"},"sqlite_libversion":{"desc":"Returns the version of the linked SQLite library","params":[],"returns":"string"},"sqlite_udf_decode_binary":{"desc":"Decode binary data passed as parameters to an UDF","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"sqlite_udf_encode_binary":{"desc":"Encode binary data before returning it from an UDF","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"sql_regcase":{"desc":"Make regular expression for case insensitive match","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"ssdeep_fuzzy_hash":{"desc":"Create a fuzzy hash from a string","params":[{"required":"yes","param":"string $to_hash"}],"returns":"string"},"ssdeep_fuzzy_hash_filename":{"desc":"Create a fuzzy hash from a file","params":[{"required":"yes","param":"string $file_name"}],"returns":"string"},"ssh2_fingerprint":{"desc":"Retrieve fingerprint of remote server","params":[{"required":"yes","param":"resource $session"},{"required":"no","param":"int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX"}],"returns":"string"},"ssh2_sftp_readlink":{"desc":"Return the target of a symbolic link","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $link"}],"returns":"string"},"ssh2_sftp_realpath":{"desc":"Resolve the realpath of a provided path string","params":[{"required":"yes","param":"resource $sftp"},{"required":"yes","param":"string $filename"}],"returns":"string"},"stomp_connect_error":{"desc":"Returns a string description of the last connect error","params":[],"returns":"string"},"stomp_error":{"desc":"Gets the last stomp error","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"stomp_get_session_id":{"desc":"Gets the current stomp session ID","params":[{"required":"yes","param":"resource $link"}],"returns":"string"},"stomp_version":{"desc":"Gets the current stomp extension version","params":[],"returns":"string"},"stream_get_contents":{"desc":"Reads remainder of a stream into a string","params":[{"required":"yes","param":"resource $handle"},{"required":"no","param":"int $maxlength = -1"},{"required":"no","param":"int $offset = -1"}],"returns":"string"},"stream_get_line":{"desc":"Gets line from stream resource up to a given delimiter","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"int $length"},{"required":"no","param":"string $ending = &#039;&#039;"}],"returns":"string"},"stream_resolve_include_path":{"desc":"Resolve filename against the include path","params":[{"required":"yes","param":"string $filename"}],"returns":"string"},"stream_socket_get_name":{"desc":"Retrieve the name of the local or remote sockets","params":[{"required":"yes","param":"resource $handle"},{"required":"yes","param":"bool $want_peer"}],"returns":"string"},"stream_socket_recvfrom":{"desc":"Receives data from a socket, connected or not","params":[{"required":"yes","param":"resource $socket"},{"required":"yes","param":"int $length"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"string $address = &#039;&#039;"}],"returns":"string"},"strftime":{"desc":"Format a local time/date according to locale settings","params":[{"required":"yes","param":"string $format"},{"required":"no","param":"int $timestamp = time("}],"returns":"string"},"stripcslashes":{"desc":"Un-quote string quoted with addcslashes","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"stripos":{"desc":"Find position of first occurrence of a case-insensitive string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $needle"},{"required":"no","param":"int $offset = &#039;&#039;"}],"returns":"string"},"stripslashes":{"desc":"Un-quotes a quoted string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"strip_tags":{"desc":"Strip HTML and PHP tags from a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $allowable_tags = &#039;&#039;"}],"returns":"string"},"stristr":{"desc":"Case-insensitive strstr","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"mixed $needle"},{"required":"no","param":"bool $before_needle = false"}],"returns":"string"},"strpbrk":{"desc":"Search a string for any of a set of characters","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"string $char_list"}],"returns":"string"},"strrchr":{"desc":"Find the last occurrence of a character in a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"mixed $needle"}],"returns":"string"},"strrev":{"desc":"Reverse a string","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"strstr":{"desc":"Find first occurrence of a string","params":[{"required":"yes","param":"string $haystack"},{"required":"yes","param":"mixed $needle"},{"required":"no","param":"bool $before_needle = false"}],"returns":"string"},"strtok":{"desc":"Tokenize string","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $token"}],"returns":"string"},"strtolower":{"desc":"Make a string lowercase","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"strtoupper":{"desc":"Make a string uppercase","params":[{"required":"yes","param":"string $string"}],"returns":"string"},"strtr":{"desc":"Translate characters or replace substrings","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $from"},{"required":"yes","param":"string $to"},{"required":"yes","param":"array $replace_pairs"}],"returns":"string"},"strval":{"desc":"Get string value of a variable","params":[{"required":"yes","param":"mixed $var"}],"returns":"string"},"str_pad":{"desc":"Pad a string to a certain length with another string","params":[{"required":"yes","param":"string $input"},{"required":"yes","param":"int $pad_length"},{"required":"no","param":"string $pad_string = &quot; &quot;"},{"required":"no","param":"int $pad_type = STR_PAD_RIGHT"}],"returns":"string"},"str_repeat":{"desc":"Repeat a string","params":[{"required":"yes","param":"string $input"},{"required":"yes","param":"int $multiplier"}],"returns":"string"},"str_rot13":{"desc":"Perform the rot13 transform on a string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"str_shuffle":{"desc":"Randomly shuffles a string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"substr":{"desc":"Return part of a string","params":[{"required":"yes","param":"string $string"},{"required":"yes","param":"int $start"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"svn_auth_get_parameter":{"desc":"Retrieves authentication parameter","params":[{"required":"yes","param":"string $key"}],"returns":"string"},"svn_cat":{"desc":"Returns the contents of a file in a repository","params":[{"required":"yes","param":"string $repos_url"},{"required":"no","param":"int $revision_no = &#039;&#039;"}],"returns":"string"},"svn_client_version":{"desc":"Returns the version of the SVN client libraries","params":[],"returns":"string"},"svn_fs_node_prop":{"desc":"Returns the value of a property for a node","params":[{"required":"yes","param":"resource $fsroot"},{"required":"yes","param":"string $path"},{"required":"yes","param":"string $propname"}],"returns":"string"},"svn_fs_revision_prop":{"desc":"Fetches the value of a named property","params":[{"required":"yes","param":"resource $fs"},{"required":"yes","param":"int $revnum"},{"required":"yes","param":"string $propname"}],"returns":"string"},"sybase_get_last_message":{"desc":"Returns the last message from the server","params":[],"returns":"string"},"sybase_result":{"desc":"Get result data","params":[{"required":"yes","param":"resource $result"},{"required":"yes","param":"int $row"},{"required":"yes","param":"mixed $field"}],"returns":"string"},"system":{"desc":"Execute an external program and display the output","params":[{"required":"yes","param":"string $command"},{"required":"no","param":"int $return_var = &#039;&#039;"}],"returns":"string"},"sys_get_temp_dir":{"desc":"Returns directory path used for temporary files","params":[],"returns":"string"},"tempnam":{"desc":"Create file with unique file name","params":[{"required":"yes","param":"string $dir"},{"required":"yes","param":"string $prefix"}],"returns":"string"},"textdomain":{"desc":"Sets the default domain","params":[{"required":"yes","param":"string $text_domain"}],"returns":"string"},"tidy_get_error_buffer":{"desc":"Return warnings and errors which occurred parsing the specified document","params":[{"required":"yes","param":"tidy $object"}],"returns":"string"},"tidy_get_opt_doc":{"desc":"Returns the documentation for the given option name","params":[{"required":"yes","param":"string $optname"},{"required":"yes","param":"tidy $object"}],"returns":"string"},"tidy_get_output":{"desc":"Return a string representing the parsed tidy markup","params":[{"required":"yes","param":"tidy $object"}],"returns":"string"},"tidy_get_release":{"desc":"Get release date (version) for Tidy library","params":[],"returns":"string"},"tidy_repair_file":{"desc":"Repair a file and return it as a string","params":[{"required":"yes","param":"string $filename"},{"required":"no","param":"mixed $config = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"},{"required":"no","param":"bool $use_include_path = false"}],"returns":"string"},"tidy_repair_string":{"desc":"Repair a string using an optionally provided configuration file","params":[{"required":"yes","param":"string $data"},{"required":"no","param":"mixed $config = &#039;&#039;"},{"required":"no","param":"string $encoding = &#039;&#039;"}],"returns":"string"},"timezone_name_from_abbr":{"desc":"Returns the timezone name from abbreviation","params":[{"required":"yes","param":"string $abbr"},{"required":"no","param":"int $gmtOffset = -1"},{"required":"no","param":"int $isdst = -1"}],"returns":"string"},"timezone_version_get":{"desc":"Gets the version of the timezonedb","params":[],"returns":"string"},"token_name":{"desc":"Get the symbolic name of a given PHP token","params":[{"required":"yes","param":"int $token"}],"returns":"string"},"transliterator_get_error_message":{"desc":"Get last error message","params":[],"returns":"string"},"trim":{"desc":"Strip whitespace (or other characters) from the beginning and end of a string","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"string $charlist = &#039;&#039;"}],"returns":"string"},"ucfirst":{"desc":"Make a string&#039;s first character uppercase","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"ucwords":{"desc":"Uppercase the first character of each word in a string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"udm_error":{"desc":"Get mnoGoSearch error message","params":[{"required":"yes","param":"resource $agent"}],"returns":"string"},"udm_get_res_field":{"desc":"Fetch a result field","params":[{"required":"yes","param":"resource $res"},{"required":"yes","param":"int $row"},{"required":"yes","param":"int $field"}],"returns":"string"},"udm_get_res_param":{"desc":"Get mnoGoSearch result parameters","params":[{"required":"yes","param":"resource $res"},{"required":"yes","param":"int $param"}],"returns":"string"},"uniqid":{"desc":"Generate a unique ID","params":[{"required":"no","param":"string $prefix = &quot;&quot;"},{"required":"no","param":"bool $more_entropy = false"}],"returns":"string"},"urldecode":{"desc":"Decodes URL-encoded string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"urlencode":{"desc":"URL-encodes string","params":[{"required":"yes","param":"string $str"}],"returns":"string"},"utf8_decode":{"desc":"Converts a string with ISO-8859-1 characters encoded with UTF-8   to single-byte ISO-8859-1","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"utf8_encode":{"desc":"Encodes an ISO-8859-1 string to UTF-8","params":[{"required":"yes","param":"string $data"}],"returns":"string"},"var_dump":{"desc":"Dumps information about a variable","params":[{"required":"no","param":"mixed $expression = &#039;&#039;"},{"required":"no","param":"$... = &#039;&#039;"}],"returns":"string"},"vpopmail_error":{"desc":"Get text message for last vpopmail error","params":[],"returns":"string"},"vsprintf":{"desc":"Return a formatted string","params":[{"required":"yes","param":"string $format"},{"required":"yes","param":"array $args"}],"returns":"string"},"wddx_packet_end":{"desc":"Ends a WDDX packet with the specified ID","params":[{"required":"yes","param":"resource $packet_id"}],"returns":"string"},"wddx_serialize_value":{"desc":"Serialize a single value into a WDDX packet","params":[{"required":"yes","param":"mixed $var"},{"required":"no","param":"string $comment = &#039;&#039;"}],"returns":"string"},"wddx_serialize_vars":{"desc":"Serialize variables into a WDDX packet","params":[{"required":"yes","param":"mixed $var_name"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"string"},"wordwrap":{"desc":"Wraps a string to a given number of characters","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"int $width = 75"},{"required":"no","param":"string $break = &quot;n&quot;"},{"required":"no","param":"bool $cut = false"}],"returns":"string"},"xattr_get":{"desc":"Get an extended attribute","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $name"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"string"},"xdiff_string_bdiff":{"desc":"Make binary diff of two strings","params":[{"required":"yes","param":"string $old_data"},{"required":"yes","param":"string $new_data"}],"returns":"string"},"xdiff_string_bpatch":{"desc":"Patch a string with a binary diff","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $patch"}],"returns":"string"},"xdiff_string_diff":{"desc":"Make unified diff of two strings","params":[{"required":"yes","param":"string $old_data"},{"required":"yes","param":"string $new_data"},{"required":"no","param":"int $context = 3"},{"required":"no","param":"bool $minimal = false"}],"returns":"string"},"xdiff_string_diff_binary":{"desc":"Alias of xdiff_string_bdiff","params":[{"required":"yes","param":"string $old_data"},{"required":"yes","param":"string $new_data"}],"returns":"string"},"xdiff_string_patch":{"desc":"Patch a string with an unified diff","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $patch"},{"required":"no","param":"int $flags = &#039;&#039;"},{"required":"no","param":"string $error = &#039;&#039;"}],"returns":"string"},"xdiff_string_patch_binary":{"desc":"Alias of xdiff_string_bpatch","params":[{"required":"yes","param":"string $str"},{"required":"yes","param":"string $patch"}],"returns":"string"},"xdiff_string_rabdiff":{"desc":"Make binary diff of two strings using the Rabin&#039;s polynomial fingerprinting algorithm","params":[{"required":"yes","param":"string $old_data"},{"required":"yes","param":"string $new_data"}],"returns":"string"},"xmlrpc_encode":{"desc":"Generates XML for a PHP value","params":[{"required":"yes","param":"mixed $value"}],"returns":"string"},"xmlrpc_encode_request":{"desc":"Generates XML for a method request","params":[{"required":"yes","param":"string $method"},{"required":"yes","param":"mixed $params"},{"required":"no","param":"array $output_options = &#039;&#039;"}],"returns":"string"},"xmlrpc_get_type":{"desc":"Gets xmlrpc type for a PHP value","params":[{"required":"yes","param":"mixed $value"}],"returns":"string"},"xmlrpc_server_call_method":{"desc":"Parses XML requests and call methods","params":[{"required":"yes","param":"resource $server"},{"required":"yes","param":"string $xml"},{"required":"yes","param":"mixed $user_data"},{"required":"no","param":"array $output_options = &#039;&#039;"}],"returns":"string"},"xml_error_string":{"desc":"Get XML parser error string","params":[{"required":"yes","param":"int $code"}],"returns":"string"},"xslt_backend_info":{"desc":"Returns the information on the compilation settings of the backend","params":[],"returns":"string"},"xslt_backend_name":{"desc":"Returns the name of the backend","params":[],"returns":"string"},"xslt_backend_version":{"desc":"Returns the version number of Sablotron","params":[],"returns":"string"},"xslt_error":{"desc":"Returns an error string","params":[{"required":"yes","param":"resource $xh"}],"returns":"string"},"yaml_emit":{"desc":"Returns the YAML representation of a value","params":[{"required":"yes","param":"mixed $data"},{"required":"no","param":"int $encoding = YAML_ANY_ENCODING"},{"required":"no","param":"int $linebreak = YAML_ANY_BREAK"}],"returns":"string"},"yaz_addinfo":{"desc":"Returns additional error information","params":[{"required":"yes","param":"resource $id"}],"returns":"string"},"yaz_error":{"desc":"Returns error description","params":[{"required":"yes","param":"resource $id"}],"returns":"string"},"yaz_get_option":{"desc":"Returns value of option for connection","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $name"}],"returns":"string"},"yaz_record":{"desc":"Returns a record","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"int $pos"},{"required":"yes","param":"string $type"}],"returns":"string"},"yp_err_string":{"desc":"Returns the error string associated with the given error code","params":[{"required":"yes","param":"int $errorcode"}],"returns":"string"},"yp_get_default_domain":{"desc":"Fetches the machine&#039;s default NIS domain","params":[],"returns":"string"},"yp_master":{"desc":"Returns the machine name of the master NIS server for a map","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"}],"returns":"string"},"yp_match":{"desc":"Returns the matched line","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"},{"required":"yes","param":"string $key"}],"returns":"string"},"zend_logo_guid":{"desc":"Gets the Zend guid","params":[],"returns":"string"},"zend_version":{"desc":"Gets the version of the current Zend engine","params":[],"returns":"string"},"zip_entry_compressionmethod":{"desc":"Retrieve the compression method of a directory entry","params":[{"required":"yes","param":"resource $zip_entry"}],"returns":"string"},"zip_entry_name":{"desc":"Retrieve the name of a directory entry","params":[{"required":"yes","param":"resource $zip_entry"}],"returns":"string"},"zip_entry_read":{"desc":"Read from an open directory entry","params":[{"required":"yes","param":"resource $zip_entry"},{"required":"no","param":"int $length = &#039;&#039;"}],"returns":"string"},"zlib_get_coding_type":{"desc":"Returns the coding type used for output compression","params":[],"returns":"string"},"aggregate":{"desc":"Dynamic class and object aggregation of methods and properties","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"}],"returns":"void"},"aggregate_methods":{"desc":"Dynamic class and object aggregation of methods","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"}],"returns":"void"},"aggregate_methods_by_list":{"desc":"Selective dynamic class methods aggregation to an object","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"},{"required":"yes","param":"array $methods_list"},{"required":"no","param":"bool $exclude = false"}],"returns":"void"},"aggregate_methods_by_regexp":{"desc":"Selective class methods aggregation to an object using a regular   expression","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"},{"required":"yes","param":"string $regexp"},{"required":"no","param":"bool $exclude = false"}],"returns":"void"},"aggregate_properties":{"desc":"Dynamic aggregation of  class properties to an object","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"}],"returns":"void"},"aggregate_properties_by_list":{"desc":"Selective dynamic class properties aggregation to an object","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"},{"required":"yes","param":"array $properties_list"},{"required":"no","param":"bool $exclude = false"}],"returns":"void"},"aggregate_properties_by_regexp":{"desc":"Selective class properties aggregation to an object using a regular   expression","params":[{"required":"yes","param":"object $object"},{"required":"yes","param":"string $class_name"},{"required":"yes","param":"string $regexp"},{"required":"no","param":"bool $exclude = false"}],"returns":"void"},"apd_clunk":{"desc":"Throw a warning and a callstack","params":[{"required":"yes","param":"string $warning"},{"required":"no","param":"string $delimiter = &#039;&#039;"}],"returns":"void"},"apd_croak":{"desc":"Throw an error, a callstack and then exit","params":[{"required":"yes","param":"string $warning"},{"required":"no","param":"string $delimiter = &#039;&#039;"}],"returns":"void"},"apd_dump_function_table":{"desc":"Outputs the current function table","params":[],"returns":"void"},"apd_set_session":{"desc":"Changes or sets the current debugging level","params":[{"required":"yes","param":"int $debug_level"}],"returns":"void"},"apd_set_session_trace":{"desc":"Starts the session debugging","params":[{"required":"yes","param":"int $debug_level"},{"required":"no","param":"string $dump_directory = &#039;&#039;"}],"returns":"void"},"cairo_append_path":{"desc":"Appends a path to current path","params":[{"required":"yes","param":"CairoPath $path"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_arc":{"desc":"Adds a circular arc","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $radius"},{"required":"yes","param":"float $angle1"},{"required":"yes","param":"float $angle2"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_arc_negative":{"desc":"Adds a negative arc","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $radius"},{"required":"yes","param":"float $angle1"},{"required":"yes","param":"float $angle2"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_clip":{"desc":"Establishes a new clip region","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_clip_preserve":{"desc":"Establishes a new clip region from the current clip","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_close_path":{"desc":"Closes the current path","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_copy_page":{"desc":"The copyPage purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_curve_to":{"desc":"Adds a curve","params":[{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $x3"},{"required":"yes","param":"float $y3"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_fill":{"desc":"Fills the current path","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_fill_preserve":{"desc":"Fills and preserve the current path","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_font_options_merge":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"CairoFontOptions $other"}],"returns":"void"},"cairo_font_options_set_antialias":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"int $antialias"}],"returns":"void"},"cairo_font_options_set_hint_metrics":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"int $hint_metrics"}],"returns":"void"},"cairo_font_options_set_hint_style":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"int $hint_style"}],"returns":"void"},"cairo_font_options_set_subpixel_order":{"desc":"Description","params":[{"required":"yes","param":"CairoFontOptions $options"},{"required":"yes","param":"int $subpixel_order"}],"returns":"void"},"cairo_get_font_face":{"desc":"The getFontFace purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_font_matrix":{"desc":"The getFontMatrix purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_font_options":{"desc":"The getFontOptions purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_group_target":{"desc":"The getGroupTarget purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_matrix":{"desc":"The getMatrix purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_scaled_font":{"desc":"The getScaledFont purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_source":{"desc":"The getSource purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_get_target":{"desc":"The getTarget purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_glyph_path":{"desc":"The glyphPath purpose","params":[{"required":"yes","param":"array $glyphs"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_identity_matrix":{"desc":"The identityMatrix purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_line_to":{"desc":"The lineTo purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_mask":{"desc":"The mask purpose","params":[{"required":"yes","param":"CairoPattern $pattern"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_mask_surface":{"desc":"The maskSurface purpose","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"no","param":"string $x = &#039;&#039;"},{"required":"no","param":"string $y = &#039;&#039;"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_matrix_invert":{"desc":"Description","params":[{"required":"yes","param":"CairoMatrix $matrix"}],"returns":"void"},"cairo_matrix_rotate":{"desc":"Description","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"float $radians"}],"returns":"void"},"cairo_matrix_scale":{"desc":"Applies scaling to a matrix","params":[{"required":"yes","param":"float $sx"},{"required":"yes","param":"float $sy"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_matrix_translate":{"desc":"Description","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"float $tx"},{"required":"yes","param":"float $ty"}],"returns":"void"},"cairo_move_to":{"desc":"The moveTo purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_new_path":{"desc":"The newPath purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_new_sub_path":{"desc":"The newSubPath purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_paint":{"desc":"The paint purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_paint_with_alpha":{"desc":"The paintWithAlpha purpose","params":[{"required":"yes","param":"string $alpha"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_pattern_add_color_stop_rgb":{"desc":"Description","params":[{"required":"yes","param":"CairoGradientPattern $pattern"},{"required":"yes","param":"float $offset"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"}],"returns":"void"},"cairo_pattern_add_color_stop_rgba":{"desc":"Description","params":[{"required":"yes","param":"CairoGradientPattern $pattern"},{"required":"yes","param":"float $offset"},{"required":"yes","param":"float $red"},{"required":"yes","param":"float $green"},{"required":"yes","param":"float $blue"},{"required":"yes","param":"float $alpha"}],"returns":"void"},"cairo_pattern_set_extend":{"desc":"Description","params":[{"required":"yes","param":"string $pattern"},{"required":"yes","param":"string $extend"}],"returns":"void"},"cairo_pattern_set_filter":{"desc":"Description","params":[{"required":"yes","param":"CairoSurfacePattern $pattern"},{"required":"yes","param":"int $filter"}],"returns":"void"},"cairo_pattern_set_matrix":{"desc":"Description","params":[{"required":"yes","param":"CairoPattern $pattern"},{"required":"yes","param":"CairoMatrix $matrix"}],"returns":"void"},"cairo_pdf_surface_set_size":{"desc":"Description","params":[{"required":"yes","param":"CairoPdfSurface $surface"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"void"},"cairo_pop_group":{"desc":"The popGroup purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_pop_group_to_source":{"desc":"The popGroupToSource purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_ps_surface_dsc_begin_page_setup":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"}],"returns":"void"},"cairo_ps_surface_dsc_begin_setup":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"}],"returns":"void"},"cairo_ps_surface_dsc_comment":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"},{"required":"yes","param":"string $comment"}],"returns":"void"},"cairo_ps_surface_restrict_to_level":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"},{"required":"yes","param":"int $level"}],"returns":"void"},"cairo_ps_surface_set_eps":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"},{"required":"yes","param":"bool $level"}],"returns":"void"},"cairo_ps_surface_set_size":{"desc":"Description","params":[{"required":"yes","param":"CairoPsSurface $surface"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"void"},"cairo_push_group":{"desc":"The pushGroup purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_push_group_with_content":{"desc":"The pushGroupWithContent purpose","params":[{"required":"yes","param":"string $content"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_rectangle":{"desc":"The rectangle purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"string $width"},{"required":"yes","param":"string $height"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_rel_curve_to":{"desc":"The relCurveTo purpose","params":[{"required":"yes","param":"string $x1"},{"required":"yes","param":"string $y1"},{"required":"yes","param":"string $x2"},{"required":"yes","param":"string $y2"},{"required":"yes","param":"string $x3"},{"required":"yes","param":"string $y3"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_rel_line_to":{"desc":"The relLineTo purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_rel_move_to":{"desc":"The relMoveTo purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_reset_clip":{"desc":"The resetClip purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_restore":{"desc":"The restore purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_rotate":{"desc":"The rotate purpose","params":[{"required":"yes","param":"string $sx"},{"required":"yes","param":"string $sy"},{"required":"yes","param":"CairoContext $context"},{"required":"yes","param":"string $angle"}],"returns":"void"},"cairo_save":{"desc":"The save purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_scale":{"desc":"The scale purpose","params":[{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_select_font_face":{"desc":"The selectFontFace purpose","params":[{"required":"yes","param":"string $family"},{"required":"no","param":"string $slant = &#039;&#039;"},{"required":"no","param":"string $weight = &#039;&#039;"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_antialias":{"desc":"The setAntialias purpose","params":[{"required":"no","param":"string $antialias = &#039;&#039;"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_dash":{"desc":"The setDash purpose","params":[{"required":"yes","param":"array $dashes"},{"required":"no","param":"string $offset = &#039;&#039;"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_fill_rule":{"desc":"The setFillRule purpose","params":[{"required":"yes","param":"string $setting"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_font_face":{"desc":"The setFontFace purpose","params":[{"required":"yes","param":"CairoFontFace $fontface"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_font_matrix":{"desc":"The setFontMatrix purpose","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_font_options":{"desc":"The setFontOptions purpose","params":[{"required":"yes","param":"CairoFontOptions $fontoptions"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_font_size":{"desc":"The setFontSize purpose","params":[{"required":"yes","param":"string $size"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_line_cap":{"desc":"The setLineCap purpose","params":[{"required":"yes","param":"string $setting"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_line_join":{"desc":"The setLineJoin purpose","params":[{"required":"yes","param":"string $setting"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_line_width":{"desc":"The setLineWidth purpose","params":[{"required":"yes","param":"string $width"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_matrix":{"desc":"The setMatrix purpose","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_miter_limit":{"desc":"The setMiterLimit purpose","params":[{"required":"yes","param":"string $limit"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_operator":{"desc":"The setOperator purpose","params":[{"required":"yes","param":"string $setting"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_scaled_font":{"desc":"The setScaledFont purpose","params":[{"required":"yes","param":"CairoScaledFont $scaledfont"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_source":{"desc":"The setSourceRGBA purpose","params":[{"required":"yes","param":"string $red"},{"required":"yes","param":"string $green"},{"required":"yes","param":"string $blue"},{"required":"yes","param":"string $alpha"},{"required":"yes","param":"CairoContext $context"},{"required":"yes","param":"CairoPattern $pattern"}],"returns":"void"},"cairo_set_source_surface":{"desc":"The setSourceSurface purpose","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"no","param":"string $x = &#039;&#039;"},{"required":"no","param":"string $y = &#039;&#039;"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_set_tolerance":{"desc":"The setTolerance purpose","params":[{"required":"yes","param":"string $tolerance"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_show_page":{"desc":"The showPage purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_show_text":{"desc":"The showText purpose","params":[{"required":"yes","param":"string $text"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_stroke":{"desc":"The stroke purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_stroke_preserve":{"desc":"The strokePreserve purpose","params":[{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_surface_copy_page":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"void"},"cairo_surface_finish":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"void"},"cairo_surface_flush":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"void"},"cairo_surface_mark_dirty":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"void"},"cairo_surface_mark_dirty_rectangle":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"}],"returns":"void"},"cairo_surface_set_device_offset":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"void"},"cairo_surface_set_fallback_resolution":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"void"},"cairo_surface_show_page":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"}],"returns":"void"},"cairo_surface_write_to_png":{"desc":"Description","params":[{"required":"yes","param":"CairoSurface $surface"},{"required":"yes","param":"resource $stream"}],"returns":"void"},"cairo_svg_surface_restrict_to_version":{"desc":"Description","params":[{"required":"yes","param":"CairoSvgSurface $surface"},{"required":"yes","param":"int $version"}],"returns":"void"},"cairo_text_path":{"desc":"The textPath purpose","params":[{"required":"yes","param":"string $string"},{"required":"yes","param":"CairoContext $context"},{"required":"yes","param":"string $text"}],"returns":"void"},"cairo_transform":{"desc":"The transform purpose","params":[{"required":"yes","param":"CairoMatrix $matrix"},{"required":"yes","param":"CairoContext $context"}],"returns":"void"},"cairo_translate":{"desc":"The translate purpose","params":[{"required":"yes","param":"string $tx"},{"required":"yes","param":"string $ty"},{"required":"yes","param":"CairoContext $context"},{"required":"yes","param":"string $x"},{"required":"yes","param":"string $y"}],"returns":"void"},"clearstatcache":{"desc":"Clears file status cache","params":[{"required":"no","param":"bool $clear_realpath_cache = false"},{"required":"no","param":"string $filename = &#039;&#039;"}],"returns":"void"},"closedir":{"desc":"Close directory handle","params":[{"required":"no","param":"resource $dir_handle = &#039;&#039;"}],"returns":"void"},"com_addref":{"desc":"Increases the components reference counter [deprecated]","params":[],"returns":"void"},"com_release":{"desc":"Decreases the components reference counter [deprecated]","params":[],"returns":"void"},"curl_close":{"desc":"Close a cURL session","params":[{"required":"yes","param":"resource $ch"}],"returns":"void"},"curl_multi_close":{"desc":"Close a set of cURL handles","params":[{"required":"yes","param":"resource $mh"}],"returns":"void"},"cyrus_authenticate":{"desc":"Authenticate against a Cyrus IMAP server","params":[{"required":"yes","param":"resource $connection"},{"required":"no","param":"string $mechlist = &#039;&#039;"},{"required":"no","param":"string $service = &#039;&#039;"},{"required":"no","param":"string $user = &#039;&#039;"},{"required":"no","param":"int $minssf = &#039;&#039;"},{"required":"no","param":"int $maxssf = &#039;&#039;"},{"required":"no","param":"string $authname = &#039;&#039;"},{"required":"no","param":"string $password = &#039;&#039;"}],"returns":"void"},"dba_close":{"desc":"Close a DBA database","params":[{"required":"yes","param":"resource $handle"}],"returns":"void"},"deaggregate":{"desc":"Removes the aggregated methods and properties from an object","params":[{"required":"yes","param":"object $object"},{"required":"no","param":"string $class_name = &#039;&#039;"}],"returns":"void"},"debug_print_backtrace":{"desc":"Prints a backtrace","params":[{"required":"no","param":"int $options = &#039;&#039;"},{"required":"no","param":"int $limit = &#039;&#039;"}],"returns":"void"},"debug_zval_dump":{"desc":"Dumps a string representation of an internal zend value to output","params":[{"required":"yes","param":"mixed $variable"}],"returns":"void"},"define_syslog_variables":{"desc":"Initializes all syslog related variables","params":[],"returns":"void"},"delete":{"desc":"See unlink or unset","params":[],"returns":"void"},"dio_close":{"desc":"Closes the file descriptor given by fd","params":[{"required":"yes","param":"resource $fd"}],"returns":"void"},"dir":{"desc":"Return an instance of the Directory class","params":[],"returns":"void"},"echo":{"desc":"Output one or more strings","params":[{"required":"yes","param":"string $arg1"},{"required":"no","param":"string $... = &#039;&#039;"}],"returns":"void"},"enchant_dict_add_to_personal":{"desc":"add a word to personal word list","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"}],"returns":"void"},"enchant_dict_add_to_session":{"desc":"add &#039;word&#039; to this spell-checking session","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $word"}],"returns":"void"},"enchant_dict_store_replacement":{"desc":"Add a correction for a word","params":[{"required":"yes","param":"resource $dict"},{"required":"yes","param":"string $mis"},{"required":"yes","param":"string $cor"}],"returns":"void"},"event_base_free":{"desc":"Destroy event base","params":[{"required":"yes","param":"resource $event_base"}],"returns":"void"},"event_buffer_fd_set":{"desc":"Change a buffered event file descriptor","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"resource $fd"}],"returns":"void"},"event_buffer_free":{"desc":"Destroy buffered event","params":[{"required":"yes","param":"resource $bevent"}],"returns":"void"},"event_buffer_timeout_set":{"desc":"Set read and write timeouts for a buffered event","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $read_timeout"},{"required":"yes","param":"int $write_timeout"}],"returns":"void"},"event_buffer_watermark_set":{"desc":"Set the watermarks for read and write events","params":[{"required":"yes","param":"resource $bevent"},{"required":"yes","param":"int $events"},{"required":"yes","param":"int $lowmark"},{"required":"yes","param":"int $highmark"}],"returns":"void"},"event_free":{"desc":"Free event resource","params":[{"required":"yes","param":"resource $event"}],"returns":"void"},"exit":{"desc":"Output a message and terminate the current script","params":[{"required":"yes","param":"int $status"}],"returns":"void"},"fam_close":{"desc":"Close FAM connection","params":[{"required":"yes","param":"resource $fam"}],"returns":"void"},"fbsql_set_characterset":{"desc":"Change input/output character set","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"int $characterset"},{"required":"no","param":"int $in_out_both = &#039;&#039;"}],"returns":"void"},"fbsql_set_transaction":{"desc":"Set the transaction locking and isolation","params":[{"required":"yes","param":"resource $link_identifier"},{"required":"yes","param":"int $locking"},{"required":"yes","param":"int $isolation"}],"returns":"void"},"fdf_close":{"desc":"Close an FDF document","params":[{"required":"yes","param":"resource $fdf_document"}],"returns":"void"},"fdf_header":{"desc":"Sets FDF-specific output headers","params":[],"returns":"void"},"flush":{"desc":"Flush the output buffer","params":[],"returns":"void"},"gc_disable":{"desc":"Deactivates the circular reference collector","params":[],"returns":"void"},"gc_enable":{"desc":"Activates the circular reference collector","params":[],"returns":"void"},"gmp_clrbit":{"desc":"Clear bit","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"int $index"}],"returns":"void"},"gmp_setbit":{"desc":"Set bit","params":[{"required":"yes","param":"resource $a"},{"required":"yes","param":"int $index"},{"required":"no","param":"bool $set_clear = true"}],"returns":"void"},"gnupg_seterrormode":{"desc":"Sets the mode for error_reporting","params":[{"required":"yes","param":"resource $identifier"},{"required":"yes","param":"int $errormode"}],"returns":"void"},"gupnp_context_set_subscription_timeout":{"desc":"Sets the event subscription timeout","params":[{"required":"yes","param":"resource $context"},{"required":"yes","param":"int $timeout"}],"returns":"void"},"header":{"desc":"Send a raw HTTP header","params":[{"required":"yes","param":"string $string"},{"required":"no","param":"bool $replace = true"},{"required":"no","param":"int $http_response_code = &#039;&#039;"}],"returns":"void"},"header_remove":{"desc":"Remove previously set headers","params":[{"required":"no","param":"string $name = &#039;&#039;"}],"returns":"void"},"http_throttle":{"desc":"HTTP throttling","params":[{"required":"yes","param":"float $sec"},{"required":"no","param":"int $bytes = 40960"}],"returns":"void"},"hw_connection_info":{"desc":"Prints information about the connection to Hyperwave server","params":[{"required":"yes","param":"int $link"}],"returns":"void"},"ibase_blob_add":{"desc":"Add data into a newly created blob","params":[{"required":"yes","param":"resource $blob_handle"},{"required":"yes","param":"string $data"}],"returns":"void"},"imagecolorset":{"desc":"Set the color for the specified palette index","params":[{"required":"yes","param":"resource $image"},{"required":"yes","param":"int $index"},{"required":"yes","param":"int $red"},{"required":"yes","param":"int $green"},{"required":"yes","param":"int $blue"},{"required":"no","param":"int $alpha = &#039;&#039;"}],"returns":"void"},"imagepalettecopy":{"desc":"Copy the palette from one image to another","params":[{"required":"yes","param":"resource $destination"},{"required":"yes","param":"resource $source"}],"returns":"void"},"ini_restore":{"desc":"Restores the value of a configuration option","params":[{"required":"yes","param":"string $varname"}],"returns":"void"},"java_last_exception_clear":{"desc":"Clear last Java exception","params":[],"returns":"void"},"libxml_clear_errors":{"desc":"Clear libxml error buffer","params":[],"returns":"void"},"libxml_set_streams_context":{"desc":"Set the streams context for the next libxml document load or write","params":[{"required":"yes","param":"resource $streams_context"}],"returns":"void"},"mailparse_msg_extract_part":{"desc":"Extracts/decodes a message section","params":[{"required":"yes","param":"resource $mimemail"},{"required":"yes","param":"string $msgbody"},{"required":"no","param":"callback $callbackfunc = &#039;&#039;"}],"returns":"void"},"maxdb_debug":{"desc":"Performs debugging operations","params":[{"required":"yes","param":"string $debug"}],"returns":"void"},"maxdb_disable_reads_from_master":{"desc":"Disable reads from master","params":[{"required":"yes","param":"resource $link"}],"returns":"void"},"maxdb_free_result":{"desc":"Frees the memory associated with a result","params":[{"required":"yes","param":"resource $result"}],"returns":"void"},"maxdb_server_end":{"desc":"Shut down the embedded server","params":[],"returns":"void"},"maxdb_stmt_free_result":{"desc":"Frees stored result memory for the given statement handle","params":[{"required":"yes","param":"resource $stmt"}],"returns":"void"},"ming_setcubicthreshold":{"desc":"Set cubic threshold","params":[{"required":"yes","param":"int $threshold"}],"returns":"void"},"ming_setscale":{"desc":"Set the global scaling factor.","params":[{"required":"yes","param":"float $scale"}],"returns":"void"},"ming_setswfcompression":{"desc":"Sets the SWF output compression","params":[{"required":"yes","param":"int $level"}],"returns":"void"},"ming_useconstants":{"desc":"Use constant pool","params":[{"required":"yes","param":"int $use"}],"returns":"void"},"ming_useswfversion":{"desc":"Sets the SWF version","params":[{"required":"yes","param":"int $version"}],"returns":"void"},"mqseries_back":{"desc":"MQSeries MQBACK","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_begin":{"desc":"MQseries MQBEGIN","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"array $beginOptions"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_close":{"desc":"MQSeries MQCLOSE","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $hobj"},{"required":"yes","param":"int $options"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_cmit":{"desc":"MQSeries MQCMIT","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_conn":{"desc":"MQSeries MQCONN","params":[{"required":"yes","param":"string $qManagerName"},{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_connx":{"desc":"MQSeries MQCONNX","params":[{"required":"yes","param":"string $qManagerName"},{"required":"yes","param":"array $connOptions"},{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_disc":{"desc":"MQSeries MQDISC","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_get":{"desc":"MQSeries MQGET","params":[{"required":"yes","param":"resource $hConn"},{"required":"yes","param":"resource $hObj"},{"required":"yes","param":"array $md"},{"required":"yes","param":"array $gmo"},{"required":"yes","param":"int $bufferLength"},{"required":"yes","param":"string $msg"},{"required":"yes","param":"int $data_length"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_inq":{"desc":"MQSeries MQINQ","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $hobj"},{"required":"yes","param":"int $selectorCount"},{"required":"yes","param":"array $selectors"},{"required":"yes","param":"int $intAttrCount"},{"required":"yes","param":"resource $intAttr"},{"required":"yes","param":"int $charAttrLength"},{"required":"yes","param":"resource $charAttr"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_open":{"desc":"MQSeries MQOPEN","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"array $objDesc"},{"required":"yes","param":"int $option"},{"required":"yes","param":"resource $hobj"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_put":{"desc":"MQSeries MQPUT","params":[{"required":"yes","param":"resource $hConn"},{"required":"yes","param":"resource $hObj"},{"required":"yes","param":"array $md"},{"required":"yes","param":"array $pmo"},{"required":"yes","param":"string $message"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_put1":{"desc":"MQSeries MQPUT1","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $objDesc"},{"required":"yes","param":"resource $msgDesc"},{"required":"yes","param":"resource $pmo"},{"required":"yes","param":"string $buffer"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"mqseries_set":{"desc":"MQSeries MQSET","params":[{"required":"yes","param":"resource $hconn"},{"required":"yes","param":"resource $hobj"},{"required":"yes","param":"int $selectorcount"},{"required":"yes","param":"array $selectors"},{"required":"yes","param":"int $intattrcount"},{"required":"yes","param":"array $intattrs"},{"required":"yes","param":"int $charattrlength"},{"required":"yes","param":"array $charattrs"},{"required":"yes","param":"resource $compCode"},{"required":"yes","param":"resource $reason"}],"returns":"void"},"msession_disconnect":{"desc":"Close connection to msession server","params":[],"returns":"void"},"msession_set_array":{"desc":"Set msession variables from an array","params":[{"required":"yes","param":"string $session"},{"required":"yes","param":"array $tuples"}],"returns":"void"},"mssql_min_error_severity":{"desc":"Sets the minimum error severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"mssql_min_message_severity":{"desc":"Sets the minimum message severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"mt_srand":{"desc":"Seed the better random number generator","params":[{"required":"no","param":"int $seed = &#039;&#039;"}],"returns":"void"},"mysqli_embedded_server_end":{"desc":"Stop embedded server","params":[],"returns":"void"},"mysqli_free_result":{"desc":"Frees the memory associated with a result","params":[{"required":"yes","param":"mysqli_result $result"}],"returns":"void"},"mysqli_set_local_infile_default":{"desc":"Unsets user defined handler for load local infile command","params":[{"required":"yes","param":"mysqli $link"}],"returns":"void"},"mysqli_stmt_data_seek":{"desc":"Seeks to an arbitrary row in statement result set","params":[{"required":"yes","param":"int $offset"},{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"void"},"mysqli_stmt_free_result":{"desc":"Frees stored result memory for the given statement handle","params":[{"required":"yes","param":"mysqli_stmt $stmt"}],"returns":"void"},"m_destroyengine":{"desc":"Free memory associated with IP/SSL connectivity","params":[],"returns":"void"},"ncurses_bkgdset":{"desc":"Control screen background","params":[{"required":"yes","param":"int $attrchar"}],"returns":"void"},"ncurses_filter":{"desc":"Set LINES for iniscr() and newterm() to 1","params":[],"returns":"void"},"ncurses_getmaxyx":{"desc":"Returns the size of a window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"void"},"ncurses_getyx":{"desc":"Returns the current cursor position for a window","params":[{"required":"yes","param":"resource $window"},{"required":"yes","param":"int $y"},{"required":"yes","param":"int $x"}],"returns":"void"},"ncurses_init":{"desc":"Initialize ncurses","params":[],"returns":"void"},"ncurses_noqiflush":{"desc":"Do not flush on signal characters","params":[],"returns":"void"},"ncurses_qiflush":{"desc":"Flush on signal characters","params":[],"returns":"void"},"ncurses_timeout":{"desc":"Set timeout for special key sequences","params":[{"required":"yes","param":"int $millisec"}],"returns":"void"},"ncurses_update_panels":{"desc":"Refreshes the virtual screen to reflect the relations between panels in the stack","params":[],"returns":"void"},"ncurses_use_env":{"desc":"Control use of environment information about terminal size","params":[{"required":"yes","param":"bool $flag"}],"returns":"void"},"newt_bell":{"desc":"Send a beep to the terminal","params":[],"returns":"void"},"newt_checkbox_set_flags":{"desc":"Configures checkbox resource","params":[{"required":"yes","param":"resource $checkbox"},{"required":"yes","param":"int $flags"},{"required":"yes","param":"int $sense"}],"returns":"void"},"newt_checkbox_set_value":{"desc":"Sets the value of the checkbox","params":[{"required":"yes","param":"resource $checkbox"},{"required":"yes","param":"string $value"}],"returns":"void"},"newt_checkbox_tree_add_item":{"desc":"Adds new item to the checkbox tree","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"string $text"},{"required":"yes","param":"mixed $data"},{"required":"yes","param":"int $flags"},{"required":"yes","param":"int $index"},{"required":"no","param":"int $... = &#039;&#039;"}],"returns":"void"},"newt_checkbox_tree_set_current":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_checkbox_tree_set_entry":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"mixed $data"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_checkbox_tree_set_entry_value":{"desc":"","params":[{"required":"yes","param":"resource $checkboxtree"},{"required":"yes","param":"mixed $data"},{"required":"yes","param":"string $value"}],"returns":"void"},"newt_checkbox_tree_set_width":{"desc":"","params":[{"required":"yes","param":"resource $checkbox_tree"},{"required":"yes","param":"int $width"}],"returns":"void"},"newt_clear_key_buffer":{"desc":"Discards the contents of the terminal&#039;s input buffer without  waiting for additional input","params":[],"returns":"void"},"newt_cls":{"desc":"","params":[],"returns":"void"},"newt_component_add_callback":{"desc":"","params":[{"required":"yes","param":"resource $component"},{"required":"yes","param":"mixed $func_name"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_component_takes_focus":{"desc":"","params":[{"required":"yes","param":"resource $component"},{"required":"yes","param":"bool $takes_focus"}],"returns":"void"},"newt_cursor_off":{"desc":"","params":[],"returns":"void"},"newt_cursor_on":{"desc":"","params":[],"returns":"void"},"newt_delay":{"desc":"","params":[{"required":"yes","param":"int $microseconds"}],"returns":"void"},"newt_draw_form":{"desc":"","params":[{"required":"yes","param":"resource $form"}],"returns":"void"},"newt_draw_root_text":{"desc":"Displays the string text at the position indicated","params":[{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_entry_set":{"desc":"","params":[{"required":"yes","param":"resource $entry"},{"required":"yes","param":"string $value"},{"required":"no","param":"bool $cursor_at_end = &#039;&#039;"}],"returns":"void"},"newt_entry_set_filter":{"desc":"","params":[{"required":"yes","param":"resource $entry"},{"required":"yes","param":"callback $filter"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_entry_set_flags":{"desc":"","params":[{"required":"yes","param":"resource $entry"},{"required":"yes","param":"int $flags"},{"required":"yes","param":"int $sense"}],"returns":"void"},"newt_form_add_component":{"desc":"Adds a single component to the form","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"resource $component"}],"returns":"void"},"newt_form_add_components":{"desc":"Add several components to the form","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"array $components"}],"returns":"void"},"newt_form_add_hot_key":{"desc":"","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"int $key"}],"returns":"void"},"newt_form_destroy":{"desc":"Destroys a form","params":[{"required":"yes","param":"resource $form"}],"returns":"void"},"newt_form_run":{"desc":"Runs a form","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"array $exit_struct"}],"returns":"void"},"newt_form_set_background":{"desc":"","params":[{"required":"yes","param":"resource $from"},{"required":"yes","param":"int $background"}],"returns":"void"},"newt_form_set_height":{"desc":"","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"int $height"}],"returns":"void"},"newt_form_set_size":{"desc":"","params":[{"required":"yes","param":"resource $form"}],"returns":"void"},"newt_form_set_timer":{"desc":"","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"int $milliseconds"}],"returns":"void"},"newt_form_set_width":{"desc":"","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"int $width"}],"returns":"void"},"newt_form_watch_fd":{"desc":"","params":[{"required":"yes","param":"resource $form"},{"required":"yes","param":"resource $stream"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"void"},"newt_get_screen_size":{"desc":"Fills in the passed references with the current size of the  terminal","params":[{"required":"yes","param":"int $cols"},{"required":"yes","param":"int $rows"}],"returns":"void"},"newt_grid_add_components_to_form":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"resource $form"},{"required":"yes","param":"bool $recurse"}],"returns":"void"},"newt_grid_free":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"bool $recurse"}],"returns":"void"},"newt_grid_get_size":{"desc":"","params":[{"required":"yes","param":"resouce $grid"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"}],"returns":"void"},"newt_grid_place":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"}],"returns":"void"},"newt_grid_set_field":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"int $col"},{"required":"yes","param":"int $row"},{"required":"yes","param":"int $type"},{"required":"yes","param":"resource $val"},{"required":"yes","param":"int $pad_left"},{"required":"yes","param":"int $pad_top"},{"required":"yes","param":"int $pad_right"},{"required":"yes","param":"int $pad_bottom"},{"required":"yes","param":"int $anchor"},{"required":"no","param":"int $flags = &#039;&#039;"}],"returns":"void"},"newt_grid_wrapped_window":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"string $title"}],"returns":"void"},"newt_grid_wrapped_window_at":{"desc":"","params":[{"required":"yes","param":"resource $grid"},{"required":"yes","param":"string $title"},{"required":"yes","param":"int $left"},{"required":"yes","param":"int $top"}],"returns":"void"},"newt_label_set_text":{"desc":"","params":[{"required":"yes","param":"resource $label"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_listbox_append_entry":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"string $text"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_listbox_clear":{"desc":"","params":[{"required":"yes","param":"resource $listobx"}],"returns":"void"},"newt_listbox_clear_selection":{"desc":"","params":[{"required":"yes","param":"resource $listbox"}],"returns":"void"},"newt_listbox_delete_entry":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"mixed $key"}],"returns":"void"},"newt_listbox_insert_entry":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"string $text"},{"required":"yes","param":"mixed $data"},{"required":"yes","param":"mixed $key"}],"returns":"void"},"newt_listbox_select_item":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"mixed $key"},{"required":"yes","param":"int $sense"}],"returns":"void"},"newt_listbox_set_current":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"int $num"}],"returns":"void"},"newt_listbox_set_current_by_key":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"mixed $key"}],"returns":"void"},"newt_listbox_set_data":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"int $num"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_listbox_set_entry":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"int $num"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_listbox_set_width":{"desc":"","params":[{"required":"yes","param":"resource $listbox"},{"required":"yes","param":"int $width"}],"returns":"void"},"newt_listitem_set":{"desc":"","params":[{"required":"yes","param":"resource $item"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_pop_help_line":{"desc":"Replaces the current help line with the one from the stack","params":[],"returns":"void"},"newt_pop_window":{"desc":"Removes the top window from the display","params":[],"returns":"void"},"newt_push_help_line":{"desc":"Saves the current help line on a stack, and displays the new line","params":[{"required":"no","param":"string $text = &#039;&#039;"}],"returns":"void"},"newt_redraw_help_line":{"desc":"","params":[],"returns":"void"},"newt_refresh":{"desc":"Updates modified portions of the screen","params":[],"returns":"void"},"newt_resize_screen":{"desc":"","params":[{"required":"no","param":"bool $redraw = &#039;&#039;"}],"returns":"void"},"newt_resume":{"desc":"Resume using the newt interface after calling  newt_suspend","params":[],"returns":"void"},"newt_scale_set":{"desc":"","params":[{"required":"yes","param":"resource $scale"},{"required":"yes","param":"int $amount"}],"returns":"void"},"newt_scrollbar_set":{"desc":"","params":[{"required":"yes","param":"resource $scrollbar"},{"required":"yes","param":"int $where"},{"required":"yes","param":"int $total"}],"returns":"void"},"newt_set_help_callback":{"desc":"","params":[{"required":"yes","param":"mixed $function"}],"returns":"void"},"newt_set_suspend_callback":{"desc":"Set a callback function which gets invoked when user  presses the suspend key","params":[{"required":"yes","param":"callback $function"},{"required":"yes","param":"mixed $data"}],"returns":"void"},"newt_suspend":{"desc":"Tells newt to return the terminal to its initial state","params":[],"returns":"void"},"newt_textbox_set_height":{"desc":"","params":[{"required":"yes","param":"resource $textbox"},{"required":"yes","param":"int $height"}],"returns":"void"},"newt_textbox_set_text":{"desc":"","params":[{"required":"yes","param":"resource $textbox"},{"required":"yes","param":"string $text"}],"returns":"void"},"newt_wait_for_key":{"desc":"Doesn&#039;t return until a key has been pressed","params":[],"returns":"void"},"newt_win_message":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $button_text"},{"required":"yes","param":"string $format"},{"required":"no","param":"mixed $args = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"void"},"newt_win_messagev":{"desc":"","params":[{"required":"yes","param":"string $title"},{"required":"yes","param":"string $button_text"},{"required":"yes","param":"string $format"},{"required":"yes","param":"array $args"}],"returns":"void"},"ob_clean":{"desc":"Clean (erase) the output buffer","params":[],"returns":"void"},"ob_flush":{"desc":"Flush (send) the output buffer","params":[],"returns":"void"},"ob_implicit_flush":{"desc":"Turn implicit flush on/off","params":[{"required":"no","param":"int $flag = true"}],"returns":"void"},"oci_internal_debug":{"desc":"Enables or disables internal debug output","params":[{"required":"yes","param":"bool $onoff"}],"returns":"void"},"odbc_close":{"desc":"Close an ODBC connection","params":[{"required":"yes","param":"resource $connection_id"}],"returns":"void"},"odbc_close_all":{"desc":"Close all ODBC connections","params":[],"returns":"void"},"openssl_free_key":{"desc":"Free key resource","params":[{"required":"yes","param":"resource $key_identifier"}],"returns":"void"},"openssl_pkey_free":{"desc":"Frees a private key","params":[{"required":"yes","param":"resource $key"}],"returns":"void"},"openssl_x509_free":{"desc":"Free certificate resource","params":[{"required":"yes","param":"resource $x509cert"}],"returns":"void"},"overload":{"desc":"Enable property and method call overloading for a class","params":[{"required":"yes","param":"string $class_name"}],"returns":"void"},"ovrimos_close":{"desc":"Closes the connection to ovrimos","params":[{"required":"yes","param":"int $connection"}],"returns":"void"},"parse_str":{"desc":"Parses the string into variables","params":[{"required":"yes","param":"string $str"},{"required":"no","param":"array $arr = &#039;&#039;"}],"returns":"void"},"passthru":{"desc":"Execute an external program and display raw output","params":[{"required":"yes","param":"string $command"},{"required":"no","param":"int $return_var = &#039;&#039;"}],"returns":"void"},"pcntl_exec":{"desc":"Executes specified program in current process space","params":[{"required":"yes","param":"string $path"},{"required":"no","param":"array $args = &#039;&#039;"},{"required":"no","param":"array $envs = &#039;&#039;"}],"returns":"void"},"printer_abort":{"desc":"Deletes the printer&#039;s spool file","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"void"},"printer_close":{"desc":"Close an open printer connection","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"void"},"printer_create_dc":{"desc":"Create a new device context","params":[{"required":"yes","param":"resource $printer_handle"}],"returns":"void"},"printer_delete_brush":{"desc":"Delete a brush","params":[{"required":"yes","param":"resource $brush_handle"}],"returns":"void"},"printer_delete_font":{"desc":"Delete a font","params":[{"required":"yes","param":"resource $font_handle"}],"returns":"void"},"printer_delete_pen":{"desc":"Delete a pen","params":[{"required":"yes","param":"resource $pen_handle"}],"returns":"void"},"printer_draw_chord":{"desc":"Draw a chord","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $rec_x"},{"required":"yes","param":"int $rec_y"},{"required":"yes","param":"int $rec_x1"},{"required":"yes","param":"int $rec_y1"},{"required":"yes","param":"int $rad_x"},{"required":"yes","param":"int $rad_y"},{"required":"yes","param":"int $rad_x1"},{"required":"yes","param":"int $rad_y1"}],"returns":"void"},"printer_draw_elipse":{"desc":"Draw an ellipse","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $ul_x"},{"required":"yes","param":"int $ul_y"},{"required":"yes","param":"int $lr_x"},{"required":"yes","param":"int $lr_y"}],"returns":"void"},"printer_draw_line":{"desc":"Draw a line","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $from_x"},{"required":"yes","param":"int $from_y"},{"required":"yes","param":"int $to_x"},{"required":"yes","param":"int $to_y"}],"returns":"void"},"printer_draw_pie":{"desc":"Draw a pie","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $rec_x"},{"required":"yes","param":"int $rec_y"},{"required":"yes","param":"int $rec_x1"},{"required":"yes","param":"int $rec_y1"},{"required":"yes","param":"int $rad1_x"},{"required":"yes","param":"int $rad1_y"},{"required":"yes","param":"int $rad2_x"},{"required":"yes","param":"int $rad2_y"}],"returns":"void"},"printer_draw_rectangle":{"desc":"Draw a rectangle","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $ul_x"},{"required":"yes","param":"int $ul_y"},{"required":"yes","param":"int $lr_x"},{"required":"yes","param":"int $lr_y"}],"returns":"void"},"printer_draw_roundrect":{"desc":"Draw a rectangle with rounded corners","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"int $ul_x"},{"required":"yes","param":"int $ul_y"},{"required":"yes","param":"int $lr_x"},{"required":"yes","param":"int $lr_y"},{"required":"yes","param":"int $width"},{"required":"yes","param":"int $height"}],"returns":"void"},"printer_draw_text":{"desc":"Draw text","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"string $text"},{"required":"yes","param":"int $x"},{"required":"yes","param":"int $y"}],"returns":"void"},"printer_select_brush":{"desc":"Select a brush","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"resource $brush_handle"}],"returns":"void"},"printer_select_font":{"desc":"Select a font","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"resource $font_handle"}],"returns":"void"},"printer_select_pen":{"desc":"Select a pen","params":[{"required":"yes","param":"resource $printer_handle"},{"required":"yes","param":"resource $pen_handle"}],"returns":"void"},"ps_close_image":{"desc":"Closes image and frees memory","params":[{"required":"yes","param":"resource $psdoc"},{"required":"yes","param":"int $imageid"}],"returns":"void"},"px_set_tablename":{"desc":"Sets the name of a table (deprecated)","params":[{"required":"yes","param":"resource $pxdoc"},{"required":"yes","param":"string $name"}],"returns":"void"},"readline_callback_read_char":{"desc":"Reads a character and informs the readline callback interface when a line is received","params":[],"returns":"void"},"readline_on_new_line":{"desc":"Inform readline that the cursor has moved to a new line","params":[],"returns":"void"},"readline_redisplay":{"desc":"Redraws the display","params":[],"returns":"void"},"register_shutdown_function":{"desc":"Register a function for execution on shutdown","params":[{"required":"yes","param":"callback $function"},{"required":"no","param":"mixed $parameter = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"void"},"restore_include_path":{"desc":"Restores the value of the include_path configuration option","params":[],"returns":"void"},"rewinddir":{"desc":"Rewind directory handle","params":[{"required":"no","param":"resource $dir_handle = &#039;&#039;"}],"returns":"void"},"Runkit_Sandbox_Parent":{"desc":"Runkit Anti-Sandbox Class","params":[],"returns":"void"},"session_set_cookie_params":{"desc":"Set the session cookie parameters","params":[{"required":"yes","param":"int $lifetime"},{"required":"no","param":"string $path = &#039;&#039;"},{"required":"no","param":"string $domain = &#039;&#039;"},{"required":"no","param":"bool $secure = false"},{"required":"no","param":"bool $httponly = false"}],"returns":"void"},"session_unset":{"desc":"Free all session variables","params":[],"returns":"void"},"session_write_close":{"desc":"Write session data and end session","params":[],"returns":"void"},"setproctitle":{"desc":"Set the process title","params":[{"required":"yes","param":"string $title"}],"returns":"void"},"set_time_limit":{"desc":"Limits the maximum execution time","params":[{"required":"yes","param":"int $seconds"}],"returns":"void"},"shmop_close":{"desc":"Close shared memory block","params":[{"required":"yes","param":"int $shmid"}],"returns":"void"},"snmp_set_oid_numeric_print":{"desc":"Return all objects including their respective object id within the specified one","params":[{"required":"yes","param":"int $oid_format"}],"returns":"void"},"socket_clear_error":{"desc":"Clears the error on the socket or the last error code","params":[{"required":"no","param":"resource $socket = &#039;&#039;"}],"returns":"void"},"socket_close":{"desc":"Closes a socket resource","params":[{"required":"yes","param":"resource $socket"}],"returns":"void"},"spl_autoload":{"desc":"Default implementation for __autoload()","params":[{"required":"yes","param":"string $class_name"},{"required":"no","param":"string $file_extensions = spl_autoload_extensions("}],"returns":"void"},"spl_autoload_call":{"desc":"Try all registered __autoload() function to load the requested class","params":[{"required":"yes","param":"string $class_name"}],"returns":"void"},"sqlite_busy_timeout":{"desc":"Set busy timeout duration, or disable busy handlers","params":[{"required":"yes","param":"resource $dbhandle"},{"required":"yes","param":"int $milliseconds"}],"returns":"void"},"sqlite_close":{"desc":"Closes an open SQLite database","params":[{"required":"yes","param":"resource $dbhandle"}],"returns":"void"},"sqlite_create_aggregate":{"desc":"Register an aggregating UDF for use in SQL statements","params":[{"required":"yes","param":"resource $dbhandle"},{"required":"yes","param":"string $function_name"},{"required":"yes","param":"callback $step_func"},{"required":"yes","param":"callback $finalize_func"},{"required":"no","param":"int $num_args = -1"}],"returns":"void"},"sqlite_create_function":{"desc":"Registers a &quot;regular&quot; User Defined Function for use in SQL statements","params":[{"required":"yes","param":"resource $dbhandle"},{"required":"yes","param":"string $function_name"},{"required":"yes","param":"callback $callback"},{"required":"no","param":"int $num_args = -1"}],"returns":"void"},"srand":{"desc":"Seed the random number generator","params":[{"required":"no","param":"int $seed = &#039;&#039;"}],"returns":"void"},"stats_rand_setall":{"desc":"Not documented","params":[{"required":"yes","param":"int $iseed1"},{"required":"yes","param":"int $iseed2"}],"returns":"void"},"stomp_set_read_timeout":{"desc":"Sets read timeout","params":[{"required":"yes","param":"integer $seconds"},{"required":"no","param":"integer $microseconds = &#039;&#039;"},{"required":"yes","param":"resource $link"}],"returns":"void"},"stream_bucket_append":{"desc":"Append bucket to brigade","params":[{"required":"yes","param":"resource $brigade"},{"required":"yes","param":"resource $bucket"}],"returns":"void"},"stream_bucket_prepend":{"desc":"Prepend bucket to brigade","params":[{"required":"yes","param":"resource $brigade"},{"required":"yes","param":"resource $bucket"}],"returns":"void"},"svn_auth_set_parameter":{"desc":"Sets an authentication parameter","params":[{"required":"yes","param":"string $key"},{"required":"yes","param":"string $value"}],"returns":"void"},"swf_actiongeturl":{"desc":"Get a URL from a Shockwave Flash movie","params":[{"required":"yes","param":"string $url"},{"required":"yes","param":"string $target"}],"returns":"void"},"swf_actiongotoframe":{"desc":"Play a frame and then stop","params":[{"required":"yes","param":"int $framenumber"}],"returns":"void"},"swf_actiongotolabel":{"desc":"Display a frame with the specified label","params":[{"required":"yes","param":"string $label"}],"returns":"void"},"swf_actionnextframe":{"desc":"Go forward one frame","params":[],"returns":"void"},"swf_actionplay":{"desc":"Start playing the flash movie from the current frame","params":[],"returns":"void"},"swf_actionprevframe":{"desc":"Go backwards one frame","params":[],"returns":"void"},"swf_actionsettarget":{"desc":"Set the context for actions","params":[{"required":"yes","param":"string $target"}],"returns":"void"},"swf_actionstop":{"desc":"Stop playing the flash movie at the current frame","params":[],"returns":"void"},"swf_actiontogglequality":{"desc":"Toggle between low and high quality","params":[],"returns":"void"},"swf_actionwaitforframe":{"desc":"Skip actions if a frame has not been loaded","params":[{"required":"yes","param":"int $framenumber"},{"required":"yes","param":"int $skipcount"}],"returns":"void"},"swf_addbuttonrecord":{"desc":"Controls location, appearance and active area of the current button","params":[{"required":"yes","param":"int $states"},{"required":"yes","param":"int $shapeid"},{"required":"yes","param":"int $depth"}],"returns":"void"},"swf_addcolor":{"desc":"Set the global add color to the rgba value specified","params":[{"required":"yes","param":"float $r"},{"required":"yes","param":"float $g"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $a"}],"returns":"void"},"swf_closefile":{"desc":"Close the current Shockwave Flash file","params":[{"required":"no","param":"int $return_file = &#039;&#039;"}],"returns":"void"},"swf_definebitmap":{"desc":"Define a bitmap","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"string $image_name"}],"returns":"void"},"swf_definefont":{"desc":"Defines a font","params":[{"required":"yes","param":"int $fontid"},{"required":"yes","param":"string $fontname"}],"returns":"void"},"swf_defineline":{"desc":"Define a line","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $width"}],"returns":"void"},"swf_definepoly":{"desc":"Define a polygon","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"array $coords"},{"required":"yes","param":"int $npoints"},{"required":"yes","param":"float $width"}],"returns":"void"},"swf_definerect":{"desc":"Define a rectangle","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $width"}],"returns":"void"},"swf_definetext":{"desc":"Define a text string","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"string $str"},{"required":"yes","param":"int $docenter"}],"returns":"void"},"swf_endbutton":{"desc":"End the definition of the current button","params":[],"returns":"void"},"swf_enddoaction":{"desc":"End the current action","params":[],"returns":"void"},"swf_endshape":{"desc":"Completes the definition of the current shape","params":[],"returns":"void"},"swf_endsymbol":{"desc":"End the definition of a symbol","params":[],"returns":"void"},"swf_fontsize":{"desc":"Change the font size","params":[{"required":"yes","param":"float $size"}],"returns":"void"},"swf_fontslant":{"desc":"Set the font slant","params":[{"required":"yes","param":"float $slant"}],"returns":"void"},"swf_fonttracking":{"desc":"Set the current font tracking","params":[{"required":"yes","param":"float $tracking"}],"returns":"void"},"swf_labelframe":{"desc":"Label the current frame","params":[{"required":"yes","param":"string $name"}],"returns":"void"},"swf_lookat":{"desc":"Define a viewing transformation","params":[{"required":"yes","param":"float $view_x"},{"required":"yes","param":"float $view_y"},{"required":"yes","param":"float $view_z"},{"required":"yes","param":"float $reference_x"},{"required":"yes","param":"float $reference_y"},{"required":"yes","param":"float $reference_z"},{"required":"yes","param":"float $twist"}],"returns":"void"},"swf_modifyobject":{"desc":"Modify an object","params":[{"required":"yes","param":"int $depth"},{"required":"yes","param":"int $how"}],"returns":"void"},"swf_mulcolor":{"desc":"Sets the global multiply color to the rgba value specified","params":[{"required":"yes","param":"float $r"},{"required":"yes","param":"float $g"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $a"}],"returns":"void"},"swf_oncondition":{"desc":"Describe a transition used to trigger an action list","params":[{"required":"yes","param":"int $transition"}],"returns":"void"},"swf_openfile":{"desc":"Open a new Shockwave Flash file","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"float $width"},{"required":"yes","param":"float $height"},{"required":"yes","param":"float $framerate"},{"required":"yes","param":"float $r"},{"required":"yes","param":"float $g"},{"required":"yes","param":"float $b"}],"returns":"void"},"swf_ortho":{"desc":"Defines an orthographic mapping of user coordinates onto the current viewport","params":[{"required":"yes","param":"float $xmin"},{"required":"yes","param":"float $xmax"},{"required":"yes","param":"float $ymin"},{"required":"yes","param":"float $ymax"},{"required":"yes","param":"float $zmin"},{"required":"yes","param":"float $zmax"}],"returns":"void"},"swf_ortho2":{"desc":"Defines 2D orthographic mapping of user coordinates onto the current viewport","params":[{"required":"yes","param":"float $xmin"},{"required":"yes","param":"float $xmax"},{"required":"yes","param":"float $ymin"},{"required":"yes","param":"float $ymax"}],"returns":"void"},"swf_perspective":{"desc":"Define a perspective projection transformation","params":[{"required":"yes","param":"float $fovy"},{"required":"yes","param":"float $aspect"},{"required":"yes","param":"float $near"},{"required":"yes","param":"float $far"}],"returns":"void"},"swf_placeobject":{"desc":"Place an object onto the screen","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"int $depth"}],"returns":"void"},"swf_polarview":{"desc":"Define the viewer&#039;s position with polar coordinates","params":[{"required":"yes","param":"float $dist"},{"required":"yes","param":"float $azimuth"},{"required":"yes","param":"float $incidence"},{"required":"yes","param":"float $twist"}],"returns":"void"},"swf_popmatrix":{"desc":"Restore a previous transformation matrix","params":[],"returns":"void"},"swf_posround":{"desc":"Enables or Disables the rounding of the translation when objects are placed or moved","params":[{"required":"yes","param":"int $round"}],"returns":"void"},"swf_pushmatrix":{"desc":"Push the current transformation matrix back onto the stack","params":[],"returns":"void"},"swf_removeobject":{"desc":"Remove an object","params":[{"required":"yes","param":"int $depth"}],"returns":"void"},"swf_rotate":{"desc":"Rotate the current transformation","params":[{"required":"yes","param":"float $angle"},{"required":"yes","param":"string $axis"}],"returns":"void"},"swf_scale":{"desc":"Scale the current transformation","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $z"}],"returns":"void"},"swf_setfont":{"desc":"Change the current font","params":[{"required":"yes","param":"int $fontid"}],"returns":"void"},"swf_setframe":{"desc":"Switch to a specified frame","params":[{"required":"yes","param":"int $framenumber"}],"returns":"void"},"swf_shapearc":{"desc":"Draw a circular arc","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $r"},{"required":"yes","param":"float $ang1"},{"required":"yes","param":"float $ang2"}],"returns":"void"},"swf_shapecurveto":{"desc":"Draw a quadratic bezier curve between two points","params":[{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"}],"returns":"void"},"swf_shapecurveto3":{"desc":"Draw a cubic bezier curve","params":[{"required":"yes","param":"float $x1"},{"required":"yes","param":"float $y1"},{"required":"yes","param":"float $x2"},{"required":"yes","param":"float $y2"},{"required":"yes","param":"float $x3"},{"required":"yes","param":"float $y3"}],"returns":"void"},"swf_shapefillbitmapclip":{"desc":"Set current fill mode to clipped bitmap","params":[{"required":"yes","param":"int $bitmapid"}],"returns":"void"},"swf_shapefillbitmaptile":{"desc":"Set current fill mode to tiled bitmap","params":[{"required":"yes","param":"int $bitmapid"}],"returns":"void"},"swf_shapefilloff":{"desc":"Turns off filling","params":[],"returns":"void"},"swf_shapefillsolid":{"desc":"Set the current fill style to the specified color","params":[{"required":"yes","param":"float $r"},{"required":"yes","param":"float $g"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $a"}],"returns":"void"},"swf_shapelinesolid":{"desc":"Set the current line style","params":[{"required":"yes","param":"float $r"},{"required":"yes","param":"float $g"},{"required":"yes","param":"float $b"},{"required":"yes","param":"float $a"},{"required":"yes","param":"float $width"}],"returns":"void"},"swf_shapelineto":{"desc":"Draw a line","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"void"},"swf_shapemoveto":{"desc":"Move the current position","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"}],"returns":"void"},"swf_showframe":{"desc":"Display the current frame","params":[],"returns":"void"},"swf_startbutton":{"desc":"Start the definition of a button","params":[{"required":"yes","param":"int $objid"},{"required":"yes","param":"int $type"}],"returns":"void"},"swf_startdoaction":{"desc":"Start a description of an action list for the current frame","params":[],"returns":"void"},"swf_startshape":{"desc":"Start a complex shape","params":[{"required":"yes","param":"int $objid"}],"returns":"void"},"swf_startsymbol":{"desc":"Define a symbol","params":[{"required":"yes","param":"int $objid"}],"returns":"void"},"swf_translate":{"desc":"Translate the current transformations","params":[{"required":"yes","param":"float $x"},{"required":"yes","param":"float $y"},{"required":"yes","param":"float $z"}],"returns":"void"},"swf_viewport":{"desc":"Select an area for future drawing","params":[{"required":"yes","param":"float $xmin"},{"required":"yes","param":"float $xmax"},{"required":"yes","param":"float $ymin"},{"required":"yes","param":"float $ymax"}],"returns":"void"},"sybase_deadlock_retry_count":{"desc":"Sets the deadlock retry count","params":[{"required":"yes","param":"int $retry_count"}],"returns":"void"},"sybase_min_client_severity":{"desc":"Sets minimum client severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"sybase_min_error_severity":{"desc":"Sets minimum error severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"sybase_min_message_severity":{"desc":"Sets minimum message severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"sybase_min_server_severity":{"desc":"Sets minimum server severity","params":[{"required":"yes","param":"int $severity"}],"returns":"void"},"tidy_load_config":{"desc":"Load an ASCII Tidy configuration file with the specified encoding","params":[{"required":"yes","param":"string $filename"},{"required":"yes","param":"string $encoding"}],"returns":"void"},"transliterator_transliterate":{"desc":"Transliterate a string","params":[{"required":"yes","param":"string $subject"},{"required":"no","param":"string $start = &#039;&#039;"},{"required":"no","param":"string $end = &#039;&#039;"}],"returns":"void"},"unregister_tick_function":{"desc":"De-register a function for execution on each tick","params":[{"required":"yes","param":"string $function_name"}],"returns":"void"},"unset":{"desc":"Unset a given variable","params":[{"required":"no","param":"mixed $var = &#039;&#039;"},{"required":"no","param":"mixed $... = &#039;&#039;"}],"returns":"void"},"usleep":{"desc":"Delay execution in microseconds","params":[{"required":"yes","param":"int $micro_seconds"}],"returns":"void"},"variant_set":{"desc":"Assigns a new value for a variant object","params":[{"required":"yes","param":"variant $variant"},{"required":"yes","param":"mixed $value"}],"returns":"void"},"variant_set_type":{"desc":"Convert a variant into another type &quot;in-place&quot;","params":[{"required":"yes","param":"variant $variant"},{"required":"yes","param":"int $type"}],"returns":"void"},"w32api_set_call_method":{"desc":"Sets the calling method used","params":[{"required":"yes","param":"int $method"}],"returns":"void"},"xslt_free":{"desc":"Free XSLT processor","params":[{"required":"yes","param":"resource $xh"}],"returns":"void"},"xslt_set_base":{"desc":"Set the base URI for all XSLT transformations","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"string $uri"}],"returns":"void"},"xslt_set_encoding":{"desc":"Set the encoding for the parsing of XML documents","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"string $encoding"}],"returns":"void"},"xslt_set_error_handler":{"desc":"Set an error handler for a XSLT processor","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"mixed $handler"}],"returns":"void"},"xslt_set_log":{"desc":"Set the log file to write log messages to","params":[{"required":"yes","param":"resource $xh"},{"required":"no","param":"mixed $log = &#039;&#039;"}],"returns":"void"},"xslt_set_sax_handler":{"desc":"Set SAX handlers for a XSLT processor","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"array $handlers"}],"returns":"void"},"xslt_set_sax_handlers":{"desc":"Set the SAX handlers to be called when the XML document gets processed","params":[{"required":"yes","param":"resource $processor"},{"required":"yes","param":"array $handlers"}],"returns":"void"},"xslt_set_scheme_handler":{"desc":"Set Scheme handlers for a XSLT processor","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"array $handlers"}],"returns":"void"},"xslt_set_scheme_handlers":{"desc":"Set the scheme handlers for the XSLT processor","params":[{"required":"yes","param":"resource $xh"},{"required":"yes","param":"array $handlers"}],"returns":"void"},"yaz_ccl_conf":{"desc":"Configure CCL parser","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"array $config"}],"returns":"void"},"yaz_es":{"desc":"Prepares for an Extended Service Request","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"array $args"}],"returns":"void"},"yaz_itemorder":{"desc":"Prepares for Z39.50 Item Order with an ILL-Request package","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"array $args"}],"returns":"void"},"yaz_range":{"desc":"Specifies a range of records to retrieve","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"int $start"},{"required":"yes","param":"int $number"}],"returns":"void"},"yaz_scan":{"desc":"Prepares for a scan","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $type"},{"required":"yes","param":"string $startterm"},{"required":"no","param":"array $flags = &#039;&#039;"}],"returns":"void"},"yaz_schema":{"desc":"Specifies schema for retrieval","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $schema"}],"returns":"void"},"yaz_set_option":{"desc":"Sets one or more options for connection","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $name"},{"required":"yes","param":"string $value"},{"required":"yes","param":"array $options"}],"returns":"void"},"yaz_sort":{"desc":"Sets sorting criteria","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $criteria"}],"returns":"void"},"yaz_syntax":{"desc":"Specifies the preferred record syntax for retrieval","params":[{"required":"yes","param":"resource $id"},{"required":"yes","param":"string $syntax"}],"returns":"void"},"yp_all":{"desc":"Traverse the map and call a function on each entry","params":[{"required":"yes","param":"string $domain"},{"required":"yes","param":"string $map"},{"required":"yes","param":"string $callback"}],"returns":"void"},"zip_close":{"desc":"Close a ZIP file archive","params":[{"required":"yes","param":"resource $zip"}],"returns":"void"},"__halt_compiler":{"desc":"Halts the compiler execution","params":[],"returns":"void"}}' );